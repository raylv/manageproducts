/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "nw/epm/refapps/ext/prod/manage/Component-preload",
	"modules": {
		"nw/epm/refapps/ext/prod/manage/Component-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\t\"sap/ui/core/UIComponent\",\n\t\t\"./controller/Application\",\n\t\t\"./model/models\",\n\t\t\"sap/ui/Device\"\n\t], function(UIComponent, Application, models, Device) {\n\t\"use strict\";\n\n\tvar mRoutenames = {\n\t\tMASTER: \"Products\",\n\t\tDETAIL: \"ProductDetails\"\n\t};\n\n\treturn UIComponent.extend(\"nw.epm.refapps.ext.prod.manage.Component\", {\n\t\tmetadata: {\n\t\t\tname: \"xtit.shellTitle\",\n\t\t\tversion: \"2.0.11-SNAPSHOT\",\n\t\t\tincludes: [\"css/manageProductStyle.css\"],\n\t\t\tdependencies: {\n\t\t\t\tlibs: [\"sap.m\", \"sap.ushell\"],\n\t\t\t\tcomponents: []\n\t\t\t},\n\t\t\trootView: \"nw.epm.refapps.ext.prod.manage.view.App\",\n\t\t\tconfig: {\n\t\t\t\tresourceBundle: \"i18n/i18n.properties\",\n\t\t\t\ttitleResource: \"xtit.shellTitle\",\n\t\t\t\ticon: \"sap-icon://Fiori7/F1373\",\n\t\t\t\tfavIcon: \"icon/F0865_Manage_Products.ico\",\n\t\t\t\tphone: \"icon/launchicon/57_iPhone_Desktop_Launch.png\",\n\t\t\t\t\"phone@2\": \"icon/launchicon/114_iPhone-Retina_Web_Clip.png\",\n\t\t\t\ttablet: \"icon/launchicon/72_iPad_Desktop_Launch.png\",\n\t\t\t\t\"tablet@2\": \"icon/launchicon/144_iPad_Retina_Web_Clip.png\",\n\t\t\t\tserviceConfig: {\n\t\t\t\t\tname: \"EPM_REF_APPS_PROD_MAN_SRV\",\n\t\t\t\t\tserviceUrl: \"/sap/opu/odata/sap/EPM_REF_APPS_PROD_MAN_SRV\"\n\t\t\t\t}\n\t\t\t},\n\n\t\t\trouting: {\n\t\t\t\tconfig: {\n\t\t\t\t\trouterClass: \"sap.m.routing.Router\",\n\t\t\t\t\tviewType: \"XML\",\n\t\t\t\t\tviewPath: \"nw.epm.refapps.ext.prod.manage.view\", // common prefix\n\t\t\t\t\tcontrolId: \"fioriContent\",\n\t\t\t\t\tbypassed: {\n\t\t\t\t\t\ttarget: [\"master\", \"empty\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\troutes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: \"\",\n\t\t\t\t\t\tname: mRoutenames.MASTER,\n\t\t\t\t\t\ttarget: [\"object\", \"master\"]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: \"Product/{productID}\",\n\t\t\t\t\t\tname: mRoutenames.DETAIL,\n\t\t\t\t\t\ttarget: [\"master\", \"object\"]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\ttargets: {\n\t\t\t\t\tmaster: {\n\t\t\t\t\t\tviewName: \"S2_ProductMaster\",\n\t\t\t\t\t\tviewLevel: 1,\n\t\t\t\t\t\tcontrolAggregation: \"masterPages\"\n\t\t\t\t\t},\n\t\t\t\t\tobject: {\n\t\t\t\t\t\tviewName: \"S3_ProductDetail\",\n\t\t\t\t\t\tviewLevel: 2,\n\t\t\t\t\t\tcontrolAggregation: \"detailPages\"\n\t\t\t\t\t},\n\t\t\t\t\tempty: {\n\t\t\t\t\t\tviewName: \"EmptyPage\",\n\t\t\t\t\t\tviewLevel: 3,\n\t\t\t\t\t\tcontrolAggregation: \"detailPages\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tinit: function() {\n\t\t\tvar mConfig = this.getMetadata().getConfig();\n\n\t\t\t// create and set the ODataModel\n\t\t\tvar oModel = models.createODataModel({\n\t\t\t\turlParametersForEveryRequest: [\n\t\t\t\t\t\t\"sap-server\",\n\t\t\t\t\t\t\"sap-client\",\n\t\t\t\t\t\t\"sap-language\"\n\t\t\t\t\t],\n\t\t\t\turl: this.getMetadata().getConfig().serviceConfig.serviceUrl,\n\t\t\t\tconfig: {\n\t\t\t\t\tmetadataUrlParams: {\n\t\t\t\t\t\t\"sap-documentation\": \"heading\"\n\t\t\t\t\t},\n\t\t\t\t\tjson: true,\n\t\t\t\t\tdefaultBindingMode: \"TwoWay\",\n\t\t\t\t\tuseBatch: true,\n\t\t\t\t\tdefaultCountMode: \"Inline\",\n\t\t\t\t\tloadMetadataAsync: true\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Note: Batch groups must be defined globally. Therefore, we do it here, although they are only used in the edit view.\n\t\t\toModel.setDeferredBatchGroups([\"editproduct\", \"BatchDelete\"]);\n\t\t\toModel.setChangeBatchGroups({\n\t\t\t\t\"ProductDraft\": {\n\t\t\t\t\tbatchGroupId: \"editproduct\"\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.setModel(oModel);\n\t\t\t// set the i18n model\n\n\t\t\t// always use absolute paths relative to our own component\n\t\t\t// (relative paths will fail if running in the Fiori Launchpad)\n\t\t\tvar sRootPath = jQuery.sap.getModulePath(\"nw.epm.refapps.ext.prod.manage\");\n\n\t\t\t// set i18n model\n\t\t\tthis.setModel(models.createResourceModel(sRootPath, mConfig.resourceBundle), \"i18n\");\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\tthis._oApplicationController = new Application(this, mRoutenames);\n\t\t\tthis._oApplicationController.init(this.getMetadata().getConfig().serviceConfig.serviceUrl);\n\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t},\n\n\t\t/**\n\t\t * The component is destroyed by UI5 automatically.\n\t\t * In this method, the ErrorHandler are destroyed.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis.getModel().destroy();\n\t\t\tthis.getModel(\"i18n\").destroy();\n\t\t\tthis.getModel(\"device\").destroy();\n\n\t\t\t// call the base component's destroy function\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t}\n\t});\n\n});",
		"nw/epm/refapps/ext/prod/manage/controller/ProductEdit-dbg.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\n// Note that this view is hosted by nw.epm.refapps.ext.prod.manage.view.S3_ProductDetail. Thus, it implements the lifecycle methods show and leave\n// defined by this view.\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/core/Component\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/comp/odata/MetadataAnalyser\",\n\t\"sap/ui/comp/providers/ValueHelpProvider\",\n\t\"sap/ui/model/Sorter\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterType\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/ui/core/ValueState\",\n\t\"./SubControllerForShare\",\n\t\"nw/epm/refapps/ext/prod/manage/model/formatter\"\n], function(Controller, Component, JSONModel, MetadataAnalyser, ValueHelpProvider, Sorter, Device, Filter, FilterType, FilterOperator,\n\tValueState, SubControllerForShare, formatter) {\n\t\"use strict\";\n\n\t// This method returns an array that contains all entries of the array aArray that are truthy (in the same order).\n\t// If all entries of aArray are truthy it is returned, otherwise a new array is returned.\n\tfunction fnArrayFilteredTruthy(aArray) {\n\t\tvar aCopy = null;\n\t\tfor (var i = 0; i < aArray.length; i++) {\n\t\t\tvar oEntry = aArray[i];\n\t\t\tif (oEntry) {\n\t\t\t\tif (aCopy) {\n\t\t\t\t\taCopy.push(oEntry);\n\t\t\t\t}\n\t\t\t} else if (!aCopy) {\n\t\t\t\taCopy = aArray.slice(0, i);\n\t\t\t}\n\t\t}\n\t\treturn aCopy || aArray;\n\t}\n\n\treturn Controller.extend(\"nw.epm.refapps.ext.prod.manage.controller.ProductEdit\", {\n\t\tformatter: formatter,\n\t\t// --- Helper attributes that are initialized during onInit and never changed afterwards\n\n\t\t// _oViewProperties: json model used to manipulate declarative attributes of the controls used in this view. Initialized in _initViewPropertiesModel.\n\t\t// Contains the attribute dataLoaded which is set to true, as soon as the product is loaded\n\t\t// _oView: this view\n\t\t// _aInputFields:\n\t\t// _aMandatoryFields\n\t\t// _oApplicationController: the controller of the App\n\t\t// _oApplicationProperties: json model containing the App state\n\t\t// _oResourceBundle: the resource bundle to retrieve texts from\n\t\t// _oHelper: singleton instance of nw.epm.refapps.ext.prod.manage.util.Products used to call backend services\n\t\t// _oSubControllerForShare: helper for the share dialog\n\t\t// _oSubcategory: input field for the subcategory\n\t\t// _oShareDialog: dialog for the share button. Initialized on demand.\n\n\t\t// --- attributes describing the current state\n\t\t// _sContextPath:\n\n\t\t// --- Initialization\n\n\t\tonInit: function() {\n\t\t\t// Gets the application component and the data operation helper instance\n\t\t\tthis._oView = this.getView();\n\t\t\tthis._initViewPropertiesModel();\n\t\t\tvar oComponent = this.getOwnerComponent();\n\t\t\tthis._oApplicationProperties = oComponent.getModel(\"appProperties\");\n\t\t\tthis._oApplicationController = this._oApplicationProperties.getProperty(\"/applicationController\");\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oHelper = this._oApplicationController.getODataHelper();\n\t\t\tthis._oSubControllerForShare = new SubControllerForShare(this._oView, this._oResourceBundle);\n\t\t\tthis._oCategory = this.byId(\"categoryBox\");\n\t\t\tthis._oSubcategory = this.byId(\"subcategoryBox\");\n\t\t\t// Gets and stores array of input fields and mandatory fields\n\t\t\tthis._aMandatoryFields = this._getMandatoryFields();\n\t\t\tthis._aInputFields = this._aMandatoryFields.concat(this._getNonMandatoryInputFields());\n\n\t\t\t// Initialize the Sub-View which included the sap.m.UploadCollection control to handle uploading and removing\n\t\t\t// images\n\t\t\tthis._initSubViewImageUpload();\n\n\t\t\tvar oModel = oComponent.getModel();\n\t\t\t// This facilitates the value help generated from annotations only\n\t\t\toModel.attachMetadataLoaded(function() {\n\t\t\t\tvar oInput = this.byId(\"supplierInput\"),\n\t\t\t\t\toMetadataAnalyzer = new MetadataAnalyser(oModel),\n\t\t\t\t\tsField = \"SupplierName\",\n\t\t\t\t\tmConfig = oComponent.getMetadata().getConfig(),\n\t\t\t\t\tsServiceName = mConfig.serviceConfig.name,\n\t\t\t\t\tsAnnotationPath = sServiceName + \".ProductDraft/\" + sField,\n\t\t\t\t\toValueListAnnotations = oMetadataAnalyzer.getValueListAnnotation(sAnnotationPath);\n\n\t\t\t\tif (oInput) {\n\t\t\t\t\t// This is created for side effects Search Help Dialog\n\t\t\t\t\t/* eslint-disable */\n\t\t\t\t\tnew ValueHelpProvider({\n\t\t\t\t\t\tannotation: oValueListAnnotations.primaryValueListAnnotation,\n\t\t\t\t\t\tadditionalAnnotations: oValueListAnnotations.additionalAnnotations,\n\t\t\t\t\t\tcontrol: oInput,\n\t\t\t\t\t\tmodel: oModel,\n\t\t\t\t\t\tpreventInitialDataFetchInValueHelpDialog: true,\n\t\t\t\t\t\tsupportMultiSelect: false,\n\t\t\t\t\t\tsupportRanges: false,\n\t\t\t\t\t\tfieldName: sField,\n\t\t\t\t\t\ttitle: sField\n\t\t\t\t\t});\n\t\t\t\t\t/* eslint-enable */\n\t\t\t\t\toInput.setShowValueHelp(true);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\n\t\t_initViewPropertiesModel: function() {\n\t\t\t// The model created here is used to set values or view element properties that cannot be bound\n\t\t\t// directly to the OData service. Setting view element attributes by binding them to a model is preferable to the\n\t\t\t// alternative of getting each view element by its ID and setting the values directly because a JSon model is more\n\t\t\t// robust if the customer removes view elements (see extensibility).\n\t\t\tthis._oViewProperties = new JSONModel({\n\t\t\t\tdataLoaded: false\n\t\t\t});\n\t\t\tthis._oView.setModel(this._oViewProperties, \"viewProperties\");\n\t\t},\n\n\t\t_getMandatoryFields: function() {\n\t\t\treturn fnArrayFilteredTruthy([this.byId(\"productNameInput\"), this.byId(\"priceInput\"), this.byId(\"currencyBox\"),\n\t\t\t\tthis._oCategory, this._oSubcategory, this.byId(\"descriptionArea\"),\n\t\t\t\tthis.byId(\"supplierInput\"), this.byId(\"unitOfMeasureBox\")\n\t\t\t]);\n\t\t},\n\n\t\t_getNonMandatoryInputFields: function() {\n\t\t\treturn fnArrayFilteredTruthy([this.byId(\"lengthInput\"), this.byId(\"widthInput\"), this.byId(\"heightInput\"), this.byId(\"weightInput\")]);\n\t\t},\n\n\t\t// helper method to set image upload control\n\t\t_initSubViewImageUpload: function() {\n\t\t\tvar oSubViewImagesUpload = this.byId(\"View_ImageUpload\");\n\t\t\tif (oSubViewImagesUpload) {\n\t\t\t\toSubViewImagesUpload.getController().setInitData({\n\t\t\t\t\toResourceBundle: this._oResourceBundle,\n\t\t\t\t\toDataHelper: this._oHelper,\n\t\t\t\t\tfnDirty: this._setDirty.bind(this)\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t// --- Lifecycle methods used by the hosting view\n\n\t\tshow: function() {\n\t\t\tvar sProductDraftID = this._oApplicationProperties.getProperty(\"/productId\");\n\t\t\tthis._oViewProperties.setProperty(\"/dataLoaded\", false);\n\t\t\tthis._resetValueStates();\n\n\t\t\tthis._sContextPath = this._oHelper.getPathForDraftId(sProductDraftID);\n\t\t\t// Binds the (newly generated) product draft to the view and expands the Images part for the subview\n\t\t\t// ProductDraftUploadImages\n\t\t\tthis._oView.bindElement(this._sContextPath, {\n\t\t\t\texpand: \"Images\"\n\t\t\t});\n\n\t\t\t// Checks if the binding context is already available locally. If so, refreshes the binding and retrieves the\n\t\t\t// data from backend again.\n\t\t\tvar oBindingContext = this._oView.getBindingContext();\n\t\t\tif (oBindingContext && oBindingContext.getPath() === this._sContextPath) {\n\t\t\t\tthis._oView.getElementBinding().refresh();\n\t\t\t}\n\n\t\t\t// Updates header and footer after the product draft is retrieved\n\t\t\tthis._oView.getElementBinding().attachEventOnce(\n\t\t\t\t\"dataReceived\",\n\t\t\t\tfunction() {\n\t\t\t\t\toBindingContext = this._oView.getBindingContext();\n\t\t\t\t\tif (oBindingContext) {\n\t\t\t\t\t\t// Sets the draft dirty flag based on the backend information\n\t\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/isDirty\", oBindingContext.getProperty(\"IsDirty\"));\n\n\t\t\t\t\t\tthis._oViewProperties.setProperty(\"/dataLoaded\", true);\n\t\t\t\t\t\t// in ComboBox\n\t\t\t\t\t\tthis._setCategoryFilter(oBindingContext);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Handle the case if the product draft cannot be retrieved remotely (e.g. it's deleted already)\n\t\t\t\t\t\t// show the corresponding product detail page, since in this app the draft id is supposed to be\n\t\t\t\t\t\t// same as the product id\n\t\t\t\t\t\tthis._oApplicationController.showProductDetailPage(sProductDraftID);\n\t\t\t\t\t}\n\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/isBusyCreatingDraft\", false);\n\t\t\t\t}, this);\n\t\t},\n\n\t\tleave: function() {\n\t\t\tthis._oView.unbindElement();\n\t\t},\n\n\t\t// --- Event handlers attached declaratively\n\n\t\tonSavePressed: function() {\n\t\t\tif (!this._checkAndMarkEmptyMandatoryFields() && !this._fieldWithErrorState()) {\n\t\t\t\tvar fnDraftSaved = function(oControl, oResponse) {\n\t\t\t\t\t\t// When the batch of requests in oData V2 is successfully sent to the backend,\n\t\t\t\t\t\t// the mParameters.success in submitChanges is called. Errors relating to the\n\t\t\t\t\t\t// requests within the batch are not indicated separately and therefore the system must\n\t\t\t\t\t\t// check the requests contained in the batch for errors based on the request response.\n\t\t\t\t\t\t// Makes the assumption that the error returned relates to the field that has been\n\t\t\t\t\t\t// changed. This is not always the case and errors are shown in valueStateText\n\t\t\t\t\t\t// for the field that triggered the save of the draft.\n\t\t\t\t\t\tfor (var i = 0; i < oResponse.__batchResponses.length; i++) {\n\t\t\t\t\t\t\tif (oResponse.__batchResponses[i].response) {\n\t\t\t\t\t\t\t\tif (jQuery.sap.startsWith(oResponse.__batchResponses[i].response.body, \"{\\\"error\\\":\")) {\n\t\t\t\t\t\t\t\t\tvar oErrModel = new JSONModel();\n\t\t\t\t\t\t\t\t\toErrModel.setJSON(oResponse.__batchResponses[i].response.body);\n\t\t\t\t\t\t\t\t\tvar sMessage = oErrModel.getProperty(\"/error/message/value\");\n\t\t\t\t\t\t\t\t\tif (oControl) {\n\t\t\t\t\t\t\t\t\t\toControl.setValueState(\"Error\");\n\t\t\t\t\t\t\t\t\t\toControl.setValueStateText(sMessage);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Just take the first error message found\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t\tfnAfterActivation = function(oProductData) {\n\t\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/masterBusyIndicatorDelay\", 0);\n\t\t\t\t\t\tthis._oApplicationController.showProductDetailPage(oProductData.Id, true);\n\t\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/isBusySaving\", false);\n\t\t\t\t\t\tvar sMessage = this._oResourceBundle.getText(\"ymsg.saveText\", oProductData.Name);\n\t\t\t\t\t\tsap.ui.require([\"sap/m/MessageToast\"], function(MessageToast) {\n\t\t\t\t\t\t\tMessageToast.show(sMessage);\n\t\t\t\t\t\t});\n\t\t\t\t\t}.bind(this);\n\t\t\t\tthis._oHelper.activateProduct(fnDraftSaved, fnAfterActivation);\n\t\t\t}\n\t\t},\n\n\t\tonCancelPressed: function() {\n\t\t\tvar oDraft = this._oView.getBindingContext().getObject(),\n\t\t\t\tfnNavToProductDetail = function() {\n\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/detailBusyIndicatorDelay\", null);\n\t\t\t\t\t// The system must distinguish between CANCEL chosen in EDIT mode and CANCEL chosen in ADD mode\n\t\t\t\t\t// because Cancel Edit navigates to display of that product and Cancel Add to the previously\n\t\t\t\t\t// selected product\n\t\t\t\t\tvar bIsNew = oDraft.IsNewProduct,\n\t\t\t\t\t\tsProductId = bIsNew ? (!Device.system.phone && this._oApplicationProperties.getProperty(\"/lastDisplay\")) : oDraft.ProductId;\n\t\t\t\t\tif (sProductId) {\n\t\t\t\t\t\tthis._oApplicationController.showProductDetailPage(sProductId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._oApplicationController.navToMaster();\n\t\t\t\t\t}\n\t\t\t\t}.bind(this);\n\t\t\tthis._deleteProductDraft(fnNavToProductDetail);\n\t\t},\n\n\t\tonSharePressed: function(oEvent) {\n\t\t\tthis._oSubControllerForShare.openDialog(oEvent);\n\t\t},\n\n\t\tonNavButtonPress: function() {\n\t\t\tthis._oApplicationController.navBack(true);\n\t\t},\n\n\t\t// deleteProductDraft is used in this controller to cancel editing and when\n\t\t// the active product has been updated or created.\n\t\t_deleteProductDraft: function(fnAfterDeleted, fnDeleteCanceled) {\n\t\t\tthis._oHelper.deleteProductDraft(this._sContextPath, fnAfterDeleted, fnDeleteCanceled);\n\t\t},\n\n\t\t// --- Input fields\n\n\t\tonNumberChange: function(oEvent) {\n\t\t\t// If a number field is empty, an error occurs in the backend.\n\t\t\t// So this sets a missing number to \"0\".\n\t\t\tvar oField = oEvent.getSource(),\n\t\t\t\tsNumber = oField.getValue();\n\t\t\tif (sNumber === \"\") {\n\t\t\t\toField.setValue(\"0\");\n\t\t\t}\n\t\t\tthis._fieldChange(oField);\n\t\t},\n\n\t\tonCategoryChange: function(oEvent) {\n\t\t\t// Do not use submitChanges because the subcategory determines the category and both\n\t\t\t// end up being blank. Only use submitChanges after the subcategory has been changed.\n\t\t\toEvent.getSource().setValueState(ValueState.None);\n\t\t\tthis._setCategoryFilter(this._oView.getBindingContext());\n\t\t},\n\n\t\tonInputChange: function(oEvent) {\n\t\t\t// Whenever the value of an input field is changed, the system must\n\t\t\t// update the product draft. For most of the fields, no specific\n\t\t\t// processing is required on the update of the product draft. onInputChange is the\n\t\t\t// change event defined in the XML view for such fields.\n\t\t\tvar oField = oEvent.getSource();\n\t\t\t// Workaround to ensure that both the supplier Id and Name are updated in the model before the\n\t\t\t// draft is updated, otherwise only the Supplier Name is saved to the draft and Supplier Id is lost\n\t\t\tsetTimeout(function() {\n\t\t\t\tthis._fieldChange(oField);\n\t\t\t}.bind(this), 0);\n\t\t},\n\n\t\tonSubcategoryChange: function(oEvent) {\n\t\t\tvar sValue = this._oSubcategory.getValue();\n\t\t\tif (!sValue.trim()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._oCategory) {\n\t\t\t\tthis._oCategory.setValueState(ValueState.None);\n\t\t\t\tvar oSelectedItem = oEvent.getParameter(\"selectedItem\"),\n\t\t\t\t\toBindingContext = oSelectedItem.getBindingContext(),\n\t\t\t\t\tsMainCategory = oBindingContext.getProperty(\"MainCategoryId\");\n\t\t\t\tif (sMainCategory !== this._oCategory.getValue()) {\n\t\t\t\t\tthis._oCategory.setValue(sMainCategory);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._fieldChange(this._oSubcategory);\n\t\t},\n\n\t\tonSelectChange: function() {\n\t\t\t// Collect input controls.\n\t\t\t// Additional method for change event on SelectChanges because there is currently\n\t\t\t// no value status for a select field.\n\t\t\tthis._setDirty();\n\t\t\tthis._oHelper.saveSelectProductDraft();\n\t\t},\n\n\t\t// This method has been defined in the XML view and is required by UI5 to call\n\t\t// the Suggestions \"type ahead\" function\n\t\tsuggestMethod: function(oEvent) {\n\t\t\tsap.m.InputODataSuggestProvider.suggest(oEvent);\n\t\t},\n\n\t\t// Values states if set are not automatically removed from the view.  For example, if there\n\t\t// are missing mandatory fields and the user presses \"save\", these fields are set to value state\n\t\t// error.  If the user then presses \"cancel\" and selects another product to edit, the values states\n\t\t// must be removed, otherwise the value states appear on the next product edit.\n\t\t_resetValueStates: function() {\n\t\t\tjQuery.each(this._aInputFields, function(i, input) {\n\t\t\t\tinput.setValueState(ValueState.None);\n\t\t\t});\n\t\t},\n\n\t\t_fieldWithErrorState: function() {\n\t\t\treturn this._aInputFields.some(function(input) {\n\t\t\t\treturn (input.getValueState() === ValueState.Error);\n\t\t\t});\n\t\t},\n\n\t\t_fieldChange: function(oControl) {\n\t\t\t// Handler for a changed field that needs to be written to the draft.  This allows\n\t\t\t// specific processing for the \"Change\" event on the input fields, such as for numbers\n\t\t\t// to set empty to \"0\".\n\t\t\tthis._setDirty();\n\t\t\t// Removes previous error state\n\t\t\toControl.setValueState(ValueState.None);\n\t\t\t// Callback function in the event that saving draft is unsuccessful\n\t\t\tvar fnSubmitDraftSuccess = function(sMessage) {\n\t\t\t\tif (sMessage && oControl) {\n\t\t\t\t\toControl.setValueState(\"Error\");\n\t\t\t\t\toControl.setValueStateText(sMessage);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._oHelper.saveProductDraft(fnSubmitDraftSuccess);\n\t\t},\n\n\t\t// Set the empty mandatory fields to Value State Error\n\t\t// Return whether at least one mandatory field is still empty\n\t\t_checkAndMarkEmptyMandatoryFields: function() {\n\t\t\tvar bErrors = false;\n\t\t\t// Check that inputs are not empty or space.\n\t\t\t// This does not happen during data binding because this is only triggered by changes.\n\t\t\t// Note that this loop must not stop with the first found error, since for all mandatory fields the value state must be updated.\n\t\t\tjQuery.each(this._aMandatoryFields, function(i, input) {\n\t\t\t\tif (!input.getValue() || input.getValue().trim() === \"\") {\n\t\t\t\t\tbErrors = true;\n\t\t\t\t\tinput.setValueState(ValueState.Error);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn bErrors;\n\t\t},\n\n\t\t_setCategoryFilter: function(oBindingContext) {\n\t\t\tif (this._oSubcategory) {\n\t\t\t\tvar sMainCatgId = oBindingContext.getProperty(\"MainCategoryId\"),\n\t\t\t\tsSubCatgId = oBindingContext.getProperty(\"SubCategoryId\"),\n\t\t\t\t\taFilters = sMainCatgId ? [new Filter(\"MainCategoryName\", FilterOperator.StartsWith, sMainCatgId)] : [],\n\t\t\t\t\toBinding = this._oSubcategory.getBinding(\"items\");\n\t\t\t\tif (sMainCatgId) {\n\t\t\t\t\toBinding.attachEventOnce(\"change\", function() {\n\t\t\t\t\t\tvar aBindings = oBinding.getContexts(),\n\t\t\t\t\t\t\tbIsValueValid = aBindings.some(function(oEntry) {\n\t\t\t\t\t\t\t\treturn sSubCatgId === oEntry.getProperty(\"Id\");\n\t\t\t\t\t\t\t}).bind(this);\n\t\t\t\t\t\tif (!bIsValueValid) {\n\t\t\t\t\t\t\tthis._oSubcategory.setValue(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t} else {\n\t\t\t\t\tthis._oSubcategory.setValue(\" \");\n\t\t\t\t}\n\t\t\t\toBinding.filter(aFilters, FilterType.Application);\n\t\t\t}\n\t\t},\n\n\t\t_setDirty: function() {\n\t\t\tthis._oApplicationProperties.setProperty(\"/isDirty\", true);\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/messages.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/m/MessageBox\",\"sap/ui/model/json/JSONModel\",\"./utilities\"],function(M,J,u){\"use strict\";function E(d){if(jQuery.sap.startsWith(d||\"\",\"{\\\"error\\\":\")){var e=new J();e.setJSON(d);return e.getProperty(\"/error/message/value\")||\"Error\";}}function p(P){var o=null,r=null,e={};o=P.getParameters?P.getParameters():null;r=o?(o.response||o):P;e.sDetails=r.responseText||r.body||(r.response&&r.response.body)||\"\";e.sMessage=E(e.sDetails)||r.message||(o&&o.message);return e;}function s(t,m,a){M.show(m,{icon:M.Icon.ERROR,title:t,details:a,actions:M.Action.CLOSE,styleClass:u.getContentDensityClass()});}return{showErrorMessage:function(P,v){var e=p(P),b=v.getModel(\"i18n\").getResourceBundle(),t=b.getText(\"xtit.error\");s(t,e.sMessage,e);},showXMLErrorMessage:function(P,v){try{var x=jQuery.parseXML(P);var a=jQuery(x);}catch(e){jQuery.sap.log.error(e);}if(a){var m=a.find(\"errordetails\").find(\"message\").text();var b=a.find(\"error\").find(\"message\").text();}else{m=P;}var B=v.getModel(\"i18n\").getResourceBundle(),t=B.getText(\"xtit.error\");s(t,m,b);},getErrorContent:function(P){return p(P).sMessage;},getErrorDetails:function(P){return p(P).sDetails;},extractErrorMessageFromDetails:function(d){return E(d);}};});",
		"nw/epm/refapps/ext/prod/manage/controller/NavigationManager.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/base/Object\",\"sap/ui/Device\",\"sap/ui/core/routing/History\"],function(O,D,H){\"use strict\";return O.extend(\"nw.epm.refapps.ext.prod.manage.controller.NavigationManager\",{constructor:function(r,a,R,o){this._oRouter=r;this._oApplicationProperties=a;this._mRoutes=R;this._oResourceBundle=o;},init:function(){this._bSubControllersMustBeAdapted=true;this._oRouter.getTargetHandler().setCloseDialogs(false);this._oRouter.attachRoutePatternMatched(this.onRoutePatternMatched,this);this._oRouter.attachBypassed(this.onBypassed,this);this._oRouter.initialize();},registerMaster:function(m){this._oMasterController=m;},registerDetail:function(d){this._oDetailController=d;},onRoutePatternMatched:function(e){var r=e.getParameter(\"name\"),p=(r===this._mRoutes.DETAIL)&&decodeURIComponent(e.getParameter(\"arguments\").productID);this._oApplicationProperties.setProperty(\"/productId\",p);if(p){if(this._bSubControllersMustBeAdapted){this._newProductId();}this._oMasterController.adaptToDetailSelection(this._bSubControllersMustBeAdapted);}this._bSubControllersMustBeAdapted=true;},onBypassed:function(){this._oApplicationProperties.setProperty(\"/productId\",\"-\");this._oApplicationProperties.setProperty(\"/emptyText\",this._oResourceBundle.getText(\"ymsg.pageNotFound\"));this._oMasterController.adaptToDetailSelection(false);},_newProductId:function(){if(this._oDetailController&&!this._oDetailController.editModeChanged()){this._oDetailController.productChanged();}},navBackToMasterPageInPhone:function(){if(D.system.phone){this.navToMaster();return true;}return false;},showProductDetailPage:function(p,l){this._oApplicationProperties.setProperty(\"/productId\",p);this._changeEditMode(false);if(l){this._oMasterController.listRefresh();}this._oMasterController.adaptToDetailSelection();if(this._oDetailController){this._oDetailController.productChanged();}this._executeNavigation(this._mRoutes.DETAIL,{productID:encodeURIComponent(p)},!D.system.phone);},navToMaster:function(p){this._executeNavigation(this._mRoutes.MASTER,{},true);this._oApplicationProperties.setProperty(\"/preferredIds\",p?[p]:[]);this._oApplicationProperties.setProperty(\"/productId\",null);this._changeEditMode(false);this._oMasterController.findItem();},navToProductEditPage:function(d){if(d){this._oApplicationProperties.setProperty(\"/productId\",d);}else{d=this._oApplicationProperties.getProperty(\"/productId\");}this._changeEditMode(true);this._executeNavigation(this._mRoutes.DETAIL,{productID:encodeURIComponent(d)},!D.system.phone);this._oMasterController.adaptToDetailSelection();},_changeEditMode:function(i){if(this._oApplicationProperties.getProperty(\"/noEditMode\")!==i){return;}this._oApplicationProperties.setProperty(\"/noEditMode\",!i);if(this._oDetailController){this._oDetailController.editModeChanged();}},navToEmptyPage:function(t,r){this._oApplicationProperties.setProperty(\"/emptyText\",t);if(r){this._executeNavigation(this._mRoutes.MASTER);}this._oRouter.getTargets().display(\"empty\");},navBack:function(f,d){if(this._oApplicationProperties.getProperty(\"/noEditMode\")){this._navBackImpl(f);}else{var p=d.getPathForDraftId(this._oApplicationProperties.getProperty(\"/productId\"));d.deleteProductDraft(p,this._navBackImpl.bind(this,f));}},_navBackImpl:function(f){var h=H.getInstance(),p=h.getPreviousHash();this._changeEditMode(false);if(typeof p!==\"undefined\"){history.go(-1);}else if(f){this.navToMaster();}else{var c=sap.ushell&&sap.ushell.Container&&sap.ushell.Container.getService(\"CrossApplicationNavigation\");if(c){c.toExternal({target:{shellHash:\"#\"}});}}},_executeNavigation:function(n,p,r){this._bSubControllersMustBeAdapted=!this._oDetailController;this._oRouter.navTo(n,p,r);}});});",
		"nw/epm/refapps/ext/prod/manage/controller/Application-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/odata/v2/ODataModel\",\n\t\"./NavigationManager\",\n\t\"./messages\",\n\t\"./utilities\",\n\t\"nw/epm/refapps/ext/prod/manage/model/Products\",\n\t\"nw/epm/refapps/ext/prod/manage/model/formatter\"\n], function(Object, Device, JSONModel, ODataModel, NavigationManager, messages, utilities, Products, formatter) {\n\t\"use strict\";\n\n\tfunction fnInitBusyHandling(oApplicationProperties) {\n\t\t// This function is called in the initialization phase. It ensures that the busy state of the app is set correctly.\n\t\t// oApplicationProperties is the global application model (see below). This model contains a property isAppBusy\n\t\t// which is declaratively bound to the busy state of the app (see view nw.epm.refapps.ext.prod.manage.view.App).\n\t\t// Actually there are several reasons which make the app busy. All of them can be expressed via properties handled\n\t\t// by the global application model. E.g. the app should be busy when isBusyDeleting is true.\n\t\t// Therefore, in this function we register for changes of any of those properties influencing the busy state.   \n\t\tvar mBusyReasons = { // A map of the global properties influencing the busy state onto the value which makes the app busy\n\t\t\t\tisBusyDeleting: true,\n\t\t\t\tisBusyCreatingDraft: true,\n\t\t\t\tisBusySaving: true,\n\t\t\t\tmetaDataLoadState: 0,\n\t\t\t\tlostDraftReadState: 0\n\t\t\t},\n\t\t\tfnRefreshBusyState = function() { // function which is called when a property influencing the busy state is modified\n\t\t\t\tvar bIsBusy = false; // information whether app should be busy now. First assumption: app is not busy\n\t\t\t\tfor (var sProp in mBusyReasons) { // check whether we find any reason for being busy\n\t\t\t\t\tvar vExpected = mBusyReasons[sProp];\n\t\t\t\t\tvar vValue = oApplicationProperties.getProperty(\"/\" + sProp);\n\t\t\t\t\tif (vExpected === vValue) { // ok, the app is busy\n\t\t\t\t\t\tbIsBusy = true;\n\t\t\t\t\t\t// We set the app to busy now. When this busy state ends we will still\n\t\t\t\t\t\t// have to re determine the detail area. Since we want to avoid\n\t\t\t\t\t\t// a flickering of busy indicators we ensure that the busy indicator\n\t\t\t\t\t\t// of the detail area becomes busy immediately.\n\t\t\t\t\t\toApplicationProperties.setProperty(\"/detailBusyIndicatorDelay\", 0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toApplicationProperties.setProperty(\"/isAppBusy\", bIsBusy);\n\t\t\t};\n\t\t// Now register fnRefrechBusyState to changes of all properties contained in mBusyReasons\n\t\tfor (var sProperty in mBusyReasons) {\n\t\t\tvar oBinding = oApplicationProperties.bindProperty(\"/\" + sProperty);\n\t\t\toBinding.attachChange(fnRefreshBusyState);\n\t\t}\n\t}\n\n\treturn Object.extend(\"nw.epm.refapps.ext.prod.manage.controller.Application\", {\n\t\t// This class serves as controller for the whole App. It is a singleton object which is initialized by the Component.\n\t\t// Since the Component exposes a reference to this singleton object all controllers have access to it and can use its public methods.\n\t\t// On the other hand the S2 and the S3 view register at this singelton on startup, such that it can call public methods of these controllers\n\t\t// if necessary.\n\n\t\t// --- the following attributes are initialized during startup and not changed afterwards\n\t\t// _oComponent: the Component (nw.epm.refapps.ext.prod.manage.Component)\n\t\t// _mRoutes: Access the routenames (see Component)\n\t\t// _oResourceBundle: the resource bundle used by this app\n\t\t// _oModel: the OData model used by this App\n\t\t// _oApplicationProperties: a JSON model used to share global state between the classes used in this App\n\t\t// it possesses the following attributes:\n\t\t// applicationController - this instance\n\t\t// serviceUrl            - the url of the OData service used by this app\n\t\t// isMultiSelect         - is the App in multi select mode\n\t\t// metaDataLoadState     - 0: meta data loading, 1: meta data loading was successful, -1 metadata loading failed\n\t\t// lostDraftReadState    - 0: reading lost draft, 1: lost draft info read successfully, -1 none of them\n\t\t// isBusyDeleting, isBusyCreatingDraft, isBusySaving\n\t\t//                       - busy states of the app\n\t\t// isAppBusy             - information whether the app as a whole is busy. Its state is dervied from\n\t\t//                         other states (see fnInitBusyHandling)\n\t\t// detailBusyIndicatorDelay, masterBusyIndicatorDelay\n\t\t//                       - busy delays for master and detail view. They are either 0 (no delay) or null (default delay)\n\t\t// noEditMode            - is the App in display mode,\n\t\t// productId             - if this attribute is truthy it contains the id of the product to be displayed currently\n\t\t// preferredIds          - this attribute is only evaluated when productId is faulty. In this case it contains an\n\t\t//                         array of product ids. The first of these ids corresponding to an item in the master list\n\t\t//                         will be displayed\n\t\t// isDirty               - flag indicating whether the current draft is dirty. Only relevant in edit scenarios.\n\t\t// lastDisplay           - id of the last product that was shown in display screen\n\t\t// isListLoading         - information whether the master list is currently loading\n\t\t// listNoDataText        - the noDataText currently applicable for the master list\n\t\t// emptyText             - text to be shown on the empty page\n\t\t// _oNavigationManager: instance of nw.epm.refapps.ext.prod.manage.controller.NavigationManager responsible for handling navigation\n\t\t// _oDataHelper: instance of nw.epm.refapps.ext.prod.manage.model.Products used to perform explicit backend calls\n\t\t// _oMasterController: controller of nw.epm.refapps.ext.prod.manage.view.S2_ProductMaster\n\t\t// _oOnMetaData: an instance which possesses arrays onSuccess and onFailure as members. The elements of these arrays are functions, \n\t\t// which will be executed according to whether the loading of the metadata was successful or failure.\n\t\t// As soon as the metadata have been loaded successfully the attribute will not be used anymore (and thus set to null).\n\n\t\t// --- Lifecycle methods\n\n\t\t// - Methods called during application startup. Note that the methods will be called in the following\n\t\t//   order: constructor, init, registerMaster, onRoutePatternMatched (of NavigationManager), onMetadataLoaded.\n\t\t//   The point in time when registerDetail is called depends on the route which is used to start the App.\n\n\t\tconstructor: function(oComponent, mRoutes) {\n\t\t\tthis._oComponent = oComponent;\n\t\t\tthis._mRoutes = mRoutes;\n\t\t},\n\n\t\tinit: function(sServiceUrl) {\n\t\t\tthis._oMainView = this._oComponent.getAggregation(\"rootControl\");\n\n\t\t\tthis._oOnMetaData = {\n\t\t\t\tonSuccess: [],\n\t\t\t\tonFailure: []\n\t\t\t};\n\t\t\tvar oODataModel = this._oComponent.getModel();\n\t\t\toODataModel.attachMetadataLoaded(this.onMetadataLoaded, this);\n\t\t\toODataModel.attachMetadataFailed(this.onMetadataFailed, this);\n\n\t\t\tthis._oApplicationProperties = new JSONModel({\n\t\t\t\tserviceUrl: sServiceUrl,\n\t\t\t\tmetaDataLoadState: 0,\n\t\t\t\tlostDraftReadState: -1,\n\t\t\t\tisBusyDeleting: false,\n\t\t\t\tisBusyCreatingDraft: false,\n\t\t\t\tisBusySaving: false,\n\t\t\t\tisAppBusy: true,\n\t\t\t\tdetailBusyIndicatorDelay: 0,\n\t\t\t\tmasterBusyIndicatorDelay: 0,\n\t\t\t\tapplicationController: this,\n\t\t\t\tisMultiSelect: false,\n\t\t\t\tnoEditMode: true,\n\t\t\t\tpreferredIds: [],\n\t\t\t\tisDirty: false,\n\t\t\t\tlastDisplay: null,\n\t\t\t\tisListLoading: false,\n\t\t\t\tlistNoDataText: \" \"\n\t\t\t});\n\t\t\tthis._oComponent.setModel(this._oApplicationProperties, \"appProperties\");\n\t\t\tfnInitBusyHandling(this._oApplicationProperties);\n\t\t\tthis._oDataHelper = new Products(this._oComponent, this._oMainView);\n\n\t\t\tvar oRouter = this._oComponent.getRouter();\n\t\t\tthis._oNavigationManager = new NavigationManager(oRouter, this._oApplicationProperties, this._mRoutes, this._oComponent.getModel(\n\t\t\t\t\"i18n\").getResourceBundle());\n\t\t\tthis._oNavigationManager.init();\n\t\t\tthis._extractStartupParameters(oRouter);\n\t\t},\n\n\t\t_extractStartupParameters: function(oRouter) {\n\t\t\t// handle the case that App was reached via Cross App navigation\n\t\t\tvar oComponentData = this._oComponent.getComponentData();\n\t\t\tif (oComponentData && oComponentData.startupParameters && jQuery.isArray(oComponentData.startupParameters.Product) &&\n\t\t\t\toComponentData.startupParameters.Product.length > 0) {\n\t\t\t\tvar sUrl = oRouter.getURL(this._mRoutes.DETAIL, {\n\t\t\t\t\tproductID: oComponentData.startupParameters.Product[0]\n\t\t\t\t});\n\t\t\t\tif (sUrl) {\n\t\t\t\t\tsap.ui.require([\"sap/ui/core/routing/HashChanger\"], function(HashChanger) {\n\t\t\t\t\t\tvar oHashChanger = HashChanger.getInstance();\n\t\t\t\t\t\toHashChanger.replaceHash(sUrl);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tregisterMaster: function(oMasterController) {\n\t\t\t// This method is called in onInit() of the S2-view\n\t\t\tthis._oMasterController = oMasterController;\n\t\t\tthis._oNavigationManager.registerMaster(oMasterController);\n\t\t},\n\n\t\tregisterDetail: function(oDetailController) {\n\t\t\t// This method is called in onInit() of the S3-view\n\t\t\tthis._oNavigationManager.registerDetail(oDetailController);\n\t\t},\n\n\t\tonMetadataLoaded: function() {\n\t\t\t// In normal scenarios this method is called at the end of the startup process. However, in cases that initial loading of\n\t\t\t// metadata fails, this method may be called later. It is registered in init().\n\t\t\tthis._checkForLostDraft();\n\t\t\tthis._oApplicationProperties.setProperty(\"/metaDataLoadState\", 1);\n\t\t\tthis._oApplicationProperties.setProperty(\"/isListLoading\", true);\n\t\t\tfor (var i = 0; i < this._oOnMetaData.onSuccess.length; i++) {\n\t\t\t\tthis._oOnMetaData.onSuccess[i]();\n\t\t\t}\n\t\t\tthis._oOnMetaData = null;\n\t\t},\n\n\t\tonMetadataFailed: function() {\n\t\t\tthis._oApplicationProperties.setProperty(\"/metaDataLoadState\", -1);\n\t\t\tfor (var i = 0; i < this._oOnMetaData.onFailure.length; i++) {\n\t\t\t\tthis._oOnMetaData.onFailure[i]();\n\t\t\t}\n\t\t\tthis._oOnMetaData = {\n\t\t\t\tonSuccess: [],\n\t\t\t\tonFailure: []\n\t\t\t};\n\t\t},\n\n\t\t// - Navigation methods are forwarded to the NavigationManager\n\n\t\tnavBackToMasterPageInPhone: function() {\n\t\t\treturn this._oNavigationManager.navBackToMasterPageInPhone();\n\t\t},\n\n\t\tshowProductDetailPage: function(sProductId, bListRefresh) {\n\t\t\t// This method navigates to the display page for the specified product id. Note that this method must only\n\t\t\t// be called when either no draft exists (for the current user), or the deletion of this draft has been triggered already,\n\t\t\t// or the lookup for lost draft has failed.\n\t\t\tthis._oNavigationManager.showProductDetailPage(sProductId, bListRefresh);\n\t\t},\n\n\t\tnavToMaster: function(sPrefereredId) {\n\t\t\t// This method navigates to the master route. sPreferredId is an optional parameter that may contain the id of a\n\t\t\t// product that (on non-phone devices) is preferably shown (provided it is in the master list). Prerequisites for\n\t\t\t// calling this method are as for showProductDetailPage.\n\t\t\tthis._oNavigationManager.navToMaster(sPrefereredId);\n\t\t},\n\n\t\tnavToProductEditPage: function(sDraftId) {\n\t\t\t// This method navigates to the edit page for the (only existing) draft for this user. Note that this method must only\n\t\t\t// be called when this draft exists and its id is either passed as parameter sDraftId or is already contained in attribute\n\t\t\t// productId of the AppModel.\n\t\t\tthis._oNavigationManager.navToProductEditPage(sDraftId);\n\t\t},\n\n\t\tnavToEmptyPage: function(sText, bResetUrl) {\n\t\t\t// This method navigates to the empty page in detail area. Prerequisites for\n\t\t\t// calling this method are as for showProductDetailPage.\n\t\t\t// sText is the text to be shown on the empty page\n\t\t\tthis._oNavigationManager.navToEmptyPage(sText, bResetUrl);\n\t\t},\n\n\t\tnavBack: function(bFromDetail) {\n\t\t\tthis._oNavigationManager.navBack(bFromDetail, this._oDataHelper);\n\t\t},\n\n\t\t// --- Methods dealing with lost drafts\n\n\t\t_checkForLostDraft: function() {\n\t\t\t// This method triggers the check for a lost draft. It is called directly after the metadata have been loaded.\n\t\t\t// If the backend call fails, this method will be called on every list refresh until it succeeds the first time.\n\t\t\t// Note that performing this logic in onMetaDataLoaded has two advantages:\n\t\t\t// - the types of the oData response for the lost draft are set correctly\n\t\t\t// - the call will implicitly be batched with the first call to determine the master list\n\t\t\tthis._oApplicationProperties.setProperty(\"/lostDraftReadState\", 0);\n\t\t\tvar fnError = function(oResponse) {\n\t\t\t\tthis._oApplicationProperties.setProperty(\"/lostDraftReadState\", -1);\n\t\t\t\tmessages.showErrorMessage(oResponse, this._oMainView);\n\t\t\t};\n\t\t\t// delegate oData call to the helper object\n\t\t\tthis._oDataHelper.readProductDraft(this.handleLostDraft.bind(this), fnError.bind(this));\n\t\t},\n\n\t\thandleLostDraft: function(sDraftId, oProductDraft) {\n\t\t\t// This method will be called when we have successfully retrieved the information on lost drafts.\n\t\t\t// If a lost draft exists its id is passed in parameter sDraftId and the full object is passed in oProductDraft.\n\t\t\t// Otherwise both parameters are faulty.\n\t\t\t// Note that onRoutePatdaternMatched has been executed at this point in time.\n\t\t\tthis._oApplicationProperties.setProperty(\"/lostDraftReadState\", 1);\n\t\t\tif (sDraftId) { // a lost draft exists\n\t\t\t\tvar sLastId = this._oApplicationProperties.getProperty(\"/productId\"); // store the id of the product currently displayed (if there is one)\n\t\t\t\tif (sLastId !== sDraftId && !oProductDraft.IsDirty) { // if the lost draft is not dirty and it is not the current one\n\t\t\t\t\tthis._oDataHelper.deleteDraft(sDraftId); // delete it without notice\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.navToProductEditPage(sDraftId); // the lost draft is either dirty or belonging to the product currently displayed -> go to its edit page\n\t\t\t\tif (sLastId === sDraftId) { // if the user was working on this product anyway we are done\n\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/isDirty\", oProductDraft.IsDirty); // but update the global isDirty-property first\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// User has a lost (dirty) draft belonging to another object than he is currently looking at.\n\t\t\t\t// -> he must either edit this draft or revert it\n\t\t\t\tvar oDialog,\n\t\t\t\t\tfnDiscarded = function() { // this method is called when the user decides to revert the draft\n\t\t\t\t\t\toDialog.close();\n\t\t\t\t\t\tthis._oDataHelper.deleteDraft(sDraftId); // delete the draft\n\t\t\t\t\t\tif (sLastId) { // preferably go back to the product we were working on before\n\t\t\t\t\t\t\tthis.showProductDetailPage(sLastId);\n\t\t\t\t\t\t} else { // Otherwise we prefer to display the product we had in edit screen, if possible\n\t\t\t\t\t\t\tthis.navToMaster(!oProductDraft.IsNew && sDraftId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tfnResumed = function() {\n\t\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/isDirty\", true); // the draft is already dirty\n\t\t\t\t\t\toDialog.close(); // when the user wants to resume the draft, we are already on the right screen\n\t\t\t\t\t}.bind(this);\n\n\t\t\t\toDialog = sap.ui.xmlfragment(\"nw.epm.refapps.ext.prod.manage.view.LostDraftDialog\", {\n\t\t\t\t\toResourceBundle: this._oComponent.getModel(\"i18n\").getResourceBundle(),\n\t\t\t\t\tformatter: formatter,\n\t\t\t\t\tonDiscard: fnDiscarded,\n\t\t\t\t\tonResume: fnResumed\n\t\t\t\t});\n\t\t\t\tutilities.attachControlToView(this._oMainView, oDialog);\n\t\t\t\tvar oDraftModel = new JSONModel({\n\t\t\t\t\tproductDraft: oProductDraft\n\t\t\t\t});\n\t\t\t\toDialog.setModel(oDraftModel, \"draft\");\n\t\t\t\toDialog.open();\n\t\t\t}\n\t\t},\n\n\t\t// --- Methods dealing with deletion of products\n\n\t\tdeleteListener: function(bBeforeDelete, aPaths) {\n\t\t\t// This function deals with deleting of products.\n\t\t\t// It must be called twice for every delete operations performed on products (not for other entities like product drafts).\n\t\t\t// The first time it is called is before the delete operation is performed.\n\t\t\t// The second time is, after the delete operation has been performed successfully (at least partially)\n\t\t\t// -bBeforeDelete denotes the information which case applies\n\t\t\t// -aPaths is the array of product ids to be deleted\n\t\t\tif (bBeforeDelete) {\n\t\t\t\tthis._beforeDelete(aPaths);\n\t\t\t} else {\n\t\t\t\tthis._afterDelete();\n\t\t\t}\n\t\t},\n\n\t\t_beforeDelete: function(aPaths) {\n\t\t\t// called immediately before products are deleted.\n\t\t\t// The task of this method is to predefine the object which should be displayed after the deletion process.\n\t\t\t// This is done by setting the attributes productId and preferredIds ain the AppModel.\n\t\t\t// Thereby, the logic is as follows: If the item that is currently displayed is not to be deleted it should stay the the seletced one.\n\t\t\t// Otherwise, we build a list of preferred entries. Thereby, we prefer to take the list items being currently behind the current item.\n\t\t\t// As a second preference we take those items in front of the present one (starting with the last).\n\t\t\t// Note that we also consider items which shall be deleted, as the deletion may fail partially.\n\t\t\tvar sCurrentId = !Device.system.phone && this._oApplicationProperties.getProperty(\"/productId\");\n\t\t\tthis._oApplicationProperties.setProperty(\"/productId\", null);\n\t\t\tif (sCurrentId) {\n\t\t\t\tvar bCurrentWillBeDeleted = false,\n\t\t\t\t\tsCurrentPath = this._oDataHelper.getPathForProductId(sCurrentId);\n\t\t\t\tfor (var i = 0; !bCurrentWillBeDeleted && i < aPaths.length; i++) {\n\t\t\t\t\tbCurrentWillBeDeleted = sCurrentPath === aPaths[i];\n\t\t\t\t}\n\t\t\t\tif (!bCurrentWillBeDeleted) {\n\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/productId\", sCurrentId);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._oMasterController) {\n\t\t\t\tthis._oMasterController.prepareForDelete(sCurrentId);\n\t\t\t}\n\t\t},\n\n\t\t// Called immediately after a successfull deletion of products has taken place.\n\t\t_afterDelete: function() {\n\t\t\tthis.navBackToMasterPageInPhone();\n\t\t\tif (!this._oApplicationProperties.getProperty(\"/isListLoading\")) {\n\t\t\t\tthis._oMasterController.findItem();\n\t\t\t}\n\t\t},\n\n\t\t// --- Methods to be called by the controllers\n\n\t\tgetODataHelper: function() {\n\t\t\t// Returns the (singleton) helper for handling oData operations in this application\n\t\t\treturn this._oDataHelper;\n\t\t},\n\n\t\t// This method can be called when another action depends on the fact that the metadata have been loaded successfully.\n\t\t// More precisely the contract of this method is as follows:\n\t\t// - when the metadata have already been loaded successfully fnMetadataLoaded is executed immediately.\n\t\t//   Moreover in this case the check for lost draft would be triggered once more if it has failed before\n\t\t// - In case the metadata have not yet been loaded successfully, it is once more tried to load the metadata.\n\t\t//   fnMetadataLoaded will be called when the metadata have been loaded succesfully, whereas fnNoMetadata will\n\t\t//   be called when the metadata loading has failed.\n\t\t// - When the method is called while the metadata are still loading, fnMetaDataLoaded and fnNoMetadata will override\n\t\t//   functions which jhave been provided by previous calls. However, this cannot happen, since the App is busy\n\t\t//   while metadata are loading.\n\t\twhenMetadataLoaded: function(fnMetadataLoaded, fnNoMetadata) {\n\t\t\tvar iMetadataLoadState = this._oApplicationProperties.getProperty(\"/metaDataLoadState\");\n\t\t\tif (iMetadataLoadState === 1) {\n\t\t\t\tif (fnMetadataLoaded) {\n\t\t\t\t\tfnMetadataLoaded();\n\t\t\t\t}\n\t\t\t\tif (this._oApplicationProperties.getProperty(\"/lostDraftReadState\") < 0) {\n\t\t\t\t\tthis._checkForLostDraft();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (fnMetadataLoaded) {\n\t\t\t\t\tthis._oOnMetaData.onSuccess.push(fnMetadataLoaded);\n\t\t\t\t}\n\t\t\t\tif (fnNoMetadata) {\n\t\t\t\t\tthis._oOnMetaData.onFailure.push(fnNoMetadata);\n\t\t\t\t}\n\t\t\t\tif (iMetadataLoadState === -1) {\n\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/metaDataLoadState\", 0);\n\t\t\t\t\tthis._oComponent.getModel().refreshMetadata();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// This method is only important in portrait mode on a tablet. There it hides the master list.\n\t\thideMasterInPortrait: function() {\n\t\t\tthis._oMainView.getController().hideMaster();\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/utilities.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/Device\"],function(D){\"use strict\";var c=D.support.touch?\"sapUiSizeCozy\":\"sapUiSizeCompact\";return{getContentDensityClass:function(){return c;},attachControlToView:function(v,C){jQuery.sap.syncStyleClass(c,v,C);v.addDependent(C);}};});",
		"nw/epm/refapps/ext/prod/manage/controller/SubControllerForShare.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/base/Object\",\"./utilities\",\"nw/epm/refapps/ext/prod/manage/model/formatter\"],function(O,u,f){\"use strict\";return O.extend(\"nw.epm.refapps.ext.prod.manage.controller.SubControllerForShare\",{formatter:f,constructor:function(p,r){this._oParentView=p;this._oResourceBundle=r;},openDialog:function(e){var s=e.getSource();this._oProduct=this._oParentView.getBindingContext().getObject();if(!this._oShareDialog){this._oShareDialog=sap.ui.xmlfragment(this._oParentView.getId(),\"nw.epm.refapps.ext.prod.manage.view.ShareSheet\",this);u.attachControlToView(this._oParentView,this._oShareDialog);}this._oShareDialog.openBy(s);},onEmailPressed:function(){this._triggerEmail();},_triggerEmail:function(){sap.m.URLHelper.triggerEmail(null,this._getEmailSubject(),this._getEmailContent());},_getEmailSubject:function(){return this._oResourceBundle.getText(\"xtit.emailSubject\",[this._oProduct.Name]);},_getEmailContent:function(){return this._oResourceBundle.getText(\"xtit.emailContent\",[this._oProduct.Id,this._oProduct.Description,this._oProduct.SupplierName]);}});});",
		"nw/epm/refapps/ext/prod/manage/controller/ProductEdit.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/core/mvc/Controller\",\"sap/ui/core/Component\",\"sap/ui/model/json/JSONModel\",\"sap/ui/comp/odata/MetadataAnalyser\",\"sap/ui/comp/providers/ValueHelpProvider\",\"sap/ui/model/Sorter\",\"sap/ui/Device\",\"sap/ui/model/Filter\",\"sap/ui/model/FilterType\",\"sap/ui/model/FilterOperator\",\"sap/ui/core/ValueState\",\"./SubControllerForShare\",\"nw/epm/refapps/ext/prod/manage/model/formatter\"],function(C,a,J,M,V,S,D,F,b,c,d,e,f){\"use strict\";function A(g){var h=null;for(var i=0;i<g.length;i++){var E=g[i];if(E){if(h){h.push(E);}}else if(!h){h=g.slice(0,i);}}return h||g;}return C.extend(\"nw.epm.refapps.ext.prod.manage.controller.ProductEdit\",{formatter:f,onInit:function(){this._oView=this.getView();this._initViewPropertiesModel();var o=this.getOwnerComponent();this._oApplicationProperties=o.getModel(\"appProperties\");this._oApplicationController=this._oApplicationProperties.getProperty(\"/applicationController\");this._oResourceBundle=o.getModel(\"i18n\").getResourceBundle();this._oHelper=this._oApplicationController.getODataHelper();this._oSubControllerForShare=new e(this._oView,this._oResourceBundle);this._oCategory=this.byId(\"categoryBox\");this._oSubcategory=this.byId(\"subcategoryBox\");this._aMandatoryFields=this._getMandatoryFields();this._aInputFields=this._aMandatoryFields.concat(this._getNonMandatoryInputFields());this._initSubViewImageUpload();var m=o.getModel();m.attachMetadataLoaded(function(){var i=this.byId(\"supplierInput\"),g=new M(m),s=\"SupplierName\",h=o.getMetadata().getConfig(),j=h.serviceConfig.name,k=j+\".ProductDraft/\"+s,v=g.getValueListAnnotation(k);if(i){new V({annotation:v.primaryValueListAnnotation,additionalAnnotations:v.additionalAnnotations,control:i,model:m,preventInitialDataFetchInValueHelpDialog:true,supportMultiSelect:false,supportRanges:false,fieldName:s,title:s});i.setShowValueHelp(true);}},this);},_initViewPropertiesModel:function(){this._oViewProperties=new J({dataLoaded:false});this._oView.setModel(this._oViewProperties,\"viewProperties\");},_getMandatoryFields:function(){return A([this.byId(\"productNameInput\"),this.byId(\"priceInput\"),this.byId(\"currencyBox\"),this._oCategory,this._oSubcategory,this.byId(\"descriptionArea\"),this.byId(\"supplierInput\"),this.byId(\"unitOfMeasureBox\")]);},_getNonMandatoryInputFields:function(){return A([this.byId(\"lengthInput\"),this.byId(\"widthInput\"),this.byId(\"heightInput\"),this.byId(\"weightInput\")]);},_initSubViewImageUpload:function(){var s=this.byId(\"View_ImageUpload\");if(s){s.getController().setInitData({oResourceBundle:this._oResourceBundle,oDataHelper:this._oHelper,fnDirty:this._setDirty.bind(this)});}},show:function(){var p=this._oApplicationProperties.getProperty(\"/productId\");this._oViewProperties.setProperty(\"/dataLoaded\",false);this._resetValueStates();this._sContextPath=this._oHelper.getPathForDraftId(p);this._oView.bindElement(this._sContextPath,{expand:\"Images\"});var B=this._oView.getBindingContext();if(B&&B.getPath()===this._sContextPath){this._oView.getElementBinding().refresh();}this._oView.getElementBinding().attachEventOnce(\"dataReceived\",function(){B=this._oView.getBindingContext();if(B){this._oApplicationProperties.setProperty(\"/isDirty\",B.getProperty(\"IsDirty\"));this._oViewProperties.setProperty(\"/dataLoaded\",true);this._setCategoryFilter(B);}else{this._oApplicationController.showProductDetailPage(p);}this._oApplicationProperties.setProperty(\"/isBusyCreatingDraft\",false);},this);},leave:function(){this._oView.unbindElement();},onSavePressed:function(){if(!this._checkAndMarkEmptyMandatoryFields()&&!this._fieldWithErrorState()){var g=function(o,r){for(var i=0;i<r.__batchResponses.length;i++){if(r.__batchResponses[i].response){if(jQuery.sap.startsWith(r.__batchResponses[i].response.body,\"{\\\"error\\\":\")){var E=new J();E.setJSON(r.__batchResponses[i].response.body);var m=E.getProperty(\"/error/message/value\");if(o){o.setValueState(\"Error\");o.setValueStateText(m);}return false;}}}return true;},h=function(p){this._oApplicationProperties.setProperty(\"/masterBusyIndicatorDelay\",0);this._oApplicationController.showProductDetailPage(p.Id,true);this._oApplicationProperties.setProperty(\"/isBusySaving\",false);var m=this._oResourceBundle.getText(\"ymsg.saveText\",p.Name);sap.ui.require([\"sap/m/MessageToast\"],function(i){i.show(m);});}.bind(this);this._oHelper.activateProduct(g,h);}},onCancelPressed:function(){var o=this._oView.getBindingContext().getObject(),n=function(){this._oApplicationProperties.setProperty(\"/detailBusyIndicatorDelay\",null);var i=o.IsNewProduct,p=i?(!D.system.phone&&this._oApplicationProperties.getProperty(\"/lastDisplay\")):o.ProductId;if(p){this._oApplicationController.showProductDetailPage(p);}else{this._oApplicationController.navToMaster();}}.bind(this);this._deleteProductDraft(n);},onSharePressed:function(E){this._oSubControllerForShare.openDialog(E);},onNavButtonPress:function(){this._oApplicationController.navBack(true);},_deleteProductDraft:function(g,h){this._oHelper.deleteProductDraft(this._sContextPath,g,h);},onNumberChange:function(E){var o=E.getSource(),n=o.getValue();if(n===\"\"){o.setValue(\"0\");}this._fieldChange(o);},onCategoryChange:function(E){E.getSource().setValueState(d.None);this._setCategoryFilter(this._oView.getBindingContext());},onInputChange:function(E){var o=E.getSource();setTimeout(function(){this._fieldChange(o);}.bind(this),0);},onSubcategoryChange:function(E){var v=this._oSubcategory.getValue();if(!v.trim()){return;}if(this._oCategory){this._oCategory.setValueState(d.None);var s=E.getParameter(\"selectedItem\"),B=s.getBindingContext(),m=B.getProperty(\"MainCategoryId\");if(m!==this._oCategory.getValue()){this._oCategory.setValue(m);}}this._fieldChange(this._oSubcategory);},onSelectChange:function(){this._setDirty();this._oHelper.saveSelectProductDraft();},suggestMethod:function(E){sap.m.InputODataSuggestProvider.suggest(E);},_resetValueStates:function(){jQuery.each(this._aInputFields,function(i,g){g.setValueState(d.None);});},_fieldWithErrorState:function(){return this._aInputFields.some(function(i){return(i.getValueState()===d.Error);});},_fieldChange:function(o){this._setDirty();o.setValueState(d.None);var s=function(m){if(m&&o){o.setValueState(\"Error\");o.setValueStateText(m);}};this._oHelper.saveProductDraft(s);},_checkAndMarkEmptyMandatoryFields:function(){var E=false;jQuery.each(this._aMandatoryFields,function(i,g){if(!g.getValue()||g.getValue().trim()===\"\"){E=true;g.setValueState(d.Error);}});return E;},_setCategoryFilter:function(B){if(this._oSubcategory){var m=B.getProperty(\"MainCategoryId\"),s=B.getProperty(\"SubCategoryId\"),g=m?[new F(\"MainCategoryName\",c.StartsWith,m)]:[],o=this._oSubcategory.getBinding(\"items\");if(m){o.attachEventOnce(\"change\",function(){var h=o.getContexts(),i=h.some(function(E){return s===E.getProperty(\"Id\");}).bind(this);if(!i){this._oSubcategory.setValue(\" \");}},this);}else{this._oSubcategory.setValue(\" \");}o.filter(g,b.Application);}},_setDirty:function(){this._oApplicationProperties.setProperty(\"/isDirty\",true);}});});",
		"nw/epm/refapps/ext/prod/manage/controller/Application.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/base/Object\",\"sap/ui/Device\",\"sap/ui/model/json/JSONModel\",\"sap/ui/model/odata/v2/ODataModel\",\"./NavigationManager\",\"./messages\",\"./utilities\",\"nw/epm/refapps/ext/prod/manage/model/Products\",\"nw/epm/refapps/ext/prod/manage/model/formatter\"],function(O,D,J,a,N,m,u,P,f){\"use strict\";function I(A){var b={isBusyDeleting:true,isBusyCreatingDraft:true,isBusySaving:true,metaDataLoadState:0,lostDraftReadState:0},r=function(){var i=false;for(var s in b){var e=b[s];var v=A.getProperty(\"/\"+s);if(e===v){i=true;A.setProperty(\"/detailBusyIndicatorDelay\",0);break;}}A.setProperty(\"/isAppBusy\",i);};for(var p in b){var B=A.bindProperty(\"/\"+p);B.attachChange(r);}}return O.extend(\"nw.epm.refapps.ext.prod.manage.controller.Application\",{constructor:function(c,r){this._oComponent=c;this._mRoutes=r;},init:function(s){this._oMainView=this._oComponent.getAggregation(\"rootControl\");this._oOnMetaData={onSuccess:[],onFailure:[]};var o=this._oComponent.getModel();o.attachMetadataLoaded(this.onMetadataLoaded,this);o.attachMetadataFailed(this.onMetadataFailed,this);this._oApplicationProperties=new J({serviceUrl:s,metaDataLoadState:0,lostDraftReadState:-1,isBusyDeleting:false,isBusyCreatingDraft:false,isBusySaving:false,isAppBusy:true,detailBusyIndicatorDelay:0,masterBusyIndicatorDelay:0,applicationController:this,isMultiSelect:false,noEditMode:true,preferredIds:[],isDirty:false,lastDisplay:null,isListLoading:false,listNoDataText:\" \"});this._oComponent.setModel(this._oApplicationProperties,\"appProperties\");I(this._oApplicationProperties);this._oDataHelper=new P(this._oComponent,this._oMainView);var r=this._oComponent.getRouter();this._oNavigationManager=new N(r,this._oApplicationProperties,this._mRoutes,this._oComponent.getModel(\"i18n\").getResourceBundle());this._oNavigationManager.init();this._extractStartupParameters(r);},_extractStartupParameters:function(r){var c=this._oComponent.getComponentData();if(c&&c.startupParameters&&jQuery.isArray(c.startupParameters.Product)&&c.startupParameters.Product.length>0){var U=r.getURL(this._mRoutes.DETAIL,{productID:c.startupParameters.Product[0]});if(U){sap.ui.require([\"sap/ui/core/routing/HashChanger\"],function(H){var h=H.getInstance();h.replaceHash(U);});}}},registerMaster:function(M){this._oMasterController=M;this._oNavigationManager.registerMaster(M);},registerDetail:function(d){this._oNavigationManager.registerDetail(d);},onMetadataLoaded:function(){this._checkForLostDraft();this._oApplicationProperties.setProperty(\"/metaDataLoadState\",1);this._oApplicationProperties.setProperty(\"/isListLoading\",true);for(var i=0;i<this._oOnMetaData.onSuccess.length;i++){this._oOnMetaData.onSuccess[i]();}this._oOnMetaData=null;},onMetadataFailed:function(){this._oApplicationProperties.setProperty(\"/metaDataLoadState\",-1);for(var i=0;i<this._oOnMetaData.onFailure.length;i++){this._oOnMetaData.onFailure[i]();}this._oOnMetaData={onSuccess:[],onFailure:[]};},navBackToMasterPageInPhone:function(){return this._oNavigationManager.navBackToMasterPageInPhone();},showProductDetailPage:function(p,l){this._oNavigationManager.showProductDetailPage(p,l);},navToMaster:function(p){this._oNavigationManager.navToMaster(p);},navToProductEditPage:function(d){this._oNavigationManager.navToProductEditPage(d);},navToEmptyPage:function(t,r){this._oNavigationManager.navToEmptyPage(t,r);},navBack:function(F){this._oNavigationManager.navBack(F,this._oDataHelper);},_checkForLostDraft:function(){this._oApplicationProperties.setProperty(\"/lostDraftReadState\",0);var e=function(r){this._oApplicationProperties.setProperty(\"/lostDraftReadState\",-1);m.showErrorMessage(r,this._oMainView);};this._oDataHelper.readProductDraft(this.handleLostDraft.bind(this),e.bind(this));},handleLostDraft:function(d,p){this._oApplicationProperties.setProperty(\"/lostDraftReadState\",1);if(d){var l=this._oApplicationProperties.getProperty(\"/productId\");if(l!==d&&!p.IsDirty){this._oDataHelper.deleteDraft(d);return;}this.navToProductEditPage(d);if(l===d){this._oApplicationProperties.setProperty(\"/isDirty\",p.IsDirty);return;}var o,b=function(){o.close();this._oDataHelper.deleteDraft(d);if(l){this.showProductDetailPage(l);}else{this.navToMaster(!p.IsNew&&d);}}.bind(this),r=function(){this._oApplicationProperties.setProperty(\"/isDirty\",true);o.close();}.bind(this);o=sap.ui.xmlfragment(\"nw.epm.refapps.ext.prod.manage.view.LostDraftDialog\",{oResourceBundle:this._oComponent.getModel(\"i18n\").getResourceBundle(),formatter:f,onDiscard:b,onResume:r});u.attachControlToView(this._oMainView,o);var c=new J({productDraft:p});o.setModel(c,\"draft\");o.open();}},deleteListener:function(b,p){if(b){this._beforeDelete(p);}else{this._afterDelete();}},_beforeDelete:function(p){var c=!D.system.phone&&this._oApplicationProperties.getProperty(\"/productId\");this._oApplicationProperties.setProperty(\"/productId\",null);if(c){var C=false,s=this._oDataHelper.getPathForProductId(c);for(var i=0;!C&&i<p.length;i++){C=s===p[i];}if(!C){this._oApplicationProperties.setProperty(\"/productId\",c);return;}}if(this._oMasterController){this._oMasterController.prepareForDelete(c);}},_afterDelete:function(){this.navBackToMasterPageInPhone();if(!this._oApplicationProperties.getProperty(\"/isListLoading\")){this._oMasterController.findItem();}},getODataHelper:function(){return this._oDataHelper;},whenMetadataLoaded:function(M,n){var i=this._oApplicationProperties.getProperty(\"/metaDataLoadState\");if(i===1){if(M){M();}if(this._oApplicationProperties.getProperty(\"/lostDraftReadState\")<0){this._checkForLostDraft();}}else{if(M){this._oOnMetaData.onSuccess.push(M);}if(n){this._oOnMetaData.onFailure.push(n);}if(i===-1){this._oApplicationProperties.setProperty(\"/metaDataLoadState\",0);this._oComponent.getModel().refreshMetadata();}}},hideMasterInPortrait:function(){this._oMainView.getController().hideMaster();}});});",
		"nw/epm/refapps/ext/prod/manage/Component.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/core/UIComponent\",\"./controller/Application\",\"./model/models\",\"sap/ui/Device\"],function(U,A,m,D){\"use strict\";var r={MASTER:\"Products\",DETAIL:\"ProductDetails\"};return U.extend(\"nw.epm.refapps.ext.prod.manage.Component\",{metadata:{name:\"xtit.shellTitle\",version:\"2.0.11-SNAPSHOT\",includes:[\"css/manageProductStyle.css\"],dependencies:{libs:[\"sap.m\",\"sap.ushell\"],components:[]},rootView:\"nw.epm.refapps.ext.prod.manage.view.App\",config:{resourceBundle:\"i18n/i18n.properties\",titleResource:\"xtit.shellTitle\",icon:\"sap-icon://Fiori7/F1373\",favIcon:\"icon/F0865_Manage_Products.ico\",phone:\"icon/launchicon/57_iPhone_Desktop_Launch.png\",\"phone@2\":\"icon/launchicon/114_iPhone-Retina_Web_Clip.png\",tablet:\"icon/launchicon/72_iPad_Desktop_Launch.png\",\"tablet@2\":\"icon/launchicon/144_iPad_Retina_Web_Clip.png\",serviceConfig:{name:\"EPM_REF_APPS_PROD_MAN_SRV\",serviceUrl:\"/sap/opu/odata/sap/EPM_REF_APPS_PROD_MAN_SRV\"}},routing:{config:{routerClass:\"sap.m.routing.Router\",viewType:\"XML\",viewPath:\"nw.epm.refapps.ext.prod.manage.view\",controlId:\"fioriContent\",bypassed:{target:[\"master\",\"empty\"]}},routes:[{pattern:\"\",name:r.MASTER,target:[\"object\",\"master\"]},{pattern:\"Product/{productID}\",name:r.DETAIL,target:[\"master\",\"object\"]}],targets:{master:{viewName:\"S2_ProductMaster\",viewLevel:1,controlAggregation:\"masterPages\"},object:{viewName:\"S3_ProductDetail\",viewLevel:2,controlAggregation:\"detailPages\"},empty:{viewName:\"EmptyPage\",viewLevel:3,controlAggregation:\"detailPages\"}}}},init:function(){var c=this.getMetadata().getConfig();var M=m.createODataModel({urlParametersForEveryRequest:[\"sap-server\",\"sap-client\",\"sap-language\"],url:this.getMetadata().getConfig().serviceConfig.serviceUrl,config:{metadataUrlParams:{\"sap-documentation\":\"heading\"},json:true,defaultBindingMode:\"TwoWay\",useBatch:true,defaultCountMode:\"Inline\",loadMetadataAsync:true}});M.setDeferredBatchGroups([\"editproduct\",\"BatchDelete\"]);M.setChangeBatchGroups({\"ProductDraft\":{batchGroupId:\"editproduct\"}});this.setModel(M);var R=jQuery.sap.getModulePath(\"nw.epm.refapps.ext.prod.manage\");this.setModel(m.createResourceModel(R,c.resourceBundle),\"i18n\");this.setModel(m.createDeviceModel(),\"device\");U.prototype.init.apply(this,arguments);this._oApplicationController=new A(this,r);this._oApplicationController.init(this.getMetadata().getConfig().serviceConfig.serviceUrl);this.getRouter().initialize();},destroy:function(){this.getModel().destroy();this.getModel(\"i18n\").destroy();this.getModel(\"device\").destroy();U.prototype.destroy.apply(this,arguments);}});});",
		"nw/epm/refapps/ext/prod/manage/model/Products-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\n// Helper class for centrally handling oData CRUD and function import services. The interface provides the business\n// meanings for the application and can be reused in different places where the UI-specific actions after the call\n// could still be different and will be handled in the corresponding controller of the view.\n// Every (main) view of this app has an instance of this class as an attribute so that it can forward all explicit\n// backend calls to it.\n// Note that this class forwards all delete operations to helper class nw.epm.refapps.products.manage.model.RemoveService,\n// which is instantiated on demand.\nsap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"./RemoveService\",\n\t\"nw/epm/refapps/ext/prod/manage/controller/messages\"\n], function(Object, JSONModel, RemoveService, messages) {\n\t\"use strict\";\n\n\treturn Object.extend(\"nw.epm.refapps.ext.prod.manage.model.Products\", {\n\t\t// Attributes of this class: \n\t\t// _oResourceBundle, _oODataModel, _oApplicationProperties, _oApplicationController, _oMainView\n\t\t// are the global objects used throughout this app\n\t\t// _fnDeleteListener: see methods deleteListener of nw.epm.refapps.ext.prod.manage.Application \n\t\t// _oWhenNoDraft: Is a Promise that will be resolved as soon as there is no draft \n\t\t// which is currently in the process of being deleted.\n\t\t// _fnSetBackBusyDraftState: a function that sets back the global state isBusyCreatingDraft to false\n\t\tconstructor: function(oComponent, oMainView) {\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oODataModel = oComponent.getModel();\n\t\t\tthis._oApplicationProperties = oComponent.getModel(\"appProperties\");\n\t\t\tthis._oApplicationController = this._oApplicationProperties.getProperty(\"/applicationController\");\n\t\t\tthis._fnDeleteListener = this._oApplicationController.deleteListener.bind(this._oApplicationController);\n\t\t\tthis._oMainView = oMainView;\n\t\t\tthis._oWhenNoDraft = new Promise(function(fnResolve) {\n\t\t\t\tfnResolve(); // Since we are currently not in the process of deleting a draft, the Promise is resolved immediately\n\t\t\t});\n\t\t\tthis._fnSetBackBusyDraftState = this._oApplicationProperties.setProperty.bind(this._oApplicationProperties, \"/isBusyCreatingDraft\",\n\t\t\t\tfalse);\n\t\t},\n\n\t\t// Note: This function must not be called before the metadata have been read successfully\n\t\tgetPathForProductId: function(sProductId) {\n\t\t\treturn this._oODataModel.createKey(\"/Products\", {\n\t\t\t\tId: sProductId\n\t\t\t});\n\t\t},\n\n\t\t// Note: This function must not be called before the metadata have been read successfully\n\t\tgetPathForDraftId: function(sDraftId) {\n\t\t\treturn this._oODataModel.createKey(\"/ProductDrafts\", {\n\t\t\t\tId: sDraftId\n\t\t\t});\n\t\t},\n\n\t\t// Delete methods are forwarded to RemoveService. The specification of these methods can be found there.\n\n\t\tdeleteProducts: function(aPaths, fnAfterDeleted) {\n\t\t\tvar oDeleteHelper = this._getDeleteHelper(true, true);\n\t\t\toDeleteHelper.deleteProducts(aPaths, fnAfterDeleted);\n\t\t},\n\n\t\tdeleteProduct: function(sPath, fnAfterDeleted, bWithoutConfirmationDialog) {\n\t\t\tvar oDeleteHelper = this._getDeleteHelper(true, true);\n\t\t\tif (bWithoutConfirmationDialog) {\n\t\t\t\toDeleteHelper.deleteEntityWithoutConfirmationDialog(sPath, fnAfterDeleted, true);\n\t\t\t} else {\n\t\t\t\toDeleteHelper.deleteProduct(sPath, fnAfterDeleted);\n\t\t\t}\n\t\t},\n\n\t\t// Deletes a draft (possibly with confirmation dialog).\n\t\t// Note that this method reassigns _oWhenNoDraft, as a new deletion process is started.\n\t\tdeleteProductDraft: function(sPath, fnAfterDeleted, fnDeleteCanceled) {\n\t\t\tvar oDeleteHelper = this._getDeleteHelper(false, false);\n\t\t\tif (this._oApplicationProperties.getProperty(\"/isDirty\")) {\n\t\t\t\t// User needs to confirm the deletion\n\t\t\t\tvar fnDeleteConfirmed = function(oPromise) {\n\t\t\t\t\tthis._setWhenNoDraft(oPromise);\n\t\t\t\t\tif (fnAfterDeleted) {\n\t\t\t\t\t\tfnAfterDeleted();\n\t\t\t\t\t}\n\t\t\t\t}.bind(this);\n\t\t\t\toDeleteHelper.deleteProductDraft(sPath, fnDeleteConfirmed, fnDeleteCanceled);\n\t\t\t} else {\n\t\t\t\tthis._setWhenNoDraft(oDeleteHelper.deleteEntityWithoutConfirmationDialog(sPath, null, false));\n\t\t\t\tif (fnAfterDeleted) {\n\t\t\t\t\tfnAfterDeleted();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t//  assign the _oWhenNoDraft promise to oPromise and handle error handling.\n\t\t_setWhenNoDraft: function(oPromise) {\n\t\t\tthis._oWhenNoDraft = oPromise;\n\t\t\t// If the deletion of the draft fails we consider ourselves to have been thrown back to the situation that\n\t\t\t// a lost draft may exist.\n\t\t\toPromise.catch(this._oApplicationProperties.setProperty.bind(this._oApplicationProperties, \"/lostDraftReadState\", -1));\n\t\t},\n\n\t\tdeleteImageDraft: function(sPath, fnAfterDeleted) {\n\t\t\tvar oDeleteHelper = this._getDeleteHelper(false, true);\n\t\t\toDeleteHelper.deleteEntityWithoutConfirmationDialog(sPath, fnAfterDeleted, false);\n\t\t},\n\n\t\t// Additional methods for working with products\n\n\t\t// Creates a product draft for a new product.\n\t\tcreateProductDraft: function(fnProductDraftCreated) {\n\t\t\tthis._oApplicationProperties.setProperty(\"/isBusyCreatingDraft\", true);\n\t\t\tvar fnCreateDraft = function() {\n\t\t\t\t// At least one attribute must be filled in the object passed to the create call (requirement of the oData\n\t\t\t\t// service)\n\t\t\t\tvar oNewProduct = {\n\t\t\t\t\tProductId: \"\"\n\t\t\t\t};\n\t\t\t\tthis._oODataModel.create(\"/ProductDrafts\", oNewProduct, {\n\t\t\t\t\tsuccess: fnProductDraftCreated,\n\t\t\t\t\terror: this._getErrorForProcessing(\"isBusyCreatingDraft\")\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t\t// The backend will not accept the creation of a new draft, when still being in the process of\n\t\t\t// deleting the previous one. Therefore, creating the new draft is postponed in this case.\n\t\t\tthis._oWhenNoDraft.then(fnCreateDraft, this._fnSetBackBusyDraftState);\n\t\t},\n\n\t\t// This method checks whether the user currently possesses a draft.\n\t\t// fnHandleDraftId is called when this information has been retrieved.\n\t\t// When a draft was found the id of the draft and the whole draft object are\n\t\t// transferred as parameters to fnHandleDraft. Otherwise fnHandleDraft is called\n\t\t// with faulty parameters.\n\t\treadProductDraft: function(fnHandleDraft, fnError) {\n\t\t\tvar fnSuccess = function(oResponseContent) {\n\t\t\t\tvar oProductDraft = oResponseContent.results[0];\n\t\t\t\tvar sDraftId = oProductDraft && oProductDraft.Id;\n\t\t\t\tfnHandleDraft(sDraftId, oProductDraft);\n\t\t\t};\n\t\t\tthis._oODataModel.read(\"/ProductDrafts\", {\n\t\t\t\tsuccess: fnSuccess,\n\t\t\t\terror: fnError\n\t\t\t});\n\t\t},\n\n\t\t// delete a draft without user interaction\n\t\tdeleteDraft: function(sDraftId, fnAfterDeleted) {\n\t\t\tthis._oApplicationProperties.setProperty(\"/isDirty\", false);\n\t\t\tvar sProductDraftPath = this._oODataModel.createKey(\"ProductDrafts\", {\n\t\t\t\tId: sDraftId\n\t\t\t});\n\t\t\tthis.deleteProductDraft(sProductDraftPath, fnAfterDeleted, null);\n\t\t},\n\n\t\t// Creates product draft from a specified product ID for CopyProduct\n\t\tcopyProductToDraft: function(sProductId, fnNavToDraft) {\n\t\t\tthis._callFunctionAndNavToProductDraft(\"/CopyProduct\", sProductId, fnNavToDraft);\n\t\t},\n\n\t\t// Gets product draft from a specified product ID for EditProduct\n\t\tgetProductDraftFromProductId: function(sProductId, fnNavToDraft) {\n\t\t\tthis._callFunctionAndNavToProductDraft(\"/EditProduct\", sProductId, fnNavToDraft);\n\t\t},\n\n\t\t_callFunctionAndNavToProductDraft: function(sFunctionName, sProductId, fnNavToDraft) {\n\t\t\t// Calls function import EditProduct or CopyProduct\n\t\t\tthis._oApplicationProperties.setProperty(\"/isBusyCreatingDraft\", true);\n\t\t\t// The next draft must not be created before the deletion of the previous draft has been executed\n\t\t\tvar fnCreateDraft = function() {\n\t\t\t\tthis._callFunctionImport(sFunctionName, {\n\t\t\t\t\tProductId: sProductId\n\t\t\t\t}, function(oResponseContent) {\n\t\t\t\t\tif (oResponseContent && oResponseContent.Id) {\n\t\t\t\t\t\tfnNavToDraft(oResponseContent.Id);\n\t\t\t\t\t}\n\t\t\t\t}, \"isBusyCreatingDraft\");\n\t\t\t}.bind(this);\n\t\t\tthis._oWhenNoDraft.then(fnCreateDraft, this._fnSetBackBusyDraftState);\n\t\t},\n\n\t\t// Convenience method for calling function imports. Provides error handling.\n\t\t_callFunctionImport: function(sFunctionName, oURLParameters, fnAfterFunctionExecuted, sProcessingProperty) {\n\t\t\tthis._oODataModel.callFunction(sFunctionName, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\turlParameters: oURLParameters,\n\t\t\t\tsuccess: fnAfterFunctionExecuted,\n\t\t\t\terror: this._getErrorForProcessing(sProcessingProperty)\n\t\t\t});\n\t\t},\n\n\t\t// Turns ProductDraft into Product and deletes ProductDraft\n\t\tactivateProduct: function(fnDraftSaved, fnAfterActivation) {\n\t\t\tthis._oApplicationProperties.setProperty(\"/isBusySaving\", true);\n\t\t\tvar fnResetBusy = function() {\n\t\t\t\tthis._oApplicationProperties.setProperty(\"/isBusySaving\", false);\n\t\t\t}.bind(this);\n\t\t\tthis.oDraftToActivate = {\n\t\t\t\tsDraftId: this._oApplicationProperties.getProperty(\"/productId\"),\n\t\t\t\tfnAfterActivation: fnAfterActivation\n\t\t\t};\n\t\t\tthis._submitChanges(fnResetBusy, fnDraftSaved);\n\t\t},\n\n\t\t// Saves ProductDraft each time a user edits a field\n\t\tsaveProductDraft: function(fnAfterSaved) {\n\t\t\tthis._submitChanges(null, fnAfterSaved);\n\t\t},\n\n\t\t_submitChanges: function(fnSaveFailed, fnAfterSaved) {\n\t\t\tif (this._bIsChanging) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\n\t\t\t\tthis._sMessage = null;\n\t\t\t\tvar fnSuccess = function(oResponseData) {\n\t\t\t\t\tthis._bIsChanging = false;\n\t\t\t\t\tif (!this._oODataModel.hasPendingChanges() || !this._sMessage) {\n\t\t\t\t\t\tvar i;\n\t\t\t\t\t\tfor (i = 0; i < oResponseData.__batchResponses.length && !this._sMessage; i++) {\n\t\t\t\t\t\t\tvar oEntry = oResponseData.__batchResponses[i];\n\t\t\t\t\t\t\tif (oEntry.response) {\n\t\t\t\t\t\t\t\tthis._sMessage = messages.extractErrorMessageFromDetails(oEntry.response.body);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this._sMessage) {\n\t\t\t\t\t\tfnAfterSaved(this._sMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._submitChanges(fnSaveFailed, fnAfterSaved);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this);\n\t\t\t\tthis._bIsChanging = true;\n\t\t\t\tvar oParameters = {\n\t\t\t\t\tsuccess: fnSuccess,\n\t\t\t\t\terror: fnSaveFailed,\n\t\t\t\t\tbatchGroupId: \"editproduct\"\n\t\t\t\t};\n\t\t\t\tthis._oODataModel.submitChanges(oParameters);\n\t\t\t} else if (this.oDraftToActivate) {\n\t\t\t\tif (this._sMessage) {\n\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/isBusySaving\", false);\n\t\t\t\t} else {\n\t\t\t\t\tthis._callFunctionImport(\"/ActivateProduct\", {\n\t\t\t\t\t\tProductDraftId: this.oDraftToActivate.sDraftId\n\t\t\t\t\t}, this.oDraftToActivate.fnAfterActivation, \"isBusySaving\");\n\n\t\t\t\t}\n\t\t\t\tthis.oDraftToActivate = null;\n\t\t\t}\n\t\t},\n\n\t\tsaveSelectProductDraft: function() {\n\t\t\tthis._oODataModel.submitChanges(null, this.onSubmitDraftErrorSelect);\n\t\t},\n\n\t\tonSubmitDraftErrorSelect: function(oError) {\n\t\t\t// Currently no valueStateText for Select Control, but will be delivered by UI5 in v 26\n\t\t\tmessages.showErrorMessage(oError, this._oMainView);\n\t\t},\n\n\t\t// This method is called when a modifying process has run onto an error.\n\t\t// sProcessingProperty is the global property which is currently true making the app busy\n\t\t// and which therefore must now be reset to false.\n\t\t_getErrorForProcessing: function(sProcessingProperty) {\n\t\t\treturn function(oError) {\n\t\t\t\tthis._oApplicationProperties.setProperty(\"/\" + sProcessingProperty, false);\n\t\t\t\tmessages.showErrorMessage(oError, this._oMainView);\n\t\t\t}.bind(this);\n\t\t},\n\n\t\t// Convenience method for retrieving an instance of the RemoveService\n\t\t_getDeleteHelper: function(bCallDeleteListener, bWithBusyDialog) {\n\t\t\treturn new RemoveService(this._oODataModel, this._oResourceBundle, this._oApplicationProperties,\n\t\t\t\tthis._getErrorForProcessing(\"isBusyDeleting\"), bCallDeleteListener && this._fnDeleteListener, bWithBusyDialog);\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/model/models.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/model/json/JSONModel\",\"sap/ui/Device\",\"sap/ui/model/odata/v2/ODataModel\",\"sap/ui/model/resource/ResourceModel\"],function(J,D,O,R){\"use strict\";function e(u,m,s){var E={},S=new URI(s);u.forEach(function(U){var o,p;if(U===\"sap-language\"){var g=jQuery.sap.getObject(\"sap.ushell.Container.getUser\");if(g){m[\"sap-language\"]=g().getLanguage();}}else{o=jQuery.sap.getUriParameters();p=o.get(U);if(p){m[U]=p;S.addSearch(U,p);}}});jQuery.extend(m,E);return S.toString();}return{createODataModel:function(o){var u,c,U;o=o||{};if(!o.url){jQuery.sap.log.error(\"Please provide a url when you want to create an ODataModel\",\"nw/epm/refapps/ext/prod/manage.model.models.createODataModel\");return null;}c=jQuery.extend(true,{},o.config);u=o.urlParametersForEveryRequest||[];c.metadataUrlParams=c.metadataUrlParams||{};U=e(u,c.metadataUrlParams,o.url);return this._createODataModel(U,c);},_createODataModel:function(u,c){return new O(u,c);},createDeviceModel:function(){var m=new J(D);m.setDefaultBindingMode(\"OneWay\");return m;},createResourceModel:function(r,a){this._resourceModel=new R({bundleUrl:[r,a].join(\"/\")});return this._resourceModel;}};});",
		"nw/epm/refapps/ext/prod/manage/model/RemoveService.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/base/Object\",\"sap/m/MessageBox\",\"sap/m/MessageToast\",\"nw/epm/refapps/ext/prod/manage/controller/utilities\"],function(O,M,a,u){\"use strict\";function g(p){return(p.indexOf(\"/\")===0?\"\":\"/\")+p;}return O.extend(\"nw.epm.refapps.ext.prod.manage.model.RemoveService\",{constructor:function(o,r,A,s,d,b){this._oODataModel=o;this._oResourceBundle=r;this._oApplicationProperties=A;this._oApplicationController=this._oApplicationProperties.getProperty(\"/applicationController\");this._fnShowErrorMessage=s;this._fnDeleteListener=d;this._bBusy=b;},deleteProducts:function(p,A){if(p.length===0){return;}var q,s;if(p.length===1){var P=this._oODataModel.getProperty(g(p[0])+\"/Name\");q=this._oResourceBundle.getText(\"ymsg.deleteText\",P);s=this._oResourceBundle.getText(\"ymsg.deleteSuccess\",P);}else{q=this._oResourceBundle.getText(\"ymsg.deleteProducts\",p.length);s=this._oResourceBundle.getText(\"ymsg.deleteMultipleSuccess\",p.length);}var m=function(t){if(t){a.show(s);}if(A){A(t);}};this._confirmDeletionByUser({bDraft:false,question:q},p,m);},deleteProduct:function(p){this.deleteProducts([p]);},deleteProductDraft:function(p,d,D){var q=this._oResourceBundle.getText(\"ymsg.warningConfirm\");var t=this._oResourceBundle.getText(\"xtit.warning\");var c=function(P){if(d){d(P);}};this._confirmDeletionByUser({bDraft:true,title:t,question:q,icon:M.Icon.WARNING},[p],null,D,c);},deleteEntityWithoutConfirmationDialog:function(p,A){return this._callDeleteService([p],A);},_confirmDeletionByUser:function(c,p,A,d,D){var f=function(){var P=this._callDeleteService(p,A);if(D){D(P);}}.bind(this);var l=this._oResourceBundle.getText(\"xbut.leavePage\");var s=(c.bDraft)?l:M.Action.OK;M.show(c.question,{icon:c.icon||M.Icon.WARNING,title:c.title||this._oResourceBundle.getText(\"xtit.delete\"),actions:[s,M.Action.CANCEL],onClose:function(o){if(o===s){f();}else if(d){d();}},styleClass:u.getContentDensityClass()});},_callDeleteService:function(p,A){if(this._bBusy){this._oApplicationProperties.setProperty(\"/isBusyDeleting\",true);}if(this._fnDeleteListener){this._fnDeleteListener(true,p);}var f=function(e){jQuery.sap.log.error(\"EPM Refapp Products\",\"Failed to delete product while calling backend service\");this._fnShowErrorMessage(e);}.bind(this);var s=function(S){if(this._bBusy){this._oApplicationProperties.setProperty(\"/isBusyDeleting\",false);}var t=p.length===1||S;if(A){A(t);}if(this._fnDeleteListener){this._fnDeleteListener(false,p,t);}}.bind(this);return p.length===1?this._deleteOneEntity(p[0],s,f):this._deleteProducts(p,s,f);},_deleteOneEntity:function(p,s,f){var P=new Promise(function(r,R){this._oODataModel.remove(g(p),{success:r,error:R,async:true});}.bind(this));P.then(s,f);return P;},_deleteProducts:function(p,A,f){var d=\"BatchDelete\",n=0,s=function(){n++;},S=function(){if(n){this._showMessageForPartiallyFailedDeletes(n);}A(!n);}.bind(this),P=new Promise(function(r,R){for(var i=0;i<p.length;i++){this._oODataModel.remove(g(p[i]),{error:s,batchGroupId:d,changeSetId:i.toString()});}this._oODataModel.submitChanges({batchGroupId:d,success:r,error:R});}.bind(this));P.then(S,f);return P;},_showMessageForPartiallyFailedDeletes:function(f){M.show(this._oResourceBundle.getText(\"ymsg.deleteNProductsFailed\",f),{icon:M.Icon.ERROR,title:this._oResourceBundle.getText(\"xtit.error\"),styleClass:u.getContentDensityClass()});}});});",
		"nw/epm/refapps/ext/prod/manage/controller/utilities-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/Device\"\n], function(Device) {\n\t\"use strict\";\n\n\t// class providing static utility methods.\n\n\t// the densitiy class that should be used according to the device\n\tvar sContentDensityClass = Device.support.touch ? \"sapUiSizeCozy\" : \"sapUiSizeCompact\";\n\n\treturn {\n\t\t// provide the density class that should be used according to the device type \n\t\tgetContentDensityClass: function() {\n\t\t\treturn sContentDensityClass;\n\t\t},\n\n\t\t// defines a dependency from oControl to oView\n\t\tattachControlToView: function(oView, oControl) {\n\t\t\tjQuery.sap.syncStyleClass(sContentDensityClass, oView, oControl);\n\t\t\toView.addDependent(oControl);\n\t\t}\n\t};\n});",
		"nw/epm/refapps/ext/prod/manage/controller/SubControllerForFGS.js": "// Creates a sub-controller to be used by the master controller to handle specifically filtering, grouping, and sorting\n// dialogs\nsap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/Sorter\",\n\t\"./utilities\"\n], function(Object, Filter, Sorter, utilities) {\n\t\"use strict\";\n\n\t// Reads the SAP attribute label from the list-item context\n\tfunction fnGetSAPLabel(oListItemContext, sAttributeName) {\n\t\treturn oListItemContext.getProperty(\"/#Product/\" + sAttributeName + \"/@sap:label\");\n\t}\n\n\treturn Object.extend(\"nw.epm.refapps.ext.prod.manage.controller.SubControllerForFGS\", {\n\t\t// _aDialogs\n\t\t// _oParentView:\n\t\t// _oResourceBundle:\n\t\t// _fnApplyTableOperations:\n\t\t// _oPriceGroups:\n\n\t\tconstructor: function(oParentView, oTableOperations, fnApplyTableOperations, oResourceBundle) {\n\t\t\tthis._oParentView = oParentView;\n\t\t\tthis._oResourceBundle = oResourceBundle;\n\t\t\tthis._oTableOperations = oTableOperations;\n\t\t\tthis._fnApplyTableOperations = fnApplyTableOperations;\n\t\t\tthis._aDialogs = [];\n\n\t\t\tvar sTextBelow100 = this._getText(\"xfld.groupPriceBetween\", [\" 0-100\"]),\n\t\t\t\tsTextBelow500 = this._getText(\"xfld.groupPriceBetween\", [\" 100-500\"]),\n\t\t\t\tsTextBelow1000 = this._getText(\"xfld.groupPriceBetween\", [\" 500-1000\"]),\n\t\t\t\tsTextAbove1000 = this._getText(\"xfld.groupPrice\", [\" 1000\"]);\n\n\t\t\t// Sets the pre-defined price ranges for use in grouping. The texts can only be defined once i18n bundle is\n\t\t\t// available because the text \"price between\" is defined only once.\n\t\t\tthis._oPriceGroups = {\n\t\t\t\t\"LE100\": sTextBelow100,\n\t\t\t\t\"BT100-500\": sTextBelow500,\n\t\t\t\t\"BT500-1000\": sTextBelow1000,\n\t\t\t\t\"GT1000\": sTextAbove1000,\n\t\t\t\t\"unknownPrice\": \"?\"\n\t\t\t};\n\t\t\t/*\n\t\t\t<!--                                                                                -->\n\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\n\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\n\t\t\t<!-- begin                                                                          -->\n\t\t\t*/\n\t\t\tthis._oAverageRatingGroups = {\n\t\t\t\t\"eq0\": \"No Rating\",\n\t\t\t\t\"bt-1-2\": \"Average Rating: 1-2 (Low)\",\n\t\t\t\t\"bt-2-4\": \"Average Rating: 2-4 (Medium)\",\n\t\t\t\t\"gt4\": \"Average Rating: 4-5 (High)\",\n\t\t\t\t\"unknownRating\": \"?\"\n\t\t\t};\n\t\t\t/*\n\t\t\t<!-- end                                                                            -->\n\t\t\t*/\n\t\t\tvar oViewPropertiesModel = oParentView.getModel(\"viewProperties\");\n\t\t\toViewPropertiesModel.setProperty(\"/LE100\", sTextBelow100);\n\t\t\toViewPropertiesModel.setProperty(\"/BT100-500\", sTextBelow500);\n\t\t\toViewPropertiesModel.setProperty(\"/BT500-1000\", sTextBelow1000);\n\t\t\toViewPropertiesModel.setProperty(\"/GT1000\", sTextAbove1000);\n\t\t},\n\n\t\t// Opens the requested filter, grouping, and sorting dialogs\n\t\topenDialog: function(sDialogFragmentName, sInitialSelection) {\n\t\t\tsDialogFragmentName = \"nw.epm.refapps.ext.prod.manage.view.\" + sDialogFragmentName;\n\t\t\tvar oDialog = this._aDialogs[sDialogFragmentName];\n\t\t\tif (!oDialog) {\n\t\t\t\tthis._aDialogs[sDialogFragmentName] = oDialog = sap.ui.xmlfragment(sDialogFragmentName, this);\n\t\t\t\tutilities.attachControlToView(this._oParentView, oDialog);\n\t\t\t\tif (sInitialSelection) {\n\t\t\t\t\toDialog.setSelectedSortItem(sInitialSelection);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn oDialog.open();\n\t\t},\n\n\t\t// Handler for the filter criteria, which is set by the user\n\t\tonFilterDialogConfirm: function(oEvent) {\n\t\t\tvar params = oEvent.getParameters(),\n\t\t\t\tbPrice = false,\n\t\t\t\t/*\n\t\t\t\t<!--                                                                                -->\n\t\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\n\t\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\n\t\t\t\t<!-- begin                                                                          -->\n\t\t\t\t*/\n\t\t\t\tbAvgRating = false,\n\t\t\t\t/*\n\t\t\t\t<!-- end                                                                            -->\n\t\t\t\t*/\n\t\t\t\tbStockQuantity = false,\n\t\t\t\tsText = \"\",\n\t\t\t\taFilterItems = params.filterItems, // Array of type ViewSettingsItem\n\t\t\t\tiLength = aFilterItems.length;\n\t\t\t// Rebuilds filters every time. Makes it easier if the user has removed filter selections\n\t\t\tthis._oTableOperations.resetFilters();\n\n\t\t\t// Determines which filters the user selected according to the predefined price and stock filters\n\t\t\tfor (var i = 0; i < iLength; i++) {\n\t\t\t\t// Determines which price filters have been selected using the keys\n\t\t\t\tvar oSelectedFilterExpression = this._oPriceFilters[aFilterItems[i].getKey()];\n\t\t\t\tif (oSelectedFilterExpression) {\n\t\t\t\t\tthis._oTableOperations.addFilter(oSelectedFilterExpression, \"Price\");\n\t\t\t\t\tbPrice = true;\n\t\t\t\t} else {\n\t\t\t\t\t// Searches for stock filter based on the key specified\n\t\t\t\t\toSelectedFilterExpression = this._oStockFilters[aFilterItems[i].getKey()];\n\t\t\t\t\tif (oSelectedFilterExpression) {\n\t\t\t\t\t\tthis._oTableOperations.addFilter(oSelectedFilterExpression, \"StockQuantity\");\n\t\t\t\t\t\tbStockQuantity = true;\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t<!--                                                                                -->\n\t\t\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\n\t\t\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\n\t\t\t\t\t<!-- begin                                                                          -->\n\t\t\t\t\t*/\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Searches for avg rating filter based on the key specified\n\t\t\t\t\t\toSelectedFilterExpression = this._oAvgRatingFilters[aFilterItems[i].getKey()];\n\t\t\t\t\t\tif (oSelectedFilterExpression) {\n\t\t\t\t\t\t\tthis._oTableOperations.addFilter(oSelectedFilterExpression, \"AverageRating\");\n\t\t\t\t\t\t\tbAvgRating = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t<!-- end                                                                            -->\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Updates table operation settings and updates list binding accordingly\n\t\t\tthis._fnApplyTableOperations();\n\n\t\t\t// Shows/hides infoToolbar in the list\n\t\t\tvar oViewPropertiesModel = this._oParentView.getModel(\"viewProperties\"),\n\t\t\t\tbFilterToolbarVisible = !!this._oTableOperations.getFilterTable();\n\t\t\toViewPropertiesModel.setProperty(\"/filterToolbarVisible\", bFilterToolbarVisible);\n\t\t\tif (bFilterToolbarVisible) {\n\t\t\t\t/*\n\t\t\t\t<!--                                                                                -->\n\t\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\n\t\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\n\t\t\t\t<!-- begin (replaced existing if{...} contents)                                     -->\n\t\t\t\t*/\n\t\t\t\tif (bPrice && bStockQuantity && bAvgRating) {\n\t\t\t\t\tsText = \"Filtered by \" +  this._getPriceLabel() + \", \" + this._getText(\"xfld.availability\") + \" and Avg. Rat.\";\n\t\t\t\t} else if (bPrice && bStockQuantity) {\n\t\t\t\t\tsText = this._getText(\"xtit.filterBy2\", [this._getPriceLabel(), this._getText(\"xfld.availability\")]);\n\t\t\t\t} else if (bPrice && bAvgRating) {\n\t\t\t\t\tsText = this._getText(\"xtit.filterBy2\", [this._getPriceLabel(), this._getAverageRatingLabel()]);\n\t\t\t\t} else if (bAvgRating && bStockQuantity) {\n\t\t\t\t\tsText = this._getText(\"xtit.filterBy2\", [this._getAverageRatingLabel(), this._getText(\"xfld.availability\")]);\n\t\t\t\t} else {\n\t\t\t\t\t// Sets text if price filter is selected\n\t\t\t\t\tsText = bPrice ? this._getText(\"xtit.filterBy\", [this._getPriceLabel()]) : \"\";\n\t\t\t\t\t// Sets text if stock filter is selected\n\t\t\t\t\tsText = (!sText && bAvgRating) ? this._getText(\"xtit.filterBy\", [this._getAverageRatingLabel()]) : \"\";\n\t\t\t\t\t// Sets text if stock filter is selected\n\t\t\t\t\tsText = (!sText && bStockQuantity) ? this._getText(\"xtit.filterBy\", [this._getText(\"xfld.availability\")]) : sText;\n\t\t\t\t}\n\t\t\t\toViewPropertiesModel.setProperty(\"/filterInfoText\", sText);\n\t\t\t\t/*\n\t\t\t\t<!-- end                                                                            -->\n\t\t\t\t*/\n\t\t\t}\n\t\t},\n\n\t\t_getPriceLabel: function() {\n\t\t\treturn this._oParentView.getModel().getProperty(\"/#Product/Price/@sap:label\");\n\t\t},\n\n\t\t/*\n\t\t<!--                                                                                -->\n\t\t<!-- Extending S/4HANA with HCP                                                     -->\n\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\n\t\t<!-- begin                                                                          -->\n\t\t*/\n\t\t_getAverageRatingLabel: function() {\n\t\t\treturn this._oParentView.getModel().getProperty(\"/#Product/AverageRating/@sap:label\");\n\t\t},\n\n\t\t// Defines the avg. rating filter settings available\n\t\t_oAvgRatingFilters: {\n\t\t\t\"eq0\": new Filter(\"AverageRating\", sap.ui.model.FilterOperator.EQ, \"0\"),\n\t\t\t\"bt-1-2\": new Filter(\"AverageRating\", sap.ui.model.FilterOperator.BT, \"1\", \"2\"),\n\t\t\t\"bt-2-4\": new Filter(\"AverageRating\", sap.ui.model.FilterOperator.BT, \"2\", \"4\"),\n\t\t\t\"gt4\": new Filter(\"AverageRating\", sap.ui.model.FilterOperator.GE, \"4\")\n\t\t},\n\t\t/*\n\t\t<!-- end                                                                            -->\n\t\t*/\n\n\t\t// Defines the price filter settings available\n\t\t_oPriceFilters: {\n\t\t\t\"LE100\": new Filter(\"Price\", sap.ui.model.FilterOperator.LE, \"100\"),\n\t\t\t\"BT100-500\": new Filter(\"Price\", sap.ui.model.FilterOperator.BT, \"100\", \"500\"),\n\t\t\t\"BT500-1000\": new Filter(\"Price\", sap.ui.model.FilterOperator.BT, \"500\", \"1000\"),\n\t\t\t\"GT1000\": new Filter(\"Price\", sap.ui.model.FilterOperator.GE, \"1000\")\n\t\t},\n\n\t\t// Defines the stock availability filter settings available\n\t\t_oStockFilters: {\n\t\t\t\"outofstock\": new Filter(\"StockQuantity\", sap.ui.model.FilterOperator.EQ, \"0\"),\n\t\t\t\"restrictedstock\": new Filter(\"StockQuantity\", sap.ui.model.FilterOperator.BT, \"1\", \"9\"),\n\t\t\t\"instock\": new Filter(\"StockQuantity\", sap.ui.model.FilterOperator.GE, \"10\")\n\t\t},\n\n\t\t// Handler for the Confirm button on the sort dialog. Depending on the selections made on the sort\n\t\t// dialog, the respective sorters are created and stored in the _oTableOperations object.\n\t\t// The actual setting of the sorters on the binding is done in function setSorters\n\t\tonSortDialogConfirmed: function(oEvent) {\n\t\t\tvar mParams = oEvent.getParameters(),\n\t\t\t\tsSortPath = mParams.sortItem.getKey();\n\t\t\tthis._oTableOperations.addSorter(new Sorter(sSortPath, mParams.sortDescending));\n\t\t\tthis._fnApplyTableOperations();\n\t\t},\n\n\t\t// Handler for the grouping criteria, which are set by the user\n\t\tonGroupingDialogConfirmed: function(oEvent) {\n\t\t\tvar mParams = oEvent.getParameters(),\n\t\t\t\tsortPath;\n\t\t\tif (mParams.groupItem) {\n\t\t\t\tsortPath = mParams.groupItem.getKey();\n\t\t\t\tif (sortPath !== \"\") {\n\t\t\t\t\tthis._oTableOperations.setGrouping(new Sorter(sortPath, mParams.groupDescending,\n\t\t\t\t\t\tthis._oGroupFunctions[sortPath].bind(this)));\n\t\t\t\t} else {\n\t\t\t\t\tthis._oTableOperations.removeGrouping();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._fnApplyTableOperations();\n\t\t},\n\n\t\t_oGroupFunctions: {\n\n\t\t\t// Assumption is that all prices contain the currency code and that the currency conversion has to be done in\n\t\t\t// the backend system of the app\n\t\t\tPrice: function(oListItemContext) {\n\t\t\t\tvar sKey, iPrice = Number(oListItemContext.getProperty(\"Price\"));\n\t\t\t\tif (iPrice <= 100) {\n\t\t\t\t\tsKey = \"LE100\";\n\t\t\t\t} else if (iPrice <= 500) {\n\t\t\t\t\tsKey = \"BT100-500\";\n\t\t\t\t} else if (iPrice <= 1000) {\n\t\t\t\t\tsKey = \"BT500-1000\";\n\t\t\t\t} else if (iPrice > 1000) {\n\t\t\t\t\tsKey = \"GT1000\";\n\t\t\t\t} else {\n\t\t\t\t\tsKey = \"unknownPrice\";\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tkey: sKey,\n\t\t\t\t\ttext: this._oPriceGroups[sKey]\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n\t\t\t<!--                                                                                -->\n\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\n\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\n\t\t\t<!-- begin                                                                          -->\n\t\t\t*/\n\t\t\tAverageRating: function(oListItemContext) {\n\t\t\t\tvar sKey, iAvgRating = Number(oListItemContext.getProperty(\"AverageRating\"));\n\t\t\t\tif (iAvgRating === 0) {\n\t\t\t\t\tsKey = \"eq0\";\n\t\t\t\t} else if (iAvgRating < 2) {\n\t\t\t\t\tsKey = \"bt-1-2\";\n\t\t\t\t} else if (iAvgRating < 4) {\n\t\t\t\t\tsKey = \"bt-2-4\";\n\t\t\t\t} else if (iAvgRating <=5 ) {\n\t\t\t\t\tsKey = \"gt4\";\n\t\t\t\t} else {\n\t\t\t\t\tsKey = \"unknownRating\";\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tkey: sKey,\n\t\t\t\t\ttext: this._oAverageRatingGroups[sKey]\n\t\t\t\t};\n\t\t\t},\n\t\t\t/*\n\t\t\t//<!-- end                                                                            -->\n\t\t\t*/\n\n\t\t\tStockQuantity: function(oListItemContext) {\n\t\t\t\tvar iQuantity = Number(oListItemContext.getProperty(\"StockQuantity\")),\n\t\t\t\t\t// Sets the default key and text if iQuantity is negative or NaN.\n\t\t\t\t\tsKey = \"unknownStockQuantity\",\n\t\t\t\t\tsText = \"?\";\n\t\t\t\tif (iQuantity >= 0) {\n\t\t\t\t\tvar sLabel = fnGetSAPLabel(oListItemContext, \"StockQuantity\");\n\t\t\t\t\tif (iQuantity === 0) {\n\t\t\t\t\t\tsKey = \"LE0\";\n\t\t\t\t\t} else if (iQuantity >= 10) {\n\t\t\t\t\t\tsKey = \"GE10\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsKey = \"BT1-9\";\n\t\t\t\t\t}\n\t\t\t\t\tvar sI18NKey = iQuantity === 0 ? \"xfld.outstock\" : (iQuantity < 10 ? \"xfld.restricted10\" : \"xfld.instock\"),\n\t\t\t\t\t\tsValue = this._oResourceBundle.getText(sI18NKey);\n\t\t\t\t\tsText = this._oResourceBundle.getText(\"xfld.groupingLabel\", [sLabel, sValue]);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tkey: sKey,\n\t\t\t\t\ttext: sText\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tMainCategoryName: function(oListItemContext) {\n\t\t\t\treturn this._getCategoryName(oListItemContext, \"MainCategoryName\");\n\t\t\t},\n\n\t\t\tSubCategoryName: function(oListItemContext) {\n\t\t\t\treturn this._getCategoryName(oListItemContext, \"SubCategoryName\");\n\t\t\t}\n\t\t},\n\n\t\t// Reads the corresponding category name based on the list-item context\n\t\t_getCategoryName: function(oListItemContext, sCategoryType) {\n\t\t\tvar sKey = oListItemContext.getProperty(sCategoryType);\n\t\t\treturn {\n\t\t\t\tkey: sKey,\n\t\t\t\ttext: this._getText(\"xfld.groupingLabel\", [fnGetSAPLabel(oListItemContext, sCategoryType), sKey])\n\t\t\t};\n\t\t},\n\n\t\t// Shortcut to get i18n text\n\t\t_getText: function() {\n\t\t\treturn this._oResourceBundle.getText.apply(this._oResourceBundle, arguments);\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/ProductDraftUploadImages.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/core/mvc/Controller\",\"sap/m/UploadCollectionParameter\",\"nw/epm/refapps/ext/prod/manage/model/formatter\",\"nw/epm/refapps/ext/prod/manage/controller/messages\"],function(C,U,f,m){\"use strict\";function M(t){sap.ui.require([\"sap/m/MessageBox\",\"nw/epm/refapps/ext/prod/manage/controller/utilities\"],function(a,u){a.alert(t,{styleClass:u.getContentDensityClass()});});}return C.extend(\"nw.epm.refapps.ext.prod.manage.controller.ProductDraftUploadImages\",{formatter:f,onInit:function(){this._oControlUploadImage=this.byId(\"Upload_Images\");},onFileTypeMismatch:function(e){var o=e.getParameters().getParameter(\"fileType\");M(this._oResourceBundle.getText(\"ymsg.fileTypeMismatch\",o));},onUploadCompleted:function(e){var r=e.getParameters();if(r.getParameter(\"status\")===201){this._fnSetDraftDirty();}else{var E=r.getParameter(\"responseRaw\");m.showXMLErrorMessage(E,this.getView());}this._oControlUploadImage.getBinding(\"items\").refresh();},onImageDelete:function(e){var i=e.getParameters().documentId;var p=this.getView().getModel().createKey(\"/ImageDrafts\",{Id:i});this._oDataHelper.deleteImageDraft(p,function(){this._fnSetDraftDirty();this._oControlUploadImage.getBinding(\"items\").refresh();}.bind(this));},onChange:function(){var s=function(){var c=this.getView().getModel().getSecurityToken(),F=false,h=this._oControlUploadImage.getHeaderParameters();if(h){for(var i=0;i<h.length;i++){if(h[i].getName()===\"x-csrf-token\"){F=true;h[i].setValue(c);break;}}}if(!F){this._oControlUploadImage.addHeaderParameter(new U({name:\"x-csrf-token\",value:c}));}}.bind(this);this._whenSecurityToken(s);},setInitData:function(s){this._oDataHelper=s.oDataHelper;this._fnSetDraftDirty=s.fnDirty;this._oResourceBundle=s.oResourceBundle;},_whenSecurityToken:function(w){this.getView().getModel().refreshSecurityToken(w,function(){M(this._oResourceBundle.getText(\"ymsg.securityTokenNotRetrieved\"));}.bind(this));}});});",
		"nw/epm/refapps/ext/prod/manage/controller/TableOperations.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/base/Object\",\"sap/ui/model/Sorter\",\"sap/ui/model/Filter\",\"sap/ui/model/FilterType\",\"sap/ui/model/FilterOperator\"],function(O,S,F,a,b){\"use strict\";return O.extend(\"nw.epm.refapps.ext.prod.manage.util.TableOperations\",{constructor:function(t,s,d){var c=\"\",g=null,f=[],e=[],G=false,h=false,j=false,k=false,l=[(d)?d:new S(\"Name\",false)],o={};this._resetChangeIndicators=function(){G=false;h=false;j=false;k=false;};this.addSorter=function(m){var i=this._getSortListIndexByPath(m.sPath);if(i!==-1){l.splice(i,1);}l.unshift(m);if(g&&g.sPath===m.sPath){g.bDescending=m.bDescending;}k=true;};this.setGrouping=function(n){var i=this._getSortListIndexByPath(n.sPath);if(i!==-1){l[i].bDescending=n.bDescending;}g=n;G=true;};this._getSortListIndexByPath=function(p){var i;for(i=0;i<l.length;i++){if(l[i].sPath===p){return i;}}return-1;};this.removeGrouping=function(){g=null;G=true;};this.getGrouping=function(){return g;};this.getSorter=function(){return l;};this.resetFilters=function(){f.length=0;o={};j=true;};this.addFilter=function(i,m){if(o[m]){o[m].push(i);}else{o[m]=[i];}f.length=0;for(var p in o){if(o[p].length>1){f.push(new F(o[p],false));}else{f.push(o[p][0]);}}j=true;};this.getFilterTable=function(){return(f&&f.length>0)?f:null;};this.setSearchTerm=function(n){e.length=0;if(n){c=n;for(var i=0;i<s.length;i++){e.push(new F(s[i],b.Contains,n));}}else{c=\"\";e.length=0;}h=true;};this.getSearchTerm=function(){return c;};this.applyTableOperations=function(){var A=[],i=[],T=t.getBinding(\"items\");if(T){if(G||k){if(g){A.push(g);}if(l.length>0){A=A.concat(l);}T.sort(A);}if(h||j){if(e.length>0){i.push(new F(e,false));}if(f.length>0){i.push(new F(f,true));}T.filter(i.length>0&&new F(i,true));}this._resetChangeIndicators();}};}});});",
		"nw/epm/refapps/ext/prod/manage/controller/EmptyPage-dbg.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function(Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"nw.epm.refapps.ext.prod.manage.controller.EmptyPage\", {\n\t\t// Handler for the nav button of the page. It is attached declaratively. Note that it is only available on phone.\n\t\tonNavButtonPress: function() {\n\t\t\tvar oApplicationProperties = this.getView().getModel(\"appProperties\");\n\t\t\tvar oApplicationController = oApplicationProperties.getProperty(\"/applicationController\");\n\t\t\toApplicationController.navBack(true);\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/S2_ProductMaster.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/core/mvc/Controller\",\"sap/ui/model/json/JSONModel\",\"sap/ui/Device\",\"sap/m/GroupHeaderListItem\",\"sap/m/ListMode\",\"./TableOperations\",\"./SubControllerForFGS\",\"nw/epm/refapps/ext/prod/manage/model/formatter\"],function(C,J,D,G,L,T,S,f){\"use strict\";return C.extend(\"nw.epm.refapps.ext.prod.manage.controller.S2_ProductMaster\",{formatter:f,onInit:function(){this._iMarkedCount=0;this._sCurrentSearchTerm=\"\";this._oView=this.getView();this._oList=this.byId(\"list\");this._oSearchField=this.byId(\"SearchField\");var c=this.getOwnerComponent();this._oApplicationProperties=c.getModel(\"appProperties\");this._oApplicationController=this._oApplicationProperties.getProperty(\"/applicationController\");this._oApplicationController.registerMaster(this);this._oResourceBundle=c.getModel(\"i18n\").getResourceBundle();this._oHelper=this._oApplicationController.getODataHelper();this._oTableOperations=new T(this._oList,[\"Name\",\"Id\",\"Description\"]);this._initViewPropertiesModel();this._oSubControllerForFGS=new S(this._oView,this._oTableOperations,this.applyTableOperations.bind(this),this._oResourceBundle);},_initViewPropertiesModel:function(){this._oViewProperties=new J({title:this._oResourceBundle.getText(\"xtit.masterTitleWithoutNumber\"),markExists:false,filterToolbarVisible:false,filterInfoText:\"\"});this._oView.setModel(this._oViewProperties,\"viewProperties\");},applyTableOperations:function(){this._oTableOperations.applyTableOperations();if(!D.system.phone){this._fnAdaptListAfterUpdate=function(){var p=this._oApplicationProperties.getProperty(\"/productId\"),l=this._getListItemForId(p);this._scrollToListItem(l);}.bind(this);}},createGroupHeader:function(g){return new G({title:g.text,upperCase:false});},onUpdateStarted:function(){this._oSearchField.setValue(this._sCurrentSearchTerm);this._oApplicationProperties.setProperty(\"/isListLoading\",true);},onUpdateFinished:function(){if(this._oApplicationProperties.getProperty(\"/metaDataLoadState\")<1){return;}this._oApplicationProperties.setProperty(\"/isListLoading\",false);this._oApplicationProperties.setProperty(\"/masterBusyIndicatorDelay\",null);var c=this._getListBinding().getLength(),t=this._oResourceBundle.getText(\"xtit.masterTitleWithNumber\",[c]);this._oViewProperties.setProperty(\"/title\",t);if(c===0){var n=((this._oTableOperations.getSearchTerm()||this._oTableOperations.getFilterTable())?\"ymsg.noDataAfterSerach\":\"ymsg.noProducts\");this._oApplicationProperties.setProperty(\"/listNoDataText\",this._oResourceBundle.getText(n));}if(this._isListInMultiSelectMode()){this._iMarkedCount=this._oList.getSelectedContexts(true).length;this._oViewProperties.setProperty(\"/markExists\",this._iMarkedCount>0);}this.findItem();if(this._fnAdaptListAfterUpdate){this._fnAdaptListAfterUpdate();this._fnAdaptListAfterUpdate=null;}},listRefresh:function(){this._getListBinding().refresh();},adaptToDetailSelection:function(s){if(this._oApplicationProperties.getProperty(\"/isListLoading\")||this._oApplicationProperties.getProperty(\"/metaDataLoadState\")<1){this._fnAdaptListAfterUpdate=this._selectCurrentItem.bind(this,s);}else{this._selectCurrentItem(s);}},_selectCurrentItem:function(s){if(D.system.phone||this._isListInMultiSelectMode()){return;}var p=this._oApplicationProperties.getProperty(\"/productId\"),i=p&&this._getListItemForId(p);if(i===this._oList.getSelectedItem()){return;}this._setItemSelected(i);if(s&&i){this._scrollToListItem(i);}},findItem:function(){if(D.system.phone||this._oApplicationProperties.getProperty(\"/productId\")){return;}var I=this._oList.getItems();if(I.length>0){var o=null,p=this._oApplicationProperties.getProperty(\"/preferredIds\");for(var i=0;!o&&i<p.length;i++){o=this._getListItemForId(p[i]);}o=o||this._getFirstRealItem();this._navToListItem(o);}else{this._oApplicationController.navToEmptyPage(this._oApplicationProperties.getProperty(\"/listNoDataText\"),true);}this._oApplicationProperties.setProperty(\"/preferredIds\",[]);},prepareForDelete:function(c){var p=[];if(c){var F=false,l=this._oList.getItems(),t=[];for(var i=0;i<l.length;i++){var I=l[i];if(!(I instanceof G)){var o=I.getBindingContext(),s=o.getProperty(\"Id\");F=F||s===c;(F?p:t).push(s);}}if(F){t.reverse();p=p.concat(t);}}this._oApplicationProperties.setProperty(\"/preferredIds\",p);},_getListBinding:function(){return this._oList.getBinding(\"items\");},onSearch:function(e){var s=e.getSource(),c=s.getValue(),n=e.getParameter(\"refreshButtonPressed\")?this._sCurrentSearchTerm:c;this._explicitRefresh(n);},_explicitRefresh:function(n,N){var m=function(){if(n===this._sCurrentSearchTerm){this.listRefresh();}else{this._sCurrentSearchTerm=n;this._oTableOperations.setSearchTerm(n);this.applyTableOperations();}}.bind(this);this._oApplicationController.whenMetadataLoaded(m,N);},onPullToRefresh:function(e){var p=e.getSource(),h=function(){p.hide();};this._oList.attachEventOnce(\"updateFinished\",h);this._explicitRefresh(this._sCurrentSearchTerm,h);},onSortPressed:function(){this._oSubControllerForFGS.openDialog(\"ProductSortDialog\",\"Name\");},onFilterPressed:function(){this._oSubControllerForFGS.openDialog(\"ProductFilterDialog\");},onGroupPressed:function(){this._oSubControllerForFGS.openDialog(\"ProductGroupingDialog\");},onAddPressed:function(){var p=function(P){this._oApplicationProperties.setProperty(\"/isDirty\",false);this._oApplicationController.navToProductEditPage(P.Id);this._removeAllSelections();this._oApplicationController.hideMasterInPortrait();}.bind(this);this._oHelper.createProductDraft(p);},onDeletePressed:function(){var c=this._oList.getSelectedContexts(true),p=[];jQuery.each(c,function(i,o){p.push(o.getPath());});var a=function(){this._removeAllSelections();}.bind(this);this._oHelper.deleteProducts(p,a);},onMultiSelectPressed:function(){var w=this._isListInMultiSelectMode();this._setMultiSelect(!w);},_setMultiSelect:function(m){if(m===this._isListInMultiSelectMode()){return;}this._oApplicationProperties.setProperty(\"/isMultiSelect\",m);this._removeAllSelections();if(!m&&!D.system.phone){var s=this._getListItemForId(this._oApplicationProperties.getProperty(\"/productId\"));this._setItemSelected(s);}},_isListInMultiSelectMode:function(){return this._oList.getMode()===L.MultiSelect;},_removeAllSelections:function(){this._oList.removeSelections(true);this._iMarkedCount=0;this._oViewProperties.setProperty(\"/markExists\",false);},onNavButtonPress:function(){this._oApplicationController.navBack(false);},onSwipe:function(e){if(this._isListInMultiSelectMode()||this._isInEditMode()){e.preventDefault();}},onSwipeDeleteItem:function(){var b=this._oList.getSwipedItem().getBindingContext();this._oHelper.deleteProduct(b.getPath(),null,true);this._oList.swipeOut();},onItemSelect:function(e){var l=this._oList.getMode()===L.None?e.getSource():e.getParameter(\"listItem\");var m=this._isListInMultiSelectMode();if(m){if(e.getParameter(\"selected\")){this._iMarkedCount++;if(!D.system.phone){this._navToListItem(l);}}else{this._iMarkedCount--;}this._oViewProperties.setProperty(\"/markExists\",this._iMarkedCount>0);}else{if(this._isInEditMode()){var a=function(){this._setItemSelected(this._getListItemForId(this._oApplicationProperties.getProperty(\"/productId\")));};this._leaveEditPage(this._navToListItem.bind(this,l),a.bind(this));}else{this._navToListItem(l);}this._oApplicationController.hideMasterInPortrait();}},_navToListItem:function(l){var c=l.getBindingContext(),p=c.getProperty(\"Id\");this._oApplicationController.showProductDetailPage(p);},_setItemSelected:function(i){if(i){this._oList.setSelectedItem(i);}else{this._removeAllSelections();}},_getListItemForId:function(I){if(!I||I===\"-\"){return null;}var a=this._oList.getItems();for(var i=0;i<a.length;i++){var o=a[i];if(!(o instanceof G)){var c=o.getBindingContext();if(c&&c.getProperty(\"Id\")===I){return o;}}}},_scrollToListItem:function(l){if(!l||l===this._getFirstRealItem()){var p=this.byId(\"masterPage\");p.scrollTo(0);}else{var d=l.getDomRef();if(d){d.scrollIntoView();}}},_isInEditMode:function(){return!this._oApplicationProperties.getProperty(\"/noEditMode\");},_leaveEditPage:function(l,a){var p=this._oHelper.getPathForDraftId(this._oApplicationProperties.getProperty(\"/productId\"));this._oHelper.deleteProductDraft(p,l,a);},_getFirstRealItem:function(){var I=this._oList.getItems();for(var i=0;i<I.length;i++){if(!(I[i]instanceof G)){return I[i];}}}});});",
		"nw/epm/refapps/ext/prod/manage/controller/SubControllerForShare-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\n// Creates a sub-controller to be used by the detail controller to handle the share dialog\nsap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"./utilities\",\n\t\"nw/epm/refapps/ext/prod/manage/model/formatter\"\n], function(Object, utilities, formatter) {\n\t\"use strict\";\n\n\treturn Object.extend(\"nw.epm.refapps.ext.prod.manage.controller.SubControllerForShare\", {\n\t\tformatter: formatter,\n\t\t//_oShareDialog:\n\t\t//_oParentView:\n\t\t//_oResourceBundle:\n\t\t//_oProduct:\n\n\t\tconstructor: function(oParentView, oResourceBundle) {\n\t\t\tthis._oParentView = oParentView;\n\t\t\tthis._oResourceBundle = oResourceBundle;\n\t\t},\n\n\t\t// Opens the share dialog\n\t\topenDialog: function(oEvent) {\n\t\t\tvar oShareButton = oEvent.getSource();\n\t\t\tthis._oProduct = this._oParentView.getBindingContext().getObject();\n\t\t\tif (!this._oShareDialog) {\n\t\t\t\tthis._oShareDialog = sap.ui.xmlfragment(this._oParentView.getId(), \"nw.epm.refapps.ext.prod.manage.view.ShareSheet\", this);\n\t\t\t\t// Switch the dialog to compact mode if the hosting view has compact mode\n\t\t\t\tutilities.attachControlToView(this._oParentView, this._oShareDialog);\n\t\t\t}\n\t\t\tthis._oShareDialog.openBy(oShareButton);\n\t\t},\n\n\t\tonEmailPressed: function() {\n\t\t\tthis._triggerEmail();\n\t\t},\n\n\t\t_triggerEmail: function() {\n\t\t\tsap.m.URLHelper.triggerEmail(null, this._getEmailSubject(), this._getEmailContent());\n\t\t},\n\n\t\t_getEmailSubject: function() {\n\t\t\treturn this._oResourceBundle.getText(\"xtit.emailSubject\", [this._oProduct.Name]);\n\t\t},\n\n\t\t_getEmailContent: function() {\n\t\t\treturn this._oResourceBundle.getText(\"xtit.emailContent\", [this._oProduct.Id, this._oProduct.Description,\n\t\t\t\tthis._oProduct.SupplierName\n\t\t\t]);\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/App-dbg.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\n// Controller for the view hosting the (Split-)App.\nsap.ui.define([\"./utilities\"], function(utilities) {\n\t\"use strict\";\n\n\treturn sap.ui.controller(\"nw.epm.refapps.ext.prod.manage.controller.App\", {\n\t\tonInit: function() {\n\t\t\tthis.getView().addStyleClass(utilities.getContentDensityClass());\n\t\t\tthis._oAppControl = this.byId(\"fioriContent\");\n\t\t},\n\n\t\thideMaster: function() {\n\t\t\tthis._oAppControl.hideMaster();\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/S2_ProductMaster-dbg.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\",\n\t\"sap/m/GroupHeaderListItem\",\n\t\"sap/m/ListMode\",\n\t\"./TableOperations\",\n\t\"./SubControllerForFGS\",\n\t\"nw/epm/refapps/ext/prod/manage/model/formatter\"\n], function(Controller, JSONModel, Device, GroupHeaderListItem, ListMode, TableOperations, SubControllerForFGS, formatter) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"nw.epm.refapps.ext.prod.manage.controller.S2_ProductMaster\", {\n\t\tformatter: formatter,\n\n\t\t// --- Helper attributes that are initialized during onInit and never changed afterwards\n\n\t\t// _oViewProperties: json model used to manipulate declarative attributes of the controls used in this view. Initialized in _initViewPropertiesModel.\n\t\t// contains the following attributes:\n\t\t// - title                - the current title of the master list\n\t\t// - markExists           - in multi-select mode: info whether at least one entry is marked\n\t\t// - filterToolbarVisible - flag whether the filter toolbar is visible on top of the master list\n\t\t// - filterInfoText       - text of the filter toolbar\n\t\t// _oView: this view\n\t\t// _oList: the master list\n\t\t// _oItemTemplate: template of one list item. Used for modifying the list binding.\n\t\t// _oSearchField: the search field\n\t\t// _oApplicationController: the controller of the App\n\t\t// _oApplicationProperties: json model containing the App state\n\t\t// _oResourceBundle: the resource bundle to retrieve texts from\n\t\t// _oHelper: singleton instance of nw.epm.refapps.ext.prod.manage.model.Products used to call backend services\n\t\t// _oTableOperations: instance of nw.epm.refapps.ext.prod.manage.controller.TableOperations used for backend handling of list operations\n\t\t// _oSubControllerForFGS: instance of nw.epm.refapps.ext.prod.manage.controller.SubControllerForFGS used for frontend handling of list operations\n\n\t\t// --- Attributes describing the current state of the master list. They are changed while the App is running.\n\n\t\t// _iMarkedCount:number of items selected in multi-selection mode.\n\t\t// _sCurrentSearchTerm: the search term that is currently used to filter the result list\n\t\t// _fnAdaptListAfterUpdate: An optional function that will be executed when a list update finishes the next time\n\n\t\t// --- Initialization\n\n\t\tonInit: function() {\n\t\t\tthis._iMarkedCount = 0;\n\t\t\tthis._sCurrentSearchTerm = \"\";\n\t\t\tthis._oView = this.getView();\n\t\t\tthis._oList = this.byId(\"list\");\n\t\t\tthis._oSearchField = this.byId(\"SearchField\");\n\t\t\tvar oComponent = this.getOwnerComponent();\n\t\t\tthis._oApplicationProperties = oComponent.getModel(\"appProperties\");\n\t\t\tthis._oApplicationController = this._oApplicationProperties.getProperty(\"/applicationController\");\n\t\t\tthis._oApplicationController.registerMaster(this);\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oHelper = this._oApplicationController.getODataHelper();\n\t\t\tthis._oTableOperations = new TableOperations(this._oList, [\"Name\", \"Id\", \"Description\"]);\n\t\t\tthis._initViewPropertiesModel();\n\t\t\t// Initializes the sub-controller for handling filter, grouping, and sorting dialogs\n\t\t\tthis._oSubControllerForFGS = new SubControllerForFGS(this._oView,\n\t\t\t\tthis._oTableOperations, this.applyTableOperations.bind(this), this._oResourceBundle);\n\t\t},\n\n\t\t_initViewPropertiesModel: function() {\n\t\t\t// The model created here is used to set values or view element properties that cannot be bound\n\t\t\t// directly to the OData service. Setting view element attributes by binding them to a model is preferable to the\n\t\t\t// alternative of getting each view element by its ID and setting the values directly because a JSon model is more\n\t\t\t// robust if the customer removes view elements (see extensibility).\n\t\t\tthis._oViewProperties = new JSONModel({\n\t\t\t\ttitle: this._oResourceBundle.getText(\"xtit.masterTitleWithoutNumber\"),\n\t\t\t\tmarkExists: false,\n\t\t\t\tfilterToolbarVisible: false,\n\t\t\t\tfilterInfoText: \"\"\n\t\t\t});\n\t\t\tthis._oView.setModel(this._oViewProperties, \"viewProperties\");\n\t\t},\n\n\t\t// --- Methods dealing with refresh of the list\n\n\t\tapplyTableOperations: function() {\n\t\t\t// This method is called when a new backend search has to be triggered, due to changed 'search settings'.\n\t\t\t// More precisely the method is called:\n\t\t\t// - when the user presses Sort, Filter, or Group button (therefore, it is passed as callback to SubControllerForFGS)\n\t\t\t// - when the user triggers a search after having changed the entry in the search field\n\t\t\t// The method uses attribute _oTableOperations to perform the data retrieval\n\t\t\tthis._oTableOperations.applyTableOperations();\n\t\t\tif (!Device.system.phone) {\n\t\t\t\tthis._fnAdaptListAfterUpdate = function() {\n\t\t\t\t\tvar sProductId = this._oApplicationProperties.getProperty(\"/productId\"),\n\t\t\t\t\t\toListItem = this._getListItemForId(sProductId);\n\t\t\t\t\tthis._scrollToListItem(oListItem);\n\t\t\t\t}.bind(this);\n\t\t\t}\n\t\t},\n\n\t\tcreateGroupHeader: function(oGroup) {\n\t\t\t// Group header factory. Attached to the list declaratively.\n\t\t\treturn new GroupHeaderListItem({\n\t\t\t\ttitle: oGroup.text,\n\t\t\t\tupperCase: false\n\t\t\t});\n\t\t},\n\n\t\tonUpdateStarted: function() {\n\t\t\t// Event handler called when updater of the the master list starts. It is attached declaratively.\n\t\t\t// Resets the displayed content of the search field to the search term that is actually used.\n\t\t\t// There may be a difference, as the user might have changed the content but not triggered the search.\n\t\t\tthis._oSearchField.setValue(this._sCurrentSearchTerm);\n\t\t\tthis._oApplicationProperties.setProperty(\"/isListLoading\", true);\n\t\t},\n\n\t\tonUpdateFinished: function() {\n\t\t\t// Event handler called after the the master list has been updated. It is attached declaratively.\n\t\t\tif (this._oApplicationProperties.getProperty(\"/metaDataLoadState\") < 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._oApplicationProperties.setProperty(\"/isListLoading\", false);\n\t\t\tthis._oApplicationProperties.setProperty(\"/masterBusyIndicatorDelay\", null);\n\t\t\tvar iCount = this._getListBinding().getLength(),\n\t\t\t\tsTitle = this._oResourceBundle.getText(\"xtit.masterTitleWithNumber\", [iCount]);\n\t\t\tthis._oViewProperties.setProperty(\"/title\", sTitle);\n\t\t\tif (iCount === 0) {\n\t\t\t\tvar sNoDataId = ((this._oTableOperations.getSearchTerm() || this._oTableOperations.getFilterTable()) ? \"ymsg.noDataAfterSerach\" :\n\t\t\t\t\t\"ymsg.noProducts\");\n\t\t\t\tthis._oApplicationProperties.setProperty(\"/listNoDataText\", this._oResourceBundle.getText(sNoDataId));\n\t\t\t}\n\t\t\tif (this._isListInMultiSelectMode()) {\n\t\t\t\tthis._iMarkedCount = this._oList.getSelectedContexts(true).length;\n\t\t\t\tthis._oViewProperties.setProperty(\"/markExists\", this._iMarkedCount > 0);\n\t\t\t}\n\t\t\t// If not on the phone, make sure that a PO is selected (if possible)\n\t\t\tthis.findItem();\n\t\t\tif (this._fnAdaptListAfterUpdate) {\n\t\t\t\tthis._fnAdaptListAfterUpdate();\n\t\t\t\tthis._fnAdaptListAfterUpdate = null;\n\t\t\t}\n\t\t},\n\n\t\tlistRefresh: function() {\n\t\t\tthis._getListBinding().refresh();\n\t\t},\n\n\t\tadaptToDetailSelection: function(bScrollTo) {\n\t\t\t// adapt the state of the master list to the object displayed in the detail area\n\t\t\t// This contains two aspects:\n\t\t\t// - set the corresponding list item as selected\n\t\t\t// - scroll to the corresponding list item (only if bScrollTo is true)\n\t\t\tif (this._oApplicationProperties.getProperty(\"/isListLoading\") || this._oApplicationProperties.getProperty(\"/metaDataLoadState\") < 1) {\n\t\t\t\t// Postpone until the list has been loaded\n\t\t\t\tthis._fnAdaptListAfterUpdate = this._selectCurrentItem.bind(this, bScrollTo);\n\t\t\t} else {\n\t\t\t\tthis._selectCurrentItem(bScrollTo);\n\t\t\t}\n\t\t},\n\n\t\t_selectCurrentItem: function(bScrollTo) {\n\t\t\t// this method has the same specification as adaptToDetailSelection. However, it must not be called\n\t\t\t// while the list is still loading.\n\t\t\tif (Device.system.phone || this._isListInMultiSelectMode()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar sProductId = this._oApplicationProperties.getProperty(\"/productId\"),\n\t\t\t\toItemToSelect = sProductId && this._getListItemForId(sProductId);\n\t\t\tif (oItemToSelect === this._oList.getSelectedItem()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._setItemSelected(oItemToSelect);\n\t\t\tif (bScrollTo && oItemToSelect) {\n\t\t\t\tthis._scrollToListItem(oItemToSelect);\n\t\t\t}\n\t\t},\n\n\t\tfindItem: function() {\n\t\t\t// This method has four tasks:\n\t\t\t// - Check whether it is necessary to identify a new list item to be displayed in the detail area (if not return immediately)\n\t\t\t// - Determine the required list item\n\t\t\t// - Execute the navigation that displays the identified list item (or execute the navigation to the EmptyPage if no list item could be identified)\n\t\t\t// - Reset state\t\t    \n\t\t\tif (Device.system.phone || this._oApplicationProperties.getProperty(\"/productId\")) { // Task 1\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Task 2\n\t\t\tvar aItems = this._oList.getItems();\n\t\t\tif (aItems.length > 0) {\n\t\t\t\tvar oItemToSelect = null,\n\t\t\t\t\taPreferredIds = this._oApplicationProperties.getProperty(\"/preferredIds\");\n\t\t\t\tfor (var i = 0; !oItemToSelect && i < aPreferredIds.length; i++) {\n\t\t\t\t\toItemToSelect = this._getListItemForId(aPreferredIds[i]);\n\t\t\t\t}\n\t\t\t\toItemToSelect = oItemToSelect || this._getFirstRealItem();\n\t\t\t\tthis._navToListItem(oItemToSelect); // Task 3\n\t\t\t} else {\n\t\t\t\tthis._oApplicationController.navToEmptyPage(this._oApplicationProperties.getProperty(\"/listNoDataText\"), true); // Task 3\n\t\t\t}\n\t\t\tthis._oApplicationProperties.setProperty(\"/preferredIds\", []); // Task 4\n\t\t},\n\n\t\tprepareForDelete: function(sCurrentId) {\n\t\t\t// This method is called before a delete operation is called. \n\t\t\t// The task of this method is to set the preferredIds in the global application model.\n\t\t\t// This array will be checked afterwards to determine the item in the list which will be selected.\n\t\t\t// More precisely the first product in this array which occurs in the list after the deletion process will be selected.\n\t\t\t// sCurrentId can be faulty (which would mean that currently no item is selected in the detail area -> preferred ids is set to the empty array).\n\t\t\t// Otherwise sCurrentId is the id of the product currently displayed in the detail area, and sCurrentId is one of the\n\t\t\t// objects to be deleted.\n\t\t\t// The preferredIds are set to the ids of the products currently displayed in the list, sorted according the following order:\n\t\t\t// If the current list contains an item corresponding to sCurrentId, sCurrentId will be the first one in the list.\n\t\t\t// It will be followed by the ids of the list items behind this item in the normal order. After that we add the ids\n\t\t\t// of the list items in front of the identified one, but in reverse order.\n\t\t\t// Otherwise the preferred ids are the ids of current list in their normal order.\n\t\t\t// So when the current order is a, b, c, d, e and sCurrentId is c, then the preferred ids will be c, d, e, b, a.\n\t\t\t// Note that according to the precondition c itself identifies one of the objects to be deleted. Therefore, the first entry\n\t\t\t// in the list will only be used later, when the deletion of this particular object fails for some reason.\n\t\t\tvar aPreferredIds = [];\n\t\t\tif (sCurrentId) {\n\t\t\t\tvar bFound = false,\n\t\t\t\t\taListItems = this._oList.getItems(),\n\t\t\t\t\taTail = [];\n\t\t\t\tfor (var i = 0; i < aListItems.length; i++) {\n\t\t\t\t\tvar oItem = aListItems[i];\n\t\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\n\t\t\t\t\t\tvar oCtx = oItem.getBindingContext(),\n\t\t\t\t\t\t\tsId = oCtx.getProperty(\"Id\");\n\t\t\t\t\t\tbFound = bFound || sId === sCurrentId;\n\t\t\t\t\t\t(bFound ? aPreferredIds : aTail).push(sId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (bFound) {\n\t\t\t\t\taTail.reverse();\n\t\t\t\t\taPreferredIds = aPreferredIds.concat(aTail);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._oApplicationProperties.setProperty(\"/preferredIds\", aPreferredIds);\n\t\t},\n\n\t\t_getListBinding: function() {\n\t\t\treturn this._oList.getBinding(\"items\");\n\t\t},\n\n\t\t// --- Methods dealing with new data retrieval triggered by the user. All event handlers are attached declaratively.\n\n\t\tonSearch: function(oEvent) {\n\t\t\t// Event handler for the search field in the master list.\n\t\t\t// Note that this handler listens to the search button and to the refresh button in the search field\n\t\t\tvar oSearchField = oEvent.getSource(),\n\t\t\t\tsCurrentSearchFieldContent = oSearchField.getValue(),\n\t\t\t\t// If the user has pressed 'Refresh' the last search should be repeated\n\t\t\t\tsNewSearchContent = oEvent.getParameter(\"refreshButtonPressed\") ? this._sCurrentSearchTerm : sCurrentSearchFieldContent;\n\t\t\tthis._explicitRefresh(sNewSearchContent);\n\t\t},\n\n\t\t_explicitRefresh: function(sNewSearchContent, fnNoMetadata) {\n\t\t\t// This method is called when the user refreshes the list either via the search field or via the pull-to-refresh element\n\t\t\t// sNewSearchContent is the content of the search field to be applied.\n\t\t\t// Note: In case metadata could not be loaded yet or lost draft information could not be determined yet, it is first triggered\n\t\t\t// to retry this. If loading of the metadata fails (optional) fnNoMetadata will be executed.\n\t\t\tvar fnMetadataLoaded = function() {\n\t\t\t\tif (sNewSearchContent === this._sCurrentSearchTerm) {\n\t\t\t\t\tthis.listRefresh();\n\t\t\t\t} else {\n\t\t\t\t\tthis._sCurrentSearchTerm = sNewSearchContent;\n\t\t\t\t\tthis._oTableOperations.setSearchTerm(sNewSearchContent);\n\t\t\t\t\tthis.applyTableOperations();\n\t\t\t\t}\n\t\t\t}.bind(this);\n\t\t\tthis._oApplicationController.whenMetadataLoaded(fnMetadataLoaded, fnNoMetadata);\n\t\t},\n\n\t\tonPullToRefresh: function(oEvent) {\n\t\t\t// Event handler for the pullToRefresh-element of the list.\n\t\t\tvar oPullToRefresh = oEvent.getSource(),\n\t\t\t\tfnHidePullToRefresh = function() { // hide the pull to refresh when list has been refreshed or meta data call fails once more\n\t\t\t\t\t// Note: Do not use oEvent here, because UI5 might have reinitialized this instance already (instance pooling for performance reasons)\n\t\t\t\t\toPullToRefresh.hide();\n\t\t\t\t};\n\t\t\t// Hide the pull to refresh when data has been loaded\n\t\t\tthis._oList.attachEventOnce(\"updateFinished\", fnHidePullToRefresh);\n\t\t\t// Refresh list from backend\n\t\t\tthis._explicitRefresh(this._sCurrentSearchTerm, fnHidePullToRefresh);\n\t\t},\n\n\t\t// - Event handlers for the Sort, Filter, and Group buttons. They delegate to attribute _oSubControllerForFGS.\n\n\t\tonSortPressed: function() {\n\t\t\tthis._oSubControllerForFGS.openDialog(\"ProductSortDialog\", \"Name\");\n\t\t},\n\n\t\tonFilterPressed: function() {\n\t\t\tthis._oSubControllerForFGS.openDialog(\"ProductFilterDialog\");\n\t\t},\n\n\t\tonGroupPressed: function() {\n\t\t\tthis._oSubControllerForFGS.openDialog(\"ProductGroupingDialog\");\n\t\t},\n\n\t\t// --- Event handlers for additional buttons in the footer of the master area. They are attached declaratively.\n\n\t\tonAddPressed: function() {\n\t\t\tvar fnProductDraftCreated = function(oProductDraftData) {\n\t\t\t\tthis._oApplicationProperties.setProperty(\"/isDirty\", false);\n\t\t\t\tthis._oApplicationController.navToProductEditPage(oProductDraftData.Id);\n\t\t\t\tthis._removeAllSelections();\n\t\t\t\tthis._oApplicationController.hideMasterInPortrait();\n\t\t\t}.bind(this);\n\t\t\tthis._oHelper.createProductDraft(fnProductDraftCreated);\n\t\t},\n\n\t\tonDeletePressed: function() {\n\t\t\tvar aContexts = this._oList.getSelectedContexts(true),\n\t\t\t\taProductsToBeDeleted = [];\n\t\t\tjQuery.each(aContexts, function(iIndex, oContext) {\n\t\t\t\taProductsToBeDeleted.push(oContext.getPath());\n\t\t\t});\n\t\t\tvar fnAfterDeleted = function() {\n\t\t\t\tthis._removeAllSelections();\n\t\t\t}.bind(this);\n\t\t\tthis._oHelper.deleteProducts(aProductsToBeDeleted, fnAfterDeleted);\n\t\t},\n\n\t\t// --- Methods dealing with multi-select\n\n\t\tonMultiSelectPressed: function() {\n\t\t\t// Event handler for the multi-selection button in the page header. It is attached declaratively.\n\t\t\tvar bWasMultiSelect = this._isListInMultiSelectMode();\n\t\t\tthis._setMultiSelect(!bWasMultiSelect);\n\t\t},\n\n\t\t_setMultiSelect: function(bMultiSelect) {\n\t\t\t// set the master list to multi-select or single select as specified by bMultiSelect\n\t\t\tif (bMultiSelect === this._isListInMultiSelectMode()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._oApplicationProperties.setProperty(\"/isMultiSelect\", bMultiSelect);\n\t\t\tthis._removeAllSelections();\n\t\t\tif (!bMultiSelect && !Device.system.phone) {\n\t\t\t\tvar oSelectedItem = this._getListItemForId(this._oApplicationProperties.getProperty(\"/productId\"));\n\t\t\t\tthis._setItemSelected(oSelectedItem);\n\t\t\t}\n\t\t},\n\n\t\t_isListInMultiSelectMode: function() {\n\t\t\t// helper method to check if the current list is currently in the MultiSelect mode\n\t\t\treturn this._oList.getMode() === ListMode.MultiSelect;\n\t\t},\n\n\t\t_removeAllSelections: function() {\n\t\t\t// set all items as unselected\n\t\t\tthis._oList.removeSelections(true);\n\t\t\tthis._iMarkedCount = 0;\n\t\t\tthis._oViewProperties.setProperty(\"/markExists\", false);\n\t\t},\n\n\t\t// --- Event handlers for additional UI elements. All of them are attached declaratively.\n\n\t\tonNavButtonPress: function() {\n\t\t\t// Handler for the nav button of the page.\n\t\t\tthis._oApplicationController.navBack(false);\n\t\t},\n\n\t\tonSwipe: function(oEvent) {\n\t\t\t// Event handler for swipe in the list.\n\t\t\t// Its purpose is to deactivate swipe in case of multi select and in edit mode.\n\t\t\tif (this._isListInMultiSelectMode() || this._isInEditMode()) {\n\t\t\t\toEvent.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\tonSwipeDeleteItem: function() {\n\t\t\t// user has confirmed the deletion via swipe\n\t\t\tvar oBindingContext = this._oList.getSwipedItem().getBindingContext();\n\t\t\tthis._oHelper.deleteProduct(oBindingContext.getPath(), null, true);\n\t\t\tthis._oList.swipeOut();\n\t\t},\n\n\t\tonItemSelect: function(oEvent) {\n\t\t\t// Event handler for the case that the user selects one item in the master list.\n\t\t\t// Note: This method is referred twice in the declarative definition of this view.\n\t\t\t// The first reference is event 'selectionChange' of the master list; the second one is 'press' on the list item.\n\t\t\t// The second reference is needed in case the list mode is 'None' (which is true on phone).\n\t\t\t// Determine the list item that was selected. Note that the techique to retrieve this from the event depends\n\t\t\t// on the list mode (in other words, the event we are currently listening to).\n\t\t\tvar oListItem = this._oList.getMode() === ListMode.None ? oEvent.getSource() : oEvent.getParameter(\"listItem\");\n\n\t\t\tvar bMultiSelect = this._isListInMultiSelectMode();\n\t\t\tif (bMultiSelect) { // in multi-select mode select mode selecting the list item inverts the current selection state\n\t\t\t\tif (oEvent.getParameter(\"selected\")) { // the item turns into selected\n\t\t\t\t\tthis._iMarkedCount++;\n\t\t\t\t\tif (!Device.system.phone) { // in this case the newly selected item should be displayed in the detail area,\n\t\t\t\t\t\tthis._navToListItem(oListItem);\n\t\t\t\t\t}\n\t\t\t\t} else { // the item turns into unselected\n\t\t\t\t\tthis._iMarkedCount--;\n\t\t\t\t}\n\t\t\t\tthis._oViewProperties.setProperty(\"/markExists\", this._iMarkedCount > 0);\n\t\t\t} else { // in single-select mode the user wants to navigate to the selected item\n\t\t\t\tif (this._isInEditMode()) { // in edit mode a data-loss popup might be necessary\n\t\t\t\t\tvar fnLeaveCancelled = function() { // called when user decides to cancel the navigation due to possible data-loss\n\t\t\t\t\t\tthis._setItemSelected(this._getListItemForId(this._oApplicationProperties.getProperty(\"/productId\"))); // set back selection to the item being edited (if it is in the list)\n\t\t\t\t\t};\n\t\t\t\t\tthis._leaveEditPage(this._navToListItem.bind(this, oListItem), fnLeaveCancelled.bind(this));\n\t\t\t\t} else {\n\t\t\t\t\tthis._navToListItem(oListItem);\n\t\t\t\t}\n\t\t\t\tthis._oApplicationController.hideMasterInPortrait();\n\t\t\t}\n\t\t},\n\n\t\t// --- internal helper methods\n\n\t\t_navToListItem: function(oListItem) {\n\t\t\t// This method triggers the navigation to the detail page with the specified list item oListItem\n\t\t\tvar oCtx = oListItem.getBindingContext(),\n\t\t\t\tsProductId = oCtx.getProperty(\"Id\");\n\t\t\tthis._oApplicationController.showProductDetailPage(sProductId);\n\t\t},\n\n\t\t_setItemSelected: function(oItemToSelect) {\n\t\t\t// Set the specified list item to be selected, resp. remove all selections if the specififed item is faulty\n\t\t\tif (oItemToSelect) {\n\t\t\t\tthis._oList.setSelectedItem(oItemToSelect);\n\t\t\t} else {\n\t\t\t\tthis._removeAllSelections();\n\t\t\t}\n\t\t},\n\n\t\t_getListItemForId: function(sId) {\n\t\t\t// Return the list item for the specified product id or a faulty value if the list does not contain the product.\n\t\t\tif (!sId || sId === \"-\") {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar aItems = this._oList.getItems();\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\t\tvar oItem = aItems[i];\n\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\n\t\t\t\t\tvar oContext = oItem.getBindingContext();\n\t\t\t\t\tif (oContext && oContext.getProperty(\"Id\") === sId) {\n\t\t\t\t\t\treturn oItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_scrollToListItem: function(oListItem) {\n\t\t\t// Scroll the list to the given list item.\n\t\t\tif (!oListItem || oListItem === this._getFirstRealItem()) {\n\t\t\t\t// If the item to scroll to is the first, just scroll to top. This ensures that the info toolbar and a top\n\t\t\t\t// grouping item will be shown if available.\n\t\t\t\tvar oPage = this.byId(\"masterPage\");\n\t\t\t\toPage.scrollTo(0);\n\t\t\t} else {\n\t\t\t\tvar oDomRef = oListItem.getDomRef();\n\t\t\t\tif (oDomRef) {\n\t\t\t\t\toDomRef.scrollIntoView();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_isInEditMode: function() {\n\t\t\treturn !this._oApplicationProperties.getProperty(\"/noEditMode\");\n\t\t},\n\n\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\n\t\t\t// leave the edit page. If the current draft is dirty the user will get a data loss poup.\n\t\t\t// fnLeave is the function that will be called when the edit page is really left\n\t\t\t// fnLeaveCancelled is the function that is called when the user cancels the operation\n\t\t\tvar sPath = this._oHelper.getPathForDraftId(this._oApplicationProperties.getProperty(\"/productId\"));\n\t\t\tthis._oHelper.deleteProductDraft(sPath, fnLeave, fnLeaveCancelled);\n\t\t},\n\n\t\t_getFirstRealItem: function() {\n\t\t\t// Returns the first item of the list which is not a grouping item. Returns a faulty value if list is empty.\n\t\t\tvar aItems = this._oList.getItems();\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\t\tif (!(aItems[i] instanceof GroupHeaderListItem)) {\n\t\t\t\t\treturn aItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/S3_ProductDetail.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/core/mvc/Controller\"],function(C){\"use strict\";return C.extend(\"nw.epm.refapps.ext.prod.manage.controller.S3_ProductDetail\",{onInit:function(){var c=this.getOwnerComponent();this._oApplicationProperties=c.getModel(\"appProperties\");var a=this._oApplicationProperties.getProperty(\"/applicationController\");a.registerDetail(this);this._oContent=this.byId(\"content\");this._oDisplayView=this.byId(\"display\");this._oEditView=this.byId(\"edit\");this._oCurrentView=this._oDisplayView;this._oContent.to(this._oCurrentView);},editModeChanged:function(){var i=!this._oApplicationProperties.getProperty(\"/noEditMode\");var v=i?this._oEditView:this._oDisplayView;if(this._oCurrentView===v){return false;}this._oCurrentView.getController().leave();this._oCurrentView=v;v.getController().show();this._oContent.to(v);return true;},productChanged:function(){this._oCurrentView.getController().show();}});});",
		"nw/epm/refapps/ext/prod/manage/controller/S3_ProductDetail-dbg.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\n// Actually we have two detail views, namely nw.epm.refapps.ext.prod.manage.view.ProductDisplay and\n// nw.epm.refapps.ext.prod.manage.view.ProductEdit.\n// Since the same route is used for both of them, this view is used as host for both of them.\n// The NavContainer with id 'content' will always display the instance which is currently required.\n// This view is informed by the controller of the app via methods editModeChanged and productChanged that it\n// should adapt to the current global state.\n// This is done by informing the controllers of those subviews via methods leave and show about the new situation.\n// Afterwards the view to be displayed in the content is adapted.\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function(Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"nw.epm.refapps.ext.prod.manage.controller.S3_ProductDetail\", {\n\t\t// _oApplicationProperties: the global model of the App\n\t\t// _oContent: the NavContainer hosting the 'real' view\n\t\t// _oDisplayView: the view used in display mode\n\t\t// _oEditView: the view used in edit mode\n\t\t// _oCurrentView: the view currently used (either _oDisplayView or _oEditView)\n\n\t\tonInit: function() {\n\t\t\tvar oComponent = this.getOwnerComponent();\n\t\t\tthis._oApplicationProperties = oComponent.getModel(\"appProperties\");\n\t\t\tvar oApplicationController = this._oApplicationProperties.getProperty(\"/applicationController\");\n\t\t\toApplicationController.registerDetail(this);\n\t\t\tthis._oContent = this.byId(\"content\");\n\t\t\tthis._oDisplayView = this.byId(\"display\");\n\t\t\tthis._oEditView = this.byId(\"edit\");\n\t\t\tthis._oCurrentView = this._oDisplayView;\n\t\t\tthis._oContent.to(this._oCurrentView);\n\t\t},\n\n\t\teditModeChanged: function() {\n\t\t\t// This method is called by the controller of the app in case the mode has possibly changed.\n\t\t\t// It returns the information whether it was really necessary to exchange the views.\n\t\t\tvar bIsEditMode = !this._oApplicationProperties.getProperty(\"/noEditMode\"); // retrieve the current mode from the global model\n\t\t\tvar oView = bIsEditMode ? this._oEditView : this._oDisplayView;\n\t\t\tif (this._oCurrentView === oView) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._oCurrentView.getController().leave();\n\t\t\tthis._oCurrentView = oView;\n\t\t\toView.getController().show();\n\t\t\tthis._oContent.to(oView);\n\t\t\treturn true;\n\t\t},\n\n\t\tproductChanged: function() {\n\t\t\t// This method is called when the product to be displayed has possibly been changed\n\t\t\tthis._oCurrentView.getController().show(); // Just forward to the current view\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/messages-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/m/MessageBox\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"./utilities\"\n], function(MessageBox, JSONModel, utilities) {\n\t\"use strict\";\n\n\tfunction fnExtractErrorMessageFromDetails(sDetails) {\n\t\tif (jQuery.sap.startsWith(sDetails || \"\", \"{\\\"error\\\":\")) {\n\t\t\tvar oErrModel = new JSONModel();\n\t\t\toErrModel.setJSON(sDetails);\n\t\t\treturn oErrModel.getProperty(\"/error/message/value\") || \"Error\";\n\t\t}\n\t}\n\n\tfunction fnParseError(oParameter) {\n\t\tvar oParameters = null,\n\t\t\toResponse = null,\n\t\t\toError = {};\n\n\t\t// \"getParameters\": for the case of catching oDataModel \"requestFailed\" event\n\t\toParameters = oParameter.getParameters ? oParameter.getParameters() : null;\n\t\t// \"oParameters.response\": V2 interface, response object is under the getParameters()\n\t\t// \"oParameters\": V1 interface, response is directly in the getParameters()\n\t\t// \"oParameter\" for the case of catching request \"onError\" event\n\t\toResponse = oParameters ? (oParameters.response || oParameters) : oParameter;\n\t\toError.sDetails = oResponse.responseText || oResponse.body || (oResponse.response && oResponse.response.body) || \"\"; //\"onError\" Event: V1 uses response and response.body\n\t\toError.sMessage = fnExtractErrorMessageFromDetails(oError.sDetails) || oResponse.message || (oParameters && oParameters.message);\n\t\treturn oError;\n\t}\n\n\tfunction fnShowMessageBox(sTitle, sMessageHeader, sMessageDetails) {\n\n\t\tMessageBox.show(sMessageHeader, {\n\t\t\ticon: MessageBox.Icon.ERROR,\n\t\t\ttitle: sTitle,\n\t\t\tdetails: sMessageDetails,\n\t\t\tactions: MessageBox.Action.CLOSE,\n\t\t\tstyleClass: utilities.getContentDensityClass()\n\t\t});\n\n\t}\n\n\treturn {\n\t\t// Show an error dialog with information from the oData response object.\n\t\t// oParameter - The object containing error information\n\t\tshowErrorMessage: function(oParameter, oView) {\n\t\t\tvar oErrorDetails = fnParseError(oParameter),\n\t\t\t\toBundle = oView.getModel(\"i18n\").getResourceBundle(),\n\t\t\t\tsTitle = oBundle.getText(\"xtit.error\");\n\t\t\tfnShowMessageBox(sTitle, oErrorDetails.sMessage, oErrorDetails);\n\t\t\t/*\n\t\t\tMessageBox.show(oErrorDetails.sMessage, {\n\t\t\t\ticon: MessageBox.Icon.ERROR,\n\t\t\t\ttitle: sTitle,\n\t\t\t\tdetails: oErrorDetails.sDetails,\n\t\t\t\tactions: MessageBox.Action.CLOSE,\n\t\t\t\tstyleClass: utilities.getContentDensityClass()\n\t\t\t});*/\n\t\t},\n\n\t\tshowXMLErrorMessage: function(oParameter, oView) {\n\t\t\t// Errors from upload control are in xml format as default because the requests expect other formats \n\t\t\t// in the header for pictures\n\n\t\t\t// xml is parsed using jQuery, then passed to jQuery object\n\t\t\ttry {\n\t\t\t\tvar xmlDoc = jQuery.parseXML(oParameter);\n\t\t\t\tvar xml = jQuery(xmlDoc);\n\t\t\t} catch (e) {\n\t\t\t\tjQuery.sap.log.error(e);\n\t\t\t}\n\n\t\t\tif (xml) {\n\t\t\t\tvar sMessageHeader = xml.find(\"errordetails\").find(\"message\").text();\n\t\t\t\tvar sMessageDetails = xml.find(\"error\").find(\"message\").text();\n\t\t\t} else {\n\t\t\t\t// Just in case that the Error from request could not be parsed\n\t\t\t\tsMessageHeader = oParameter;\n\t\t\t}\n\n\t\t\tvar oBundle = oView.getModel(\"i18n\").getResourceBundle(),\n\t\t\t\tsTitle = oBundle.getText(\"xtit.error\");\n\t\t\tfnShowMessageBox(sTitle, sMessageHeader, sMessageDetails);\n\t\t},\n\n\t\tgetErrorContent: function(oParameter) {\n\t\t\treturn fnParseError(oParameter).sMessage;\n\t\t},\n\n\t\tgetErrorDetails: function(oParameter) {\n\t\t\treturn fnParseError(oParameter).sDetails;\n\t\t},\n\n\t\textractErrorMessageFromDetails: function(sDetails) {\n\t\t\treturn fnExtractErrorMessageFromDetails(sDetails);\n\t\t}\n\t};\n});",
		"nw/epm/refapps/ext/prod/manage/controller/ProductDisplay-dbg.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\n// Note that this view is hosted by nw.epm.refapps.ext.prod.manage.view.S3_ProductDetail. Thus, it implements the lifecycle methods show and leave\n// defined by this view.\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"./SubControllerForShare\",\n\t\"./messages\",\n\t\"./utilities\",\n\t\"nw/epm/refapps/ext/prod/manage/model/formatter\"\n], function(Controller, JSONModel, SubControllerForShare, messages, utilities, formatter) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"nw.epm.refapps.ext.prod.manage.controller.ProductDisplay\", {\n\t\tformatter: formatter,\n\t\t// --- Helper attributes that are initialized during onInit and never changed afterwards\n\n\t\t// _oViewProperties: json model used to manipulate declarative attributes of the controls used in this view. Initialized in _initViewPropertiesModel.\n\t\t// Contains the attribute dataLoaded which is set to true, as soon as the product is loaded\n\t\t// _oView: this view\n\t\t// _oApplicationController: the controller of the App\n\t\t// _oApplicationProperties: json model containing the App state\n\t\t// _oResourceBundle: the resource bundle to retrieve texts from\n\t\t// _oHelper: singleton instance of nw.epm.refapps.ext.prod.manage.util.Products used to call backend services\n\t\t// _oSubControllerForShare: helper for the share dialog\n\t\t// _oShareDialog: dialog for the share button. Initialized on demand.\n\n\t\t// --- attributes describing the current state\n\t\t// _sContextPath: Stores the currently requested context path\n\t\t// _oProduct: product currently bound to the view, it could be null if the requested product cannot be found any more or we are in the process of loading it\n\t\t// _sOldId: Store last retrieved supplier id.  Needed in cases when supplier is shown in display mode, then new supplier in edit mode\n\n\t\t// --- Initialization\n\n\t\tonInit: function() {\n\t\t\t// Gets the application component and the data operation helper instance\n\t\t\tthis._oView = this.getView();\n\t\t\tthis._initViewPropertiesModel();\n\t\t\tvar oComponent = this.getOwnerComponent();\n\t\t\tthis._oApplicationProperties = oComponent.getModel(\"appProperties\");\n\t\t\tthis._oApplicationController = this._oApplicationProperties.getProperty(\"/applicationController\");\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oHelper = this._oApplicationController.getODataHelper();\n\t\t\tthis._oSubControllerForShare = new SubControllerForShare(this._oView, this._oResourceBundle);\n\t\t\tthis._sContextPath = \"\";\n\t\t\tthis._mSupplierDatas = {};\n\t\t},\n\n\t\t_initViewPropertiesModel: function() {\n\t\t\t// The model created here is used to set values or view element properties that cannot be bound\n\t\t\t// directly to the OData service. Setting view element attributes by binding them to a model is preferable to the\n\t\t\t// alternative of getting each view element by its ID and setting the values directly because a JSon model is more\n\t\t\t// robust if the customer removes view elements (see extensibility).\n\t\t\tthis._oViewProperties = new JSONModel({\n\t\t\t\tdataLoaded: false\n\t\t\t});\n\t\t\tthis._oView.setModel(this._oViewProperties, \"viewProperties\");\n\t\t},\n\n\t\t// --- Lifecycle methods used by the hosting view\n\n\t\tshow: function() {\n\t\t\tvar sProductId = this._oApplicationProperties.getProperty(\"/productId\");\n\t\t\tif (!sProductId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._oApplicationController.whenMetadataLoaded(this._show.bind(this, sProductId));\n\t\t},\n\n\t\t// Note: This function must not be called before the metadata have been read successfully\n\t\t_show: function(sProductId) {\n\t\t\tthis._sContextPath = this._oHelper.getPathForProductId(sProductId);\n\t\t\tthis._oView.bindElement(this._sContextPath);\n\n\t\t\t// 1. Check whether data is already available locally in the model\n\t\t\tvar bProductDataAlreadyRead = this._extractProduct();\n\t\t\tthis._oViewProperties.setProperty(\"/dataLoaded\", bProductDataAlreadyRead);\n\t\t\t// 2. If the binding is not set yet, register for the data for the binding are loaded asynchronously.\n\t\t\tif (!bProductDataAlreadyRead) {\n\t\t\t\tthis._oView.getElementBinding().attachEventOnce(\"dataReceived\", this._getBindingDataReceivedHandler(sProductId), this);\n\t\t\t}\n\t\t},\n\n\t\t_extractProduct: function() {\n\t\t\t// Helper function for reading the product from the binding context and making sure it is the requested one.\n\t\t\t// Return the information whether a binding context was available.\n\t\t\tvar oBindingContext = this._oView.getBindingContext();\n\t\t\tthis._oProduct = null;\n\t\t\tif (oBindingContext) {\n\t\t\t\tif (oBindingContext.getPath() === this._sContextPath) {\n\t\t\t\t\tthis._oProduct = oBindingContext.getObject();\n\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/lastDisplay\", this._oProduct.Id);\n\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/detailBusyIndicatorDelay\", null);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false; // The requested product is not available in backend\n\t\t},\n\n\t\t_getBindingDataReceivedHandler: function(sProductID) {\n\t\t\treturn function() {\n\t\t\t\tif (sProductID !== this._oApplicationProperties.getProperty(\"/productId\") || !this._oView.getElementBinding()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar bProductDataAlreadyRead = this._extractProduct();\n\t\t\t\tif (!bProductDataAlreadyRead) {\n\t\t\t\t\t// Handles the case that the product cannot be retrieved remotely (such as it was already deleted).\n\t\t\t\t\tvar sText = this._oResourceBundle.getText(\"ymsg.productUnavailable\", [sProductID]);\n\t\t\t\t\tthis._oApplicationController.navToEmptyPage(sText);\n\t\t\t\t}\n\t\t\t\tthis._oViewProperties.setProperty(\"/dataLoaded\", true);\n\t\t\t};\n\t\t},\n\n\t\tleave: function() {\n\t\t\tthis._oView.unbindElement();\n\t\t},\n\n\t\t// --- Event handlers attached declaratively\n\t\t// User wants to open the business card of the product supplier\n\t\tonSupplierPressed: function(oEvent) {\n\t\t\tif (!this._oSupplierCard) {\n\t\t\t\tthis._initializeSupplierCard();\n\t\t\t}\n\t\t\tthis._oSupplierCard.openBy(oEvent.getSource());\n\t\t},\n\n\t\t_initializeSupplierCard: function() {\n\t\t\tvar oView = this.getView();\n\t\t\tthis._oSupplierCard = sap.ui.xmlfragment(oView.getId(), \"nw.epm.refapps.ext.prod.manage.view.SupplierCard\");\n\t\t\tthis._oSupplierCard.bindElement({\n\t\t\t\tpath: \"Supplier\"\n\t\t\t});\n\t\t\tutilities.attachControlToView(oView, this._oSupplierCard);\n\t\t},\n\n\t\tonCopyPressed: function() {\n\t\t\tthis._oHelper.copyProductToDraft(this._oApplicationProperties.getProperty(\"/productId\"), this._oApplicationController.navToProductEditPage\n\t\t\t\t.bind(\n\t\t\t\t\tthis._oApplicationController));\n\t\t},\n\n\t\tonEditPressed: function() {\n\t\t\tthis._oHelper.getProductDraftFromProductId(this._oApplicationProperties.getProperty(\"/productId\"), this._oApplicationController.navToProductEditPage\n\t\t\t\t.bind(this._oApplicationController));\n\t\t},\n\n\t\tonDeletePressed: function() {\n\t\t\tthis._oHelper.deleteProduct(this._sContextPath);\n\t\t},\n\n\t\tonSharePressed: function(oEvent) {\n\t\t\tthis._oSubControllerForShare.openDialog(oEvent);\n\t\t},\n\n\t\tonNavButtonPress: function() {\n\t\t\t// Handler for the nav button of the page. It is attached declaratively. Note that it is only available on phone\n\t\t\tthis._oApplicationController.navBack(true);\n\t\t\tthis._oView.unbindElement();\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/ProductDisplay.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/core/mvc/Controller\",\"sap/ui/model/json/JSONModel\",\"./SubControllerForShare\",\"./messages\",\"./utilities\",\"nw/epm/refapps/ext/prod/manage/model/formatter\"],function(C,J,S,m,u,f){\"use strict\";return C.extend(\"nw.epm.refapps.ext.prod.manage.controller.ProductDisplay\",{formatter:f,onInit:function(){this._oView=this.getView();this._initViewPropertiesModel();var c=this.getOwnerComponent();this._oApplicationProperties=c.getModel(\"appProperties\");this._oApplicationController=this._oApplicationProperties.getProperty(\"/applicationController\");this._oResourceBundle=c.getModel(\"i18n\").getResourceBundle();this._oHelper=this._oApplicationController.getODataHelper();this._oSubControllerForShare=new S(this._oView,this._oResourceBundle);this._sContextPath=\"\";this._mSupplierDatas={};},_initViewPropertiesModel:function(){this._oViewProperties=new J({dataLoaded:false});this._oView.setModel(this._oViewProperties,\"viewProperties\");},show:function(){var p=this._oApplicationProperties.getProperty(\"/productId\");if(!p){return;}this._oApplicationController.whenMetadataLoaded(this._show.bind(this,p));},_show:function(p){this._sContextPath=this._oHelper.getPathForProductId(p);this._oView.bindElement(this._sContextPath);var P=this._extractProduct();this._oViewProperties.setProperty(\"/dataLoaded\",P);if(!P){this._oView.getElementBinding().attachEventOnce(\"dataReceived\",this._getBindingDataReceivedHandler(p),this);}},_extractProduct:function(){var b=this._oView.getBindingContext();this._oProduct=null;if(b){if(b.getPath()===this._sContextPath){this._oProduct=b.getObject();this._oApplicationProperties.setProperty(\"/lastDisplay\",this._oProduct.Id);this._oApplicationProperties.setProperty(\"/detailBusyIndicatorDelay\",null);return true;}}return false;},_getBindingDataReceivedHandler:function(p){return function(){if(p!==this._oApplicationProperties.getProperty(\"/productId\")||!this._oView.getElementBinding()){return;}var P=this._extractProduct();if(!P){var t=this._oResourceBundle.getText(\"ymsg.productUnavailable\",[p]);this._oApplicationController.navToEmptyPage(t);}this._oViewProperties.setProperty(\"/dataLoaded\",true);};},leave:function(){this._oView.unbindElement();},onSupplierPressed:function(e){if(!this._oSupplierCard){this._initializeSupplierCard();}this._oSupplierCard.openBy(e.getSource());},_initializeSupplierCard:function(){var v=this.getView();this._oSupplierCard=sap.ui.xmlfragment(v.getId(),\"nw.epm.refapps.ext.prod.manage.view.SupplierCard\");this._oSupplierCard.bindElement({path:\"Supplier\"});u.attachControlToView(v,this._oSupplierCard);},onCopyPressed:function(){this._oHelper.copyProductToDraft(this._oApplicationProperties.getProperty(\"/productId\"),this._oApplicationController.navToProductEditPage.bind(this._oApplicationController));},onEditPressed:function(){this._oHelper.getProductDraftFromProductId(this._oApplicationProperties.getProperty(\"/productId\"),this._oApplicationController.navToProductEditPage.bind(this._oApplicationController));},onDeletePressed:function(){this._oHelper.deleteProduct(this._sContextPath);},onSharePressed:function(e){this._oSubControllerForShare.openDialog(e);},onNavButtonPress:function(){this._oApplicationController.navBack(true);this._oView.unbindElement();}});});",
		"nw/epm/refapps/ext/prod/manage/controller/NavigationManager-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/core/routing/History\"\n], function(Object, Device, History) {\n\t\"use strict\";\n\n\treturn Object.extend(\"nw.epm.refapps.ext.prod.manage.controller.NavigationManager\", {\n\t\t// _oRouter: The router of this app\n\t\t// _oApplicationProperties: global state model of the App\n\t\t// _mRoutes: The routes used by this app\n\t\t// _oResourceBundle: The resource bundle used by this app\n\t\t// _oMasterController, _oDetailController: Controllers of S2 and S3 view\n\t\t// _bSubControllersMustBeAdapted: this attribute is used to distinguish between hash changes performed\n\t\t// programmatically (via method _executeNavigation) and hash changes performed by the user.\n\t\t// For changes performed programmatically the detail controller has already been updated beforehand.\n\t\t// Therefore, onRoutePatternMatched needs not to care for this.\n\n\t\tconstructor: function(oRouter, oApplicationProperties, mRoutes, oResourceBundle) {\n\t\t\tthis._oRouter = oRouter;\n\t\t\tthis._oApplicationProperties = oApplicationProperties;\n\t\t\tthis._mRoutes = mRoutes;\n\t\t\tthis._oResourceBundle = oResourceBundle;\n\t\t},\n\n\t\tinit: function() {\n\t\t\tthis._bSubControllersMustBeAdapted = true;\n\t\t\tthis._oRouter.getTargetHandler().setCloseDialogs(false);\n\t\t\tthis._oRouter.attachRoutePatternMatched(this.onRoutePatternMatched, this);\n\t\t\tthis._oRouter.attachBypassed(this.onBypassed, this);\n\t\t\t// Router is initialized at the end, since this triggers the instantiation of the views.\n\t\t\t// In onInit of the views we want to rely on the component being correctly initialized.\n\t\t\tthis._oRouter.initialize();\n\t\t},\n\n\t\tregisterMaster: function(oMasterController) {\n\t\t\t// This method is called in onInit() of the S2-view\n\t\t\tthis._oMasterController = oMasterController;\n\t\t},\n\n\t\tregisterDetail: function(oDetailController) {\n\t\t\t// This method is called in onInit() of the S3-view\n\t\t\tthis._oDetailController = oDetailController;\n\t\t},\n\t\t// - Navigation methods\n\n\t\tonRoutePatternMatched: function(oEvent) {\n\t\t\t// This method is registered at the router. It will be called whenever the url-hash changes. Note that there may be two reasons\n\t\t\t// for this. The hash may be set by the browser (e.g. if the user follows a link leading to this App) or by the router itself.\n\t\t\t// The second case applies when the App calls a navigation method of the router itself.\n\t\t\tvar sRoute = oEvent.getParameter(\"name\"),\n\t\t\t\tsProductId = (sRoute === this._mRoutes.DETAIL) && decodeURIComponent(oEvent.getParameter(\"arguments\").productID);\n\t\t\tthis._oApplicationProperties.setProperty(\"/productId\", sProductId);\n\t\t\tif (sProductId) {\n\t\t\t\tif (this._bSubControllersMustBeAdapted) {\n\t\t\t\t\tthis._newProductId();\n\t\t\t\t}\n\t\t\t\tthis._oMasterController.adaptToDetailSelection(this._bSubControllersMustBeAdapted);\n\t\t\t}\n\t\t\tthis._bSubControllersMustBeAdapted = true;\n\t\t},\n\n\t\t// called for invalid url-hashes\n\t\tonBypassed: function() {\n\t\t\tthis._oApplicationProperties.setProperty(\"/productId\", \"-\");\n\t\t\tthis._oApplicationProperties.setProperty(\"/emptyText\", this._oResourceBundle.getText(\"ymsg.pageNotFound\"));\n\t\t\tthis._oMasterController.adaptToDetailSelection(false);\n\t\t},\n\n\t\t_newProductId: function() {\n\t\t\t// helper method, that informs detail controller that a new product id has been selected\n\t\t\t// Thereby, detail controller needs to check whether it has to change between display and edit mode.\n\t\t\tif (this._oDetailController && !this._oDetailController.editModeChanged()) {\n\t\t\t\tthis._oDetailController.productChanged();\n\t\t\t}\n\t\t},\n\n\t\tnavBackToMasterPageInPhone: function() {\n\t\t\t// Navigates back to the master page on phone, return true for the phone case, return false for other cases\n\t\t\tif (Device.system.phone) {\n\t\t\t\tthis.navToMaster();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tshowProductDetailPage: function(sProductId, bListRefresh) {\n\t\t\t// This method navigates to the display page for the specified product id. Note that this method must only\n\t\t\t// be called when either no draft exists (for the current user), or the deletion of this draft has been triggered already,\n\t\t\t// or the lookup for lost draft has failed.\n\t\t\tthis._oApplicationProperties.setProperty(\"/productId\", sProductId);\n\t\t\tthis._changeEditMode(false);\n\t\t\tif (bListRefresh) {\n\t\t\t\tthis._oMasterController.listRefresh();\n\t\t\t}\n\t\t\tthis._oMasterController.adaptToDetailSelection();\n\t\t\tif (this._oDetailController) {\n\t\t\t\tthis._oDetailController.productChanged();\n\t\t\t}\n\t\t\tthis._executeNavigation(this._mRoutes.DETAIL, {\n\t\t\t\tproductID: encodeURIComponent(sProductId)\n\t\t\t}, !Device.system.phone); // true: hash should not be stored in the history\n\t\t},\n\n\t\tnavToMaster: function(sPrefereredId) {\n\t\t\t// This method navigates to the master route. sPreferredId is an optional parameter that may contain the id of a\n\t\t\t// product that (on non-phone devices) is preferably shown (provided it is in the master list). Prerequisites for\n\t\t\t// calling this method are as for showProductDetailPage.\n\t\t\tthis._executeNavigation(this._mRoutes.MASTER, {}, true);\n\t\t\tthis._oApplicationProperties.setProperty(\"/preferredIds\", sPrefereredId ? [sPrefereredId] : []);\n\t\t\tthis._oApplicationProperties.setProperty(\"/productId\", null);\n\t\t\tthis._changeEditMode(false);\n\t\t\tthis._oMasterController.findItem();\n\t\t},\n\n\t\tnavToProductEditPage: function(sDraftId) {\n\t\t\t// This method navigates to the edit page for the (only existing) draft for this user. Note that this method must only\n\t\t\t// be called when this draft exists and its id is either passed as parameter sDraftId or is already contained in attribute\n\t\t\t// productId of the AppModel.\n\t\t\tif (sDraftId) {\n\t\t\t\tthis._oApplicationProperties.setProperty(\"/productId\", sDraftId);\n\t\t\t} else {\n\t\t\t\tsDraftId = this._oApplicationProperties.getProperty(\"/productId\");\n\t\t\t}\n\t\t\tthis._changeEditMode(true);\n\t\t\tthis._executeNavigation(this._mRoutes.DETAIL, {\n\t\t\t\tproductID: encodeURIComponent(sDraftId)\n\t\t\t}, !Device.system.phone);\n\t\t\tthis._oMasterController.adaptToDetailSelection();\n\t\t},\n\n\t\t_changeEditMode: function(bIsEdit) {\n\t\t\t// This method sets the edit mode of the App as specified by parameter bIsEdit\n\t\t\tif (this._oApplicationProperties.getProperty(\"/noEditMode\") !== bIsEdit) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._oApplicationProperties.setProperty(\"/noEditMode\", !bIsEdit);\n\t\t\tif (this._oDetailController) {\n\t\t\t\tthis._oDetailController.editModeChanged();\n\t\t\t}\n\t\t},\n\n\t\tnavToEmptyPage: function(sText, bResetUrl) {\n\t\t\t// This method navigates to the empty page in detail area. Prerequisites for\n\t\t\t// calling this method are as for showProductDetailPage.\n\t\t\t// sText is the text to be shown on the empty page\n\t\t\t// bResetUrl defines whether the route should be set back to the master route\n\t\t\tthis._oApplicationProperties.setProperty(\"/emptyText\", sText);\n\t\t\tif (bResetUrl) {\n\t\t\t\t// Set back the route to the generic one\n\t\t\t\tthis._executeNavigation(this._mRoutes.MASTER);\n\t\t\t}\n\t\t\tthis._oRouter.getTargets().display(\"empty\");\n\t\t},\n\n\t\tnavBack: function(bFromDetail, oDataHelper) {\n\t\t\tif (this._oApplicationProperties.getProperty(\"/noEditMode\")) {\n\t\t\t\tthis._navBackImpl(bFromDetail);\n\t\t\t} else {\n\t\t\t\tvar sPath = oDataHelper.getPathForDraftId(this._oApplicationProperties.getProperty(\"/productId\"));\n\t\t\t\toDataHelper.deleteProductDraft(sPath, this._navBackImpl.bind(this, bFromDetail));\n\t\t\t}\n\t\t},\n\n\t\t_navBackImpl: function(bFromDetail) {\n\t\t\tvar oHistory = History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\n\t\t\t//The history contains a previous entry\n\t\t\tthis._changeEditMode(false);\n\t\t\tif (typeof sPreviousHash !== \"undefined\") {\n\t\t\t\thistory.go(-1);\n\t\t\t} else if (bFromDetail) {\n\t\t\t\tthis.navToMaster();\n\t\t\t} else {\n\t\t\t\t// navigate back to FLP home\n\t\t\t\tvar oCrossAppNavigator = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\t\t\t\tif (oCrossAppNavigator) {\n\t\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tshellHash: \"#\"\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_executeNavigation: function(sName, oParameters, bReplace) {\n\t\t\t// This method wraps the navTo-method of the router. It is called for navigation performed programmatically.\n\t\t\t// Thus, we expect that the subcontrollers have already been informed. So _bSubControllersMustBeAdapted is\n\t\t\t// set to false which is evaluated in onRoutePatternMatched.\n\t\t\t// However, there is one exception: If the detail controller was not registered at this point in time, adapting\n\t\t\t// it had to be postponed.\n\t\t\tthis._bSubControllersMustBeAdapted = !this._oDetailController;\n\t\t\tthis._oRouter.navTo(sName, oParameters, bReplace);\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/SubControllerForFGS-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\n// Creates a sub-controller to be used by the master controller to handle specifically filtering, grouping, and sorting\n// dialogs\nsap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/Sorter\",\n\t\"./utilities\"\n], function(Object, Filter, Sorter, utilities) {\n\t\"use strict\";\n\n\t// Reads the SAP attribute label from the list-item context\n\tfunction fnGetSAPLabel(oListItemContext, sAttributeName) {\n\t\treturn oListItemContext.getProperty(\"/#Product/\" + sAttributeName + \"/@sap:label\");\n\t}\n\n\treturn Object.extend(\"nw.epm.refapps.ext.prod.manage.controller.SubControllerForFGS\", {\n\t\t// _aDialogs\n\t\t// _oParentView:\n\t\t// _oResourceBundle:\n\t\t// _fnApplyTableOperations:\n\t\t// _oPriceGroups:\n\n\t\tconstructor: function(oParentView, oTableOperations, fnApplyTableOperations, oResourceBundle) {\n\t\t\tthis._oParentView = oParentView;\n\t\t\tthis._oResourceBundle = oResourceBundle;\n\t\t\tthis._oTableOperations = oTableOperations;\n\t\t\tthis._fnApplyTableOperations = fnApplyTableOperations;\n\t\t\tthis._aDialogs = [];\n\n\t\t\tvar sTextBelow100 = this._getText(\"xfld.groupPriceBetween\", [\" 0-100\"]),\n\t\t\t\tsTextBelow500 = this._getText(\"xfld.groupPriceBetween\", [\" 100-500\"]),\n\t\t\t\tsTextBelow1000 = this._getText(\"xfld.groupPriceBetween\", [\" 500-1000\"]),\n\t\t\t\tsTextAbove1000 = this._getText(\"xfld.groupPrice\", [\" 1000\"]);\n\n\t\t\t// Sets the pre-defined price ranges for use in grouping. The texts can only be defined once i18n bundle is\n\t\t\t// available because the text \"price between\" is defined only once.\n\t\t\tthis._oPriceGroups = {\n\t\t\t\t\"LE100\": sTextBelow100,\n\t\t\t\t\"BT100-500\": sTextBelow500,\n\t\t\t\t\"BT500-1000\": sTextBelow1000,\n\t\t\t\t\"GT1000\": sTextAbove1000,\n\t\t\t\t\"unknownPrice\": \"?\"\n\t\t\t};\n\t\t\tvar oViewPropertiesModel = oParentView.getModel(\"viewProperties\");\n\t\t\toViewPropertiesModel.setProperty(\"/LE100\", sTextBelow100);\n\t\t\toViewPropertiesModel.setProperty(\"/BT100-500\", sTextBelow500);\n\t\t\toViewPropertiesModel.setProperty(\"/BT500-1000\", sTextBelow1000);\n\t\t\toViewPropertiesModel.setProperty(\"/GT1000\", sTextAbove1000);\n\t\t},\n\n\t\t// Opens the requested filter, grouping, and sorting dialogs\n\t\topenDialog: function(sDialogFragmentName, sInitialSelection) {\n\t\t\tsDialogFragmentName = \"nw.epm.refapps.ext.prod.manage.view.\" + sDialogFragmentName;\n\t\t\tvar oDialog = this._aDialogs[sDialogFragmentName];\n\t\t\tif (!oDialog) {\n\t\t\t\tthis._aDialogs[sDialogFragmentName] = oDialog = sap.ui.xmlfragment(sDialogFragmentName, this);\n\t\t\t\tutilities.attachControlToView(this._oParentView, oDialog);\n\t\t\t\tif (sInitialSelection) {\n\t\t\t\t\toDialog.setSelectedSortItem(sInitialSelection);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn oDialog.open();\n\t\t},\n\n\t\t// Handler for the filter criteria, which is set by the user\n\t\tonFilterDialogConfirm: function(oEvent) {\n\t\t\tvar params = oEvent.getParameters(),\n\t\t\t\tbPrice = false,\n\t\t\t\tbStockQuantity = false,\n\t\t\t\tsText = \"\",\n\t\t\t\taFilterItems = params.filterItems, // Array of type ViewSettingsItem\n\t\t\t\tiLength = aFilterItems.length;\n\t\t\t// Rebuilds filters every time. Makes it easier if the user has removed filter selections\n\t\t\tthis._oTableOperations.resetFilters();\n\n\t\t\t// Determines which filters the user selected according to the predefined price and stock filters\n\t\t\tfor (var i = 0; i < iLength; i++) {\n\t\t\t\t// Determines which price filters have been selected using the keys\n\t\t\t\tvar oSelectedFilterExpression = this._oPriceFilters[aFilterItems[i].getKey()];\n\t\t\t\tif (oSelectedFilterExpression) {\n\t\t\t\t\tthis._oTableOperations.addFilter(oSelectedFilterExpression, \"Price\");\n\t\t\t\t\tbPrice = true;\n\t\t\t\t} else {\n\t\t\t\t\t// Searches for stock filter based on the key specified\n\t\t\t\t\toSelectedFilterExpression = this._oStockFilters[aFilterItems[i].getKey()];\n\t\t\t\t\tif (oSelectedFilterExpression) {\n\t\t\t\t\t\tthis._oTableOperations.addFilter(oSelectedFilterExpression, \"StockQuantity\");\n\t\t\t\t\t\tbStockQuantity = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Updates table operation settings and updates list binding accordingly\n\t\t\tthis._fnApplyTableOperations();\n\n\t\t\t// Shows/hides infoToolbar in the list\n\t\t\tvar oViewPropertiesModel = this._oParentView.getModel(\"viewProperties\"),\n\t\t\t\tbFilterToolbarVisible = !!this._oTableOperations.getFilterTable();\n\t\t\toViewPropertiesModel.setProperty(\"/filterToolbarVisible\", bFilterToolbarVisible);\n\t\t\tif (bFilterToolbarVisible) {\n\t\t\t\tif (bPrice && bStockQuantity) {\n\t\t\t\t\tsText = this._getText(\"xtit.filterBy2\", [this._getPriceLabel(), this._getText(\"xfld.availability\")]);\n\t\t\t\t} else {\n\t\t\t\t\t// Sets text if price filter is selected\n\t\t\t\t\tsText = bPrice ? this._getText(\"xtit.filterBy\", [this._getPriceLabel()]) : \"\";\n\t\t\t\t\t// Sets text if stock filter is selected\n\t\t\t\t\tsText = (!sText && bStockQuantity) ? this._getText(\"xtit.filterBy\", [this._getText(\"xfld.availability\")]) : sText;\n\t\t\t\t}\n\t\t\t\toViewPropertiesModel.setProperty(\"/filterInfoText\", sText);\n\t\t\t}\n\t\t},\n\n\t\t_getPriceLabel: function() {\n\t\t\treturn this._oParentView.getModel().getProperty(\"/#Product/Price/@sap:label\");\n\t\t},\n\n\t\t// Defines the price filter settings available\n\t\t_oPriceFilters: {\n\t\t\t\"LE100\": new Filter(\"Price\", sap.ui.model.FilterOperator.LE, \"100\"),\n\t\t\t\"BT100-500\": new Filter(\"Price\", sap.ui.model.FilterOperator.BT, \"100\", \"500\"),\n\t\t\t\"BT500-1000\": new Filter(\"Price\", sap.ui.model.FilterOperator.BT, \"500\", \"1000\"),\n\t\t\t\"GT1000\": new Filter(\"Price\", sap.ui.model.FilterOperator.GE, \"1000\")\n\t\t},\n\n\t\t// Defines the stock availability filter settings available\n\t\t_oStockFilters: {\n\t\t\t\"outofstock\": new Filter(\"StockQuantity\", sap.ui.model.FilterOperator.EQ, \"0\"),\n\t\t\t\"restrictedstock\": new Filter(\"StockQuantity\", sap.ui.model.FilterOperator.BT, \"1\", \"9\"),\n\t\t\t\"instock\": new Filter(\"StockQuantity\", sap.ui.model.FilterOperator.GE, \"10\")\n\t\t},\n\n\t\t// Handler for the Confirm button on the sort dialog. Depending on the selections made on the sort\n\t\t// dialog, the respective sorters are created and stored in the _oTableOperations object.\n\t\t// The actual setting of the sorters on the binding is done in function setSorters\n\t\tonSortDialogConfirmed: function(oEvent) {\n\t\t\tvar mParams = oEvent.getParameters(),\n\t\t\t\tsSortPath = mParams.sortItem.getKey();\n\t\t\tthis._oTableOperations.addSorter(new Sorter(sSortPath, mParams.sortDescending));\n\t\t\tthis._fnApplyTableOperations();\n\t\t},\n\n\t\t// Handler for the grouping criteria, which are set by the user\n\t\tonGroupingDialogConfirmed: function(oEvent) {\n\t\t\tvar mParams = oEvent.getParameters(),\n\t\t\t\tsortPath;\n\t\t\tif (mParams.groupItem) {\n\t\t\t\tsortPath = mParams.groupItem.getKey();\n\t\t\t\tif (sortPath !== \"\") {\n\t\t\t\t\tthis._oTableOperations.setGrouping(new Sorter(sortPath, mParams.groupDescending,\n\t\t\t\t\t\tthis._oGroupFunctions[sortPath].bind(this)));\n\t\t\t\t} else {\n\t\t\t\t\tthis._oTableOperations.removeGrouping();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._fnApplyTableOperations();\n\t\t},\n\n\t\t_oGroupFunctions: {\n\n\t\t\t// Assumption is that all prices contain the currency code and that the currency conversion has to be done in\n\t\t\t// the backend system of the app\n\t\t\tPrice: function(oListItemContext) {\n\t\t\t\tvar sKey, iPrice = Number(oListItemContext.getProperty(\"Price\"));\n\t\t\t\tif (iPrice <= 100) {\n\t\t\t\t\tsKey = \"LE100\";\n\t\t\t\t} else if (iPrice <= 500) {\n\t\t\t\t\tsKey = \"BT100-500\";\n\t\t\t\t} else if (iPrice <= 1000) {\n\t\t\t\t\tsKey = \"BT500-1000\";\n\t\t\t\t} else if (iPrice > 1000) {\n\t\t\t\t\tsKey = \"GT1000\";\n\t\t\t\t} else {\n\t\t\t\t\tsKey = \"unknownPrice\";\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tkey: sKey,\n\t\t\t\t\ttext: this._oPriceGroups[sKey]\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tStockQuantity: function(oListItemContext) {\n\t\t\t\tvar iQuantity = Number(oListItemContext.getProperty(\"StockQuantity\")),\n\t\t\t\t\t// Sets the default key and text if iQuantity is negative or NaN.\n\t\t\t\t\tsKey = \"unknownStockQuantity\",\n\t\t\t\t\tsText = \"?\";\n\t\t\t\tif (iQuantity >= 0) {\n\t\t\t\t\tvar sLabel = fnGetSAPLabel(oListItemContext, \"StockQuantity\");\n\t\t\t\t\tif (iQuantity === 0) {\n\t\t\t\t\t\tsKey = \"LE0\";\n\t\t\t\t\t} else if (iQuantity >= 10) {\n\t\t\t\t\t\tsKey = \"GE10\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsKey = \"BT1-9\";\n\t\t\t\t\t}\n\t\t\t\t\tvar sI18NKey = iQuantity === 0 ? \"xfld.outstock\" : (iQuantity < 10 ? \"xfld.restricted10\" : \"xfld.instock\"),\n\t\t\t\t\t\tsValue = this._oResourceBundle.getText(sI18NKey);\n\t\t\t\t\tsText = this._oResourceBundle.getText(\"xfld.groupingLabel\", [sLabel, sValue]);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tkey: sKey,\n\t\t\t\t\ttext: sText\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tMainCategoryName: function(oListItemContext) {\n\t\t\t\treturn this._getCategoryName(oListItemContext, \"MainCategoryName\");\n\t\t\t},\n\n\t\t\tSubCategoryName: function(oListItemContext) {\n\t\t\t\treturn this._getCategoryName(oListItemContext, \"SubCategoryName\");\n\t\t\t}\n\t\t},\n\n\t\t// Reads the corresponding category name based on the list-item context\n\t\t_getCategoryName: function(oListItemContext, sCategoryType) {\n\t\t\tvar sKey = oListItemContext.getProperty(sCategoryType);\n\t\t\treturn {\n\t\t\t\tkey: sKey,\n\t\t\t\ttext: this._getText(\"xfld.groupingLabel\", [fnGetSAPLabel(oListItemContext, sCategoryType), sKey])\n\t\t\t};\n\t\t},\n\n\t\t// Shortcut to get i18n text\n\t\t_getText: function() {\n\t\t\treturn this._oResourceBundle.getText.apply(this._oResourceBundle, arguments);\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/ProductDraftUploadImages-dbg.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/m/UploadCollectionParameter\",\n\t\"nw/epm/refapps/ext/prod/manage/model/formatter\",\n\t\"nw/epm/refapps/ext/prod/manage/controller/messages\"\n], function(Controller, UploadCollectionParameter, formatter, messages) {\n\t\"use strict\";\n\n\tfunction fnMessageBoxAlert(sText) {\n\t\tsap.ui.require([\"sap/m/MessageBox\", \"nw/epm/refapps/ext/prod/manage/controller/utilities\"], function(MessageBox, utilities) {\n\t\t\tMessageBox.alert(sText, {\n\t\t\t\tstyleClass: utilities.getContentDensityClass()\n\t\t\t});\n\t\t});\n\t}\n\n\treturn Controller.extend(\"nw.epm.refapps.ext.prod.manage.controller.ProductDraftUploadImages\", {\n\t\tformatter: formatter,\n\t\t// _oControlUploadImage\n\t\t// _oDataHelper\n\t\t// _oResourceBundle\n\t\t// _fnSetDraftDirty\n\n\t\tonInit: function() {\n\t\t\tthis._oControlUploadImage = this.byId(\"Upload_Images\");\n\t\t},\n\n\t\t// This handler is called if the file mismatches the given file type\n\t\tonFileTypeMismatch: function(oEvent) {\n\t\t\tvar ofileType = oEvent.getParameters().getParameter(\"fileType\");\n\t\t\tfnMessageBoxAlert(this._oResourceBundle.getText(\"ymsg.fileTypeMismatch\", ofileType));\n\t\t},\n\n\t\t// This handler is called after the upload request is completed\n\t\tonUploadCompleted: function(oEvent) {\n\t\t\tvar oResponse = oEvent.getParameters();\n\t\t\t// Status code 201: image is created/uploaded\n\t\t\tif (oResponse.getParameter(\"status\") === 201) {\n\t\t\t\tthis._fnSetDraftDirty();\n\t\t\t} else {\n\t\t\t\tvar oError = oResponse.getParameter(\"responseRaw\");\n\t\t\t\tmessages.showXMLErrorMessage(oError, this.getView());\n\t\t\t}\n\t\t\tthis._oControlUploadImage.getBinding(\"items\").refresh();\n\t\t},\n\n\t\t// User chooses the Delete icon\n\t\tonImageDelete: function(oEvent) {\n\t\t\tvar sImageId = oEvent.getParameters().documentId;\n\t\t\tvar sPath = this.getView().getModel().createKey(\"/ImageDrafts\", {\n\t\t\t\tId: sImageId\n\t\t\t});\n\t\t\tthis._oDataHelper.deleteImageDraft(sPath, function() {\n\t\t\t\tthis._fnSetDraftDirty();\n\t\t\t\tthis._oControlUploadImage.getBinding(\"items\").refresh();\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t// This Handler is called after the user selects the image to be uploaded and still before the image is sent\n\t\t// to the backend. For a successful file uploading, the security (XSRF) token needs to be provided for the Gateway,\n\t\t// currently it needs to set (or updated if the upload has been done once) manually by the application.\n\t\t// Note: the token is set usually automatically by the oDataModel for the native oData operations, such as CRUD and\n\t\t// function import operations.                         \n\t\tonChange: function() {\n\t\t\t// Gets the latest token form the oDataModel\n\t\t\tvar fnSetSecurityTokenInHeader = function() {\n\t\t\t\tvar sCSRFToken = this.getView().getModel().getSecurityToken(),\n\t\t\t\t\tbFound = false,\n\t\t\t\t\taHeaderParameters = this._oControlUploadImage.getHeaderParameters();\n\t\t\t\t// Finds the HTTP request header with \"x-csrf-token\", if found, updates the value to the latest one.\n\t\t\t\tif (aHeaderParameters) {\n\t\t\t\t\tfor (var i = 0; i < aHeaderParameters.length; i++) {\n\t\t\t\t\t\tif (aHeaderParameters[i].getName() === \"x-csrf-token\") {\n\t\t\t\t\t\t\tbFound = true;\n\t\t\t\t\t\t\taHeaderParameters[i].setValue(sCSRFToken);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If the HTTP request header with \"x-csrf-token\" has not yet been set, the corresponding new header has to\n\t\t\t\t// be included.\n\t\t\t\tif (!bFound) {\n\t\t\t\t\tthis._oControlUploadImage.addHeaderParameter(new UploadCollectionParameter({\n\t\t\t\t\t\tname: \"x-csrf-token\",\n\t\t\t\t\t\tvalue: sCSRFToken\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}.bind(this);\n\t\t\tthis._whenSecurityToken(fnSetSecurityTokenInHeader);\n\t\t},\n\n\t\t// Sets the data provided by the parent controller\n\t\tsetInitData: function(oSettings) {\n\t\t\tthis._oDataHelper = oSettings.oDataHelper;\n\t\t\tthis._fnSetDraftDirty = oSettings.fnDirty;\n\t\t\tthis._oResourceBundle = oSettings.oResourceBundle;\n\t\t},\n\n\t\t// Gets the latest security token from the server and executes a given function afterwards\n\t\t_whenSecurityToken: function(fnWithSecurityToken) {\n\t\t\tthis.getView().getModel().refreshSecurityToken(fnWithSecurityToken, function() {\n\t\t\t\tfnMessageBoxAlert(this._oResourceBundle.getText(\"ymsg.securityTokenNotRetrieved\"));\n\t\t\t}.bind(this));\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/controller/App.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"./utilities\"],function(u){\"use strict\";return sap.ui.controller(\"nw.epm.refapps.ext.prod.manage.controller.App\",{onInit:function(){this.getView().addStyleClass(u.getContentDensityClass());this._oAppControl=this.byId(\"fioriContent\");},hideMaster:function(){this._oAppControl.hideMaster();}});});",
		"nw/epm/refapps/ext/prod/manage/controller/EmptyPage.controller.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/core/mvc/Controller\"],function(C){\"use strict\";return C.extend(\"nw.epm.refapps.ext.prod.manage.controller.EmptyPage\",{onNavButtonPress:function(){var a=this.getView().getModel(\"appProperties\");var A=a.getProperty(\"/applicationController\");A.navBack(true);}});});",
		"nw/epm/refapps/ext/prod/manage/controller/TableOperations-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/model/Sorter\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterType\",\n\t\"sap/ui/model/FilterOperator\"\n], function(Object, Sorter, Filter, FilterType, FilterOperator) {\n\t\"use strict\";\n\n\treturn Object.extend(\"nw.epm.refapps.ext.prod.manage.util.TableOperations\", {\n\t\t// Object holding the active sorters of a list. It is used to make sure that\n\t\t// setting a new sorter with \"sort list\" does not break a sorting that was\n\t\t// previously set by \"grouping\".\n\t\t// When the list is sorted or grouped the list of sorters that is applied to\n\t\t// the binding is built by concatenating oGrouper and aSortList of this\n\t\t// object into one array.\n\t\t// Sorting and grouping is done with the following rules:\n\t\t// 1. selecting a sorter on the table adds the new sorter as the main sorter\n\t\t// to all existing sorters\n\t\t// 2. if grouping and sorting are both set for the same attribute then the\n\t\t// direction (ascending/descending) has to be aligned\n\t\t// The search related attributes are public because there is no special\n\t\t// logic for setting them so they can be used directly.\n\n\t\tconstructor: function(oTable, aSearchableFields, oDefaultSorter) {\n\t\t\t// Storage of the active grouping and sorting is private because\n\t\t\t// of their interdependency\n\t\t\tvar sSearchTerm = \"\",\n\t\t\t\toGrouper = null,\n\t\t\t\taFilterList = [],\n\t\t\t\taSearchFilter = [],\n\t\t\t\tbGroupingChanged = false,\n\t\t\t\tbSearchChanged = false,\n\t\t\t\tbFilterChanged = false,\n\t\t\t\tbSortChanged = false,\n\t\t\t\taSortList = [(oDefaultSorter) ? oDefaultSorter : new Sorter(\"Name\", false)],\n\t\t\t\toFilterDict = {};\n\n\t\t\tthis._resetChangeIndicators = function() {\n\t\t\t\tbGroupingChanged = false;\n\t\t\t\tbSearchChanged = false;\n\t\t\t\tbFilterChanged = false;\n\t\t\t\tbSortChanged = false;\n\t\t\t};\n\n\t\t\tthis.addSorter = function(oSorter) {\n\t\t\t\t// Delete any existing sorter for the path specified\n\t\t\t\tvar i = this._getSortListIndexByPath(oSorter.sPath);\n\t\t\t\tif (i !== -1) {\n\t\t\t\t\taSortList.splice(i, 1);\n\t\t\t\t}\n\t\t\t\t// The latest sorter is always the \"main\" sorter -> add it to the\n\t\t\t\t// beginning of the array\n\t\t\t\taSortList.unshift(oSorter);\n\t\t\t\t// Copy the sort order of the new sorter to the grouper if they\n\t\t\t\t// refer to the same path\n\t\t\t\tif (oGrouper && oGrouper.sPath === oSorter.sPath) {\n\t\t\t\t\toGrouper.bDescending = oSorter.bDescending;\n\t\t\t\t}\n\t\t\t\tbSortChanged = true;\n\t\t\t};\n\t\t\tthis.setGrouping = function(oNewGrouper) {\n\t\t\t\t// If there is already a sorter for the path specified, the sorting order\n\t\t\t\t// must be the same as in the new grouper\n\t\t\t\tvar i = this._getSortListIndexByPath(oNewGrouper.sPath);\n\t\t\t\tif (i !== -1) {\n\t\t\t\t\taSortList[i].bDescending = oNewGrouper.bDescending;\n\t\t\t\t}\n\t\t\t\toGrouper = oNewGrouper;\n\t\t\t\tbGroupingChanged = true;\n\t\t\t};\n\n\t\t\tthis._getSortListIndexByPath = function(sPath) {\n\t\t\t\tvar i;\n\t\t\t\tfor (i = 0; i < aSortList.length; i++) {\n\t\t\t\t\tif (aSortList[i].sPath === sPath) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t};\n\t\t\tthis.removeGrouping = function() {\n\t\t\t\toGrouper = null;\n\t\t\t\tbGroupingChanged = true;\n\t\t\t};\n\t\t\tthis.getGrouping = function() {\n\t\t\t\treturn oGrouper;\n\t\t\t};\n\t\t\tthis.getSorter = function() {\n\t\t\t\treturn aSortList;\n\t\t\t};\n\t\t\tthis.resetFilters = function() {\n\t\t\t\taFilterList.length = 0;\n\t\t\t\toFilterDict = {};\n\t\t\t\tbFilterChanged = true;\n\t\t\t};\n\t\t\tthis.addFilter = function(oFilter, sFilterAttribute) {\n\t\t\t\tif (oFilterDict[sFilterAttribute]) {\n\t\t\t\t\t// there is already at least one filter for this attribute -> add the new filter to the list\n\t\t\t\t\toFilterDict[sFilterAttribute].push(oFilter);\n\t\t\t\t} else {\n\t\t\t\t\t// there is no filter for this attribute yet -> add the new filter attribute to the dictionary\n\t\t\t\t\toFilterDict[sFilterAttribute] = [oFilter];\n\t\t\t\t}\n\t\t\t\t// now build the filter list - filters referring to the same attribute are connected by OR all\n\t\t\t\t// other filters are connected by AND (-> the default filter setting)\n\t\t\t\taFilterList.length = 0;\n\t\t\t\tfor (var prop in oFilterDict) {\n\t\t\t\t\tif (oFilterDict[prop].length > 1) {\n\t\t\t\t\t\taFilterList.push(new Filter(oFilterDict[prop], false));\n\t\t\t\t\t} else {\n\t\t\t\t\t\taFilterList.push(oFilterDict[prop][0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbFilterChanged = true;\n\t\t\t};\n\n\t\t\tthis.getFilterTable = function() {\n\t\t\t\treturn (aFilterList && aFilterList.length > 0) ? aFilterList : null;\n\t\t\t};\n\n\t\t\tthis.setSearchTerm = function(sNewSearchTerm) {\n\t\t\t\t// Searching may be done in more than one column - therefore a filter for\n\t\t\t\t// each of the searchable columns has to be created\n\t\t\t\taSearchFilter.length = 0;\n\t\t\t\tif (sNewSearchTerm) {\n\t\t\t\t\tsSearchTerm = sNewSearchTerm;\n\t\t\t\t\tfor (var i = 0; i < aSearchableFields.length; i++) {\n\t\t\t\t\t\taSearchFilter.push(new Filter(aSearchableFields[i], FilterOperator.Contains, sNewSearchTerm));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//the search term is empty -> remove the search\n\t\t\t\t\tsSearchTerm = \"\";\n\t\t\t\t\taSearchFilter.length = 0;\n\t\t\t\t}\n\t\t\t\tbSearchChanged = true;\n\t\t\t};\n\n\t\t\tthis.getSearchTerm = function() {\n\t\t\t\treturn sSearchTerm;\n\t\t\t};\n\n\t\t\tthis.applyTableOperations = function() {\n\t\t\t\t// Here the binding of the table items is updated with the currently active sorters and filters.\n\t\t\t\t// It is assumed that all changes done by the user are immediately reflected in the table.\n\t\t\t\t// That means there is always just one change at a time.\n\t\t\t\tvar aActiveSorters = [],\n\t\t\t\t\taActiveFilters = [],\n\t\t\t\t\toTableBinding = oTable.getBinding(\"items\");\n\n\t\t\t\tif (oTableBinding) {\n\t\t\t\t\tif (bGroupingChanged || bSortChanged) {\n\t\t\t\t\t\t// The grouping or sorting of the table has changed. The sorting on the binding needs to be updated.\n\t\t\t\t\t\t// Note that the sorter of the grouping has to be the first one in the list of sorters that is added\n\t\t\t\t\t\t// to the binding\n\t\t\t\t\t\tif (oGrouper) {\n\t\t\t\t\t\t\taActiveSorters.push(oGrouper);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (aSortList.length > 0) {\n\t\t\t\t\t\t\taActiveSorters = aActiveSorters.concat(aSortList);\n\t\t\t\t\t\t}\n\t\t\t\t\t\toTableBinding.sort(aActiveSorters);\n\t\t\t\t\t}\n\t\t\t\t\tif (bSearchChanged || bFilterChanged) {\n\t\t\t\t\t\t//the filters that origin from entries in a sarch field and the ones that are set e.g. by a\n\t\t\t\t\t\t// filter bar need to be applied together.\n\t\t\t\t\t\t// Note that if the search is done in more than one column then the corresponding filters have\n\t\t\t\t\t\t// to be connected using \"or\". All other filters are connected using \"and\" logic.\n\n\t\t\t\t\t\tif (aSearchFilter.length > 0) {\n\t\t\t\t\t\t\taActiveFilters.push(new Filter(aSearchFilter, false));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (aFilterList.length > 0) {\n\t\t\t\t\t\t\taActiveFilters.push(new Filter(aFilterList, true));\n\t\t\t\t\t\t}\n\t\t\t\t\t\toTableBinding.filter(aActiveFilters.length > 0 && new Filter(aActiveFilters, true));\n\t\t\t\t\t}\n\t\t\t\t\tthis._resetChangeIndicators();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/control/RatingAndCount-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/core/Control\",\n\t\"sap/m/RatingIndicator\",\n\t\"sap/m/Label\"\n], function(Control, RatingIndicator, Label) {\n\t\"use strict\";\n\n\treturn Control.extend(\"nw.epm.refapps.ext.prod.manage.control.RatingAndCount\", {\n\n\t\t// The rating indicator and the rating count are combined in one control in order to be able to put\n\t\t// them in one table column instead of having to let them occupy one column each.\n\n\t\t// API:\n\t\tmetadata: {\n\t\t\tproperties: {\n\t\t\t\t\"maxRatingValue\": \"int\",\n\t\t\t\t\"value\": \"float\",\n\t\t\t\t\"enabled\": \"boolean\",\n\t\t\t\t\"iconSize\": \"sap.ui.core.CSSSize\",\n\t\t\t\t\"ratingCount\": \"float\",\n\t\t\t\t\"verticalAlignContent\": \"boolean\",\n\t\t\t\t\"verticalAdjustment\": \"int\"\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\t\"press\": {}\n\t\t\t},\n\t\t\taggregations: {\n\t\t\t\t\"_ratingCountLabel\": {\n\t\t\t\t\ttype: \"sap.m.Label\",\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tvisibility: \"hidden\"\n\t\t\t\t},\n\t\t\t\t\"_ratingIndicator\": {\n\t\t\t\t\ttype: \"sap.m.RatingIndicator\",\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tvisibility: \"hidden\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tinit: function() {\n\t\t\tthis._oRating = new RatingIndicator(this.getId() + \"-rating\");\n\t\t\tthis._oRating.setEnabled(false);\n\t\t\tthis.setAggregation(\"_ratingIndicator\", this._oRating, true);\n\t\t\tthis._oRatingCountLabel = new Label(this.getId() + \"-ratingCountLabel\");\n\t\t\tthis._oRatingCountLabel.addStyleClass(\"noColonLabelInForm\");\n\t\t\tthis.setAggregation(\"_ratingCountLabel\", this._oRatingCountLabel, true);\n\t\t},\n\n\t\t// Overwriting the setter method is done in order to hand down the values to the\n\t\t// inner control in this. The setter method is used by the binding to update the\n\t\t// controls value.\n\t\tsetValue: function(sValue) {\n\t\t\tvar fvalue = parseFloat(sValue);\n\t\t\tthis._oRating.setValue(fvalue);\n\t\t\treturn this.setProperty(\"value\", fvalue, true);\n\t\t},\n\n\t\t// Overwriting the setter method is done in order to hand down the values to the\n\t\t// inner control in this. The setter method is used by the binding to update the\n\t\t// controls value.\n\t\tsetMaxRatingValue: function(sMaxRatingValue) {\n\t\t\tthis._oRating.setMaxValue(sMaxRatingValue);\n\t\t\treturn this.setProperty(\"maxRatingValue\", sMaxRatingValue, true);\n\t\t},\n\n\t\t// Overwriting the setter method is done in order to hand down the values to the\n\t\t// inner control in this. The setter method is used by the binding to update the\n\t\t// controls value.\n\t\tsetIconSize: function(sIconSize) {\n\t\t\tthis._oRating.setIconSize(sIconSize);\n\t\t\treturn this.setProperty(\"iconSize\", sIconSize, true);\n\t\t},\n\n\t\t// Overwriting the setter method is done in order to hand down the values to the\n\t\t// inner control. The setter method is used by the binding to update the\n\t\t// controls value.\n\t\t// Note that in this case potentially two controls may be affected.\n\t\tsetRatingCount: function(sRatingCount) {\n\t\t\tif (sRatingCount === undefined || sRatingCount === null) {\n\t\t\t\tsRatingCount = 0;\n\t\t\t}\n\t\t\tthis._oRatingCountLabel.setVisible(sRatingCount !== null); // supress display of string null\n\t\t\tthis._oRatingCountLabel.setText(\"(\" + sRatingCount + \")\");\n\t\t\treturn this.setProperty(\"ratingCount\", sRatingCount, true);\n\t\t},\n\n\t\trenderer: function(oRm, oControl) {\n\t\t\tvar oRatingCount = oControl.getAggregation(\"_ratingCountLabel\");\n\t\t\tif (oControl.getVerticalAdjustment() && oControl.getVerticalAdjustment() !== 0) {\n\t\t\t\toRm.addStyle(\"-ms-transform\", \"translateY(\" + oControl.getVerticalAdjustment() + \"%)\");\n\t\t\t\toRm.addStyle(\"-webkit-transform\", \"translateY(\" + oControl.getVerticalAdjustment() + \"%)\");\n\t\t\t\toRm.addStyle(\"transform\", \"translateY(\" + oControl.getVerticalAdjustment() + \"%)\");\n\t\t\t}\n\t\t\tif (oControl.getVerticalAlignContent()) {\n\t\t\t\toRm.addStyle(\"line-height\", oControl.getIconSize());\n\t\t\t\toRatingCount.addStyleClass(\"nwEpmRefappsExtProdManageRatingAndCountVAlign\");\n\t\t\t}\n\n\t\t\toRm.write(\"<div\");\n\t\t\toRm.writeControlData(oControl); // write the Control ID and enable event\n\t\t\t// handling\n\t\t\toRm.writeStyles();\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\toRm.renderControl(oControl.getAggregation(\"_ratingIndicator\"));\n\t\t\toRm.renderControl(oRatingCount);\n\t\t\toRm.write(\"</div>\");\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/control/RatingAndCount.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/core/Control\",\"sap/m/RatingIndicator\",\"sap/m/Label\"],function(C,R,L){\"use strict\";return C.extend(\"nw.epm.refapps.ext.prod.manage.control.RatingAndCount\",{metadata:{properties:{\"maxRatingValue\":\"int\",\"value\":\"float\",\"enabled\":\"boolean\",\"iconSize\":\"sap.ui.core.CSSSize\",\"ratingCount\":\"float\",\"verticalAlignContent\":\"boolean\",\"verticalAdjustment\":\"int\"},events:{\"press\":{}},aggregations:{\"_ratingCountLabel\":{type:\"sap.m.Label\",multiple:false,visibility:\"hidden\"},\"_ratingIndicator\":{type:\"sap.m.RatingIndicator\",multiple:false,visibility:\"hidden\"}}},init:function(){this._oRating=new R(this.getId()+\"-rating\");this._oRating.setEnabled(false);this.setAggregation(\"_ratingIndicator\",this._oRating,true);this._oRatingCountLabel=new L(this.getId()+\"-ratingCountLabel\");this._oRatingCountLabel.addStyleClass(\"noColonLabelInForm\");this.setAggregation(\"_ratingCountLabel\",this._oRatingCountLabel,true);},setValue:function(v){var f=parseFloat(v);this._oRating.setValue(f);return this.setProperty(\"value\",f,true);},setMaxRatingValue:function(m){this._oRating.setMaxValue(m);return this.setProperty(\"maxRatingValue\",m,true);},setIconSize:function(i){this._oRating.setIconSize(i);return this.setProperty(\"iconSize\",i,true);},setRatingCount:function(r){if(r===undefined||r===null){r=0;}this._oRatingCountLabel.setVisible(r!==null);this._oRatingCountLabel.setText(\"(\"+r+\")\");return this.setProperty(\"ratingCount\",r,true);},renderer:function(r,c){var o=c.getAggregation(\"_ratingCountLabel\");if(c.getVerticalAdjustment()&&c.getVerticalAdjustment()!==0){r.addStyle(\"-ms-transform\",\"translateY(\"+c.getVerticalAdjustment()+\"%)\");r.addStyle(\"-webkit-transform\",\"translateY(\"+c.getVerticalAdjustment()+\"%)\");r.addStyle(\"transform\",\"translateY(\"+c.getVerticalAdjustment()+\"%)\");}if(c.getVerticalAlignContent()){r.addStyle(\"line-height\",c.getIconSize());o.addStyleClass(\"nwEpmRefappsExtProdManageRatingAndCountVAlign\");}r.write(\"<div\");r.writeControlData(c);r.writeStyles();r.writeClasses();r.write(\">\");r.renderControl(c.getAggregation(\"_ratingIndicator\"));r.renderControl(o);r.write(\"</div>\");}});});",
		"nw/epm/refapps/ext/prod/manage/model/models-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/odata/v2/ODataModel\",\n\t\"sap/ui/model/resource/ResourceModel\"\n], function(JSONModel, Device, ODataModel, ResourceModel) {\n\t\"use strict\";\n\n\tfunction extendMetadataUrlParameters(aUrlParametersToAdd, oMetadataUrlParams, sServiceUrl) {\n\t\tvar oExtensionObject = {},\n\t\t\toServiceUri = new URI(sServiceUrl);\n\n\t\taUrlParametersToAdd.forEach(function(sUrlParam) {\n\t\t\tvar oUrlParameters,\n\t\t\t\tsParameterValue;\n\n\t\t\tif (sUrlParam === \"sap-language\") {\n\t\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\");\n\t\t\t\tif (fnGetuser) {\n\t\t\t\t\t// for sap-language we check if the launchpad can provide it.\n\t\t\t\t\toMetadataUrlParams[\"sap-language\"] = fnGetuser().getLanguage();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toUrlParameters = jQuery.sap.getUriParameters();\n\t\t\t\tsParameterValue = oUrlParameters.get(sUrlParam);\n\t\t\t\tif (sParameterValue) {\n\t\t\t\t\toMetadataUrlParams[sUrlParam] = sParameterValue;\n\t\t\t\t\toServiceUri.addSearch(sUrlParam, sParameterValue);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tjQuery.extend(oMetadataUrlParams, oExtensionObject);\n\t\treturn oServiceUri.toString();\n\t}\n\n\treturn {\n\t\t/**\n\t\t *\n\t\t * @param oOptions {object} a map which contains the following parameter properties\n\t\t * @param oOptions.url {string} see {@link sap.ui.model.odata.v2.ODataModel#constructor.sServiceUrl}.\n\t\t * @param [oOptions.urlParametersForEveryRequest] {object} If the parameter is present in the URL or in case of language the UShell can provide it,\n\t\t * it is added to the odata models metadataUrlParams {@link sap.ui.model.odata.v2.ODataModel#constructor.mParameters.metadataUrlParams}, and to the service url.\n\t\t * If you provided a value in the config.metadataUrlParams this value will be overwritten by the value in the url.\n\t\t *\n\t\t * Example: the app is started with the url query, and the user has an us language set in the launchpad:\n\t\t *\n\t\t * ?sap-server=serverValue&sap-host=hostValue\n\t\t *\n\t\t * The createODataModel looks like this.\n\t\t *\n\t\t * models.createODataModel({\n\t\t *     urlParametersToPassOn: [\n\t\t *         \"sap-server\",\n\t\t *         \"sap-language\",\n\t\t *         \"anotherValue\"\n\t\t *     ],\n\t\t *     url : \"my/Url\"\n\t\t * });\n\t\t *\n\t\t * then the config will have the following metadataUrlParams:\n\t\t *\n\t\t * metadataUrlParams: {\n\t\t *     // retrieved from the url\n\t\t *     \"sap-server\" : \"serverValue\"\n\t\t *     // language is added from the launchpad\n\t\t *     \"sap-language\" : \"us\"\n\t\t *     // anotherValue is not present in the url and will not be added\n\t\t * }\n\t\t *\n\t\t * @param [oOptions.config] {object} see {@link sap.ui.model.odata.v2.ODataModel#constructor.mParameters} it is the exact same object, the metadataUrlParams are enrichted by the oOptions.urlParametersToPassOn\n\t\t * @returns {sap.ui.model.odata.v2.ODataModel}\n\t\t */\n\t\tcreateODataModel: function(oOptions) {\n\t\t\tvar aUrlParametersForEveryRequest,\n\t\t\t\toConfig,\n\t\t\t\tsUrl;\n\n\t\t\toOptions = oOptions || {};\n\n\t\t\tif (!oOptions.url) {\n\t\t\t\tjQuery.sap.log.error(\"Please provide a url when you want to create an ODataModel\",\n\t\t\t\t\t\"nw/epm/refapps/ext/prod/manage.model.models.createODataModel\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// create a copied instance since we modify the config\n\t\t\toConfig = jQuery.extend(true, {}, oOptions.config);\n\n\t\t\taUrlParametersForEveryRequest = oOptions.urlParametersForEveryRequest || [];\n\t\t\toConfig.metadataUrlParams = oConfig.metadataUrlParams || {};\n\n\t\t\tsUrl = extendMetadataUrlParameters(aUrlParametersForEveryRequest, oConfig.metadataUrlParams, oOptions.url);\n\n\t\t\treturn this._createODataModel(sUrl, oConfig);\n\t\t},\n\n\t\t_createODataModel: function(sUrl, oConfig) {\n\t\t\treturn new ODataModel(sUrl, oConfig);\n\t\t},\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t},\n\n\t\tcreateResourceModel: function(sRootPath, resourceBundle) {\n\t\t\tthis._resourceModel = new ResourceModel({\n\t\t\t\tbundleUrl: [sRootPath, resourceBundle].join(\"/\")\n\t\t\t});\n\t\t\treturn this._resourceModel;\n\t\t}\n\t};\n});",
		"nw/epm/refapps/ext/prod/manage/model/RemoveService-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\n// Helper class for nw.epm.refapps.products.manage.model.Products. It provides generic handling when the UI5 OData\n// DELETE service is called. The public functions in this class should give business semantics for the application (such\n// as DELETE product(s), DELETE product draft, DELETE product image, with or without user confirmation). Currently the\n// Products class uses this class by creating a transient instance on demand in order to execute exactly one (public)\n// method of this class. However, this class is agnostic about this pattern. Note that instances of this class are\n// created on demand (that is, immediately before the required public method of this class is executed) and garbage\n// collected.\n//\n// Note that the entities to be deleted are always specified by paths (strings) in the OData model. For convenience,\n// this class is tolerant on whether the path starts with \"/\" or not. See function fnGetPathWithSlash.\nsap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/MessageBox\",\n\t\"sap/m/MessageToast\",\n\t\"nw/epm/refapps/ext/prod/manage/controller/utilities\"\n], function(Object, MessageBox, MessageToast, utilities) {\n\t\"use strict\";\n\n\t// Normalization of OData-paths (puts a \"/\" in front of the path if it is not already there)\n\tfunction fnGetPathWithSlash(sPath) {\n\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\n\t}\n\n\treturn Object.extend(\"nw.epm.refapps.ext.prod.manage.model.RemoveService\", {\n\t\t// The following arguments are required for all public methods of this class, therefore they are modeled as instance\n\t\t// variables that must be provided in the constructor.\n\t\t// _oODataModel: Data model in which the Delete service is to be executed\n\t\t// _oResourceBundle: Application resource bundle (i18n) for showing texts used in the confirmation dialog\n\t\t// _fnShowErrorMessage: Generic error handling if the OData Delete call is unsuccessful\n\t\t/* eslint-disable */ // using more then 4 parameters for a function is justified here\n\t\tconstructor: function(oODataModel, oResourceBundle, oApplicationProperties, fnShowErrorMessage, fnDeleteListener, bBusy) {\n\t\t\t/* eslint-enable */\n\t\t\tthis._oODataModel = oODataModel;\n\t\t\tthis._oResourceBundle = oResourceBundle;\n\t\t\tthis._oApplicationProperties = oApplicationProperties;\n\t\t\tthis._oApplicationController = this._oApplicationProperties.getProperty(\"/applicationController\");\n\t\t\tthis._fnShowErrorMessage = fnShowErrorMessage;\n\t\t\tthis._fnDeleteListener = fnDeleteListener;\n\t\t\tthis._bBusy = bBusy;\n\t\t},\n\n\t\t// Deletes multiple products - First, the user is asked to confirm the deletion. If he/she does, the products are\n\t\t// deleted. Otherwise, nothing happens.\n\t\t// aProductPaths - Array of strings representing the context paths to each product to be deleted. Note that the data\n\t\t// for these products must already be loaded into the oData model (this._oODataModel).\n\t\t// fnAfterDeleted - Function that is to be called if the deletion is successful. Note that there\n\t\t// is no callback for the case that no deletion takes place (be it because the user cancelled the deletion, be it\n\t\t// because an error occurred, be it because aProductPaths is empty). fnAfterDeleted can contain a single Boolean\n\t\t// parameter. This parameter is set to true if all specified products have been deleted successfully. The parameter\n\t\t// is set to false if the mass deletion operation returned the information that at least one delete operation\n\t\t// was unsuccessful.\n\t\tdeleteProducts: function(aProductPaths, fnAfterDeleted) {\n\t\t\tif (aProductPaths.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar sQuestion, sSuccessMessage; // The question that is presented to the user in the confirmation dialog\n\t\t\tif (aProductPaths.length === 1) {\n\t\t\t\tvar sProductName = this._oODataModel.getProperty(fnGetPathWithSlash(aProductPaths[0]) + \"/Name\");\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"ymsg.deleteText\", sProductName);\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"ymsg.deleteSuccess\", sProductName);\n\t\t\t} else {\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"ymsg.deleteProducts\", aProductPaths.length);\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"ymsg.deleteMultipleSuccess\", aProductPaths.length);\n\t\t\t}\n\t\t\tvar fnMyAfterDeleted = function(bTotalSuccess) {\n\t\t\t\tif (bTotalSuccess) {\n\t\t\t\t\tMessageToast.show(sSuccessMessage);\n\t\t\t\t}\n\t\t\t\tif (fnAfterDeleted) {\n\t\t\t\t\tfnAfterDeleted(bTotalSuccess);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._confirmDeletionByUser({\n\t\t\t\tbDraft: false,\n\t\t\t\tquestion: sQuestion\n\t\t\t}, aProductPaths, fnMyAfterDeleted);\n\t\t},\n\n\t\t// Convenience method for deleting exactly one product. For more information, see method deleteProducts. Note that\n\t\t// fnAfterDeleted is always called with the parameter value true (if it is called at all).\n\t\tdeleteProduct: function(sPath) {\n\t\t\tthis.deleteProducts([sPath]);\n\t\t},\n\n\t\t// Deletes one product draft (with confirmation dialog). Parameter sPath is the same as in method deleteEntityWithoutConfirmationDialog.\n\t\t// Parameters fnDeleteConfirmed and fnDeleteCanceled are like in method _confirmDeletionByUser.\n\t\tdeleteProductDraft: function(sPath, fnDeleteConfirmed, fnDeleteCanceled) {\n\t\t\tvar sQuestion = this._oResourceBundle.getText(\"ymsg.warningConfirm\");\n\t\t\t// Confirmation dialog needs to have the title \"Warning\" instead of Delete\n\t\t\tvar sTitle = this._oResourceBundle.getText(\"xtit.warning\");\n\t\t\t// Product draft is deleted once the user confirms the deletion\n\t\t\tvar fnConfirmed = function(oPromise) {\n\t\t\t\tif (fnDeleteConfirmed) {\n\t\t\t\t\tfnDeleteConfirmed(oPromise);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._confirmDeletionByUser({\n\t\t\t\tbDraft: true,\n\t\t\t\ttitle: sTitle,\n\t\t\t\tquestion: sQuestion,\n\t\t\t\ticon: MessageBox.Icon.WARNING\n\t\t\t}, [sPath], null, fnDeleteCanceled, fnConfirmed);\n\t\t},\n\n\t\t// Deletes an entity (such as a product, product draft, or image draft) without sending a confirmation dialog.\n\t\t// The parameters are identical to method deleteProducts.\n\t\t// Returns a Promise which is fulfilled, as soon as the operation was ended successfully.\n\t\tdeleteEntityWithoutConfirmationDialog: function(sPath, fnAfterDeleted) {\n\t\t\treturn this._callDeleteService([sPath], fnAfterDeleted);\n\t\t},\n\n\t\t// Opens a dialog letting the user either confirm or cancel the deletion of a list of entities. If the user\n\t\t// confirms, all the entities are deleted.\n\t\t// oConfirmation - Configuration of the confirmation dialog. Possesses up to two attributes:\n\t\t// (i) question (obligatory) is a string providing the statement presented to the user\n\t\t// (ii) title (optional) may be a string defining the title of the popup.\n\t\t// The default title is 'Delete'.\n\t\t// aPaths - Array of strings representing the context paths to the entities to be deleted. Note that it is currently\n\t\t// assumed that the specified entities are all products if there is more than one entity.\n\t\t// fnAfterDeleted (optional) - works as in method deleteProducts\n\t\t// fnDeleteCanceled (optional) - called when the user decides not to perform the deletion\n\t\t// fnDeleteConfirmed (optional) - called when the user decides to perform the deletion. A Promise will be passed\n\t\t// to this function which will be resolved as soon as the deletion was performed in the backend.\n\t\t/* eslint-disable */ // using more then 4 parameters for a function is justified here\n\t\t_confirmDeletionByUser: function(oConfirmation, aPaths, fnAfterDeleted, fnDeleteCanceled, fnDeleteConfirmed) {\n\t\t\t/* eslint-enable */\n\t\t\t// Callback function for when the user decides to perform the deletion\n\t\t\tvar fnDelete = function() {\n\t\t\t\t// Calls the oData Delete service\n\t\t\t\tvar oPromise = this._callDeleteService(aPaths, fnAfterDeleted);\n\t\t\t\tif (fnDeleteConfirmed) {\n\t\t\t\t\tfnDeleteConfirmed(oPromise);\n\t\t\t\t}\n\t\t\t}.bind(this);\n\n\t\t\t// Opens the confirmation dialog\n\t\t\tvar sLeavePage = this._oResourceBundle.getText(\"xbut.leavePage\");\n\t\t\tvar sAction = (oConfirmation.bDraft) ? sLeavePage : MessageBox.Action.OK;\n\t\t\tMessageBox.show(oConfirmation.question, {\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.WARNING,\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"xtit.delete\"),\n\t\t\t\tactions: [sAction, MessageBox.Action.CANCEL],\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === sAction) {\n\t\t\t\t\t\tfnDelete();\n\t\t\t\t\t} else if (fnDeleteCanceled) {\n\t\t\t\t\t\tfnDeleteCanceled();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstyleClass: utilities.getContentDensityClass()\n\t\t\t});\n\t\t},\n\n\t\t// Performs the deletion of a list of entities. For more information about the parameters, see method\n\t\t// _confirmDeletionByUser.\n\t\t// Returns a Promise that will be resolved as soon as the deletion process ended successfully.\n\t\t_callDeleteService: function(aPaths, fnAfterDeleted) {\n\t\t\tif (this._bBusy) {\n\t\t\t\tthis._oApplicationProperties.setProperty(\"/isBusyDeleting\", true);\n\t\t\t}\n\t\t\tif (this._fnDeleteListener) {\n\t\t\t\tthis._fnDeleteListener(true, aPaths);\n\t\t\t}\n\t\t\t// Creates an error handler and a success handler. Both of them release the busy dialog and forward to the\n\t\t\t// appropriate handlers.\n\t\t\tvar fnFailed = function(oError) {\n\t\t\t\tjQuery.sap.log.error(\"EPM Refapp Products\", \"Failed to delete product while calling backend service\");\n\t\t\t\t// Calls the error message handler\n\t\t\t\tthis._fnShowErrorMessage(oError);\n\t\t\t}.bind(this);\n\t\t\t// Note that for the success handler, there are two slightly different cases (batch versus direct call of the\n\t\t\t// Delete service)\n\t\t\tvar fnSuccess = function(bSuccessful) {\n\t\t\t\tif (this._bBusy) {\n\t\t\t\t\tthis._oApplicationProperties.setProperty(\"/isBusyDeleting\", false);\n\t\t\t\t}\n\t\t\t\t// Note that parameter bSuccessful can only be expected for batch processing. If the deletion is\n\t\t\t\t// performed directly, this success handler is only called when the success was complete (because only\n\t\t\t\t// one item was to be deleted)\n\t\t\t\tvar bTotalSuccess = aPaths.length === 1 || bSuccessful;\n\t\t\t\t// Executes the callback function for successful deletion\n\t\t\t\tif (fnAfterDeleted) {\n\t\t\t\t\t// Note that parameter bSuccessful can only be expected for batch processing. If the deletion is\n\t\t\t\t\t// performed directly, this success handler is only called when the success was complete (because only\n\t\t\t\t\t// one item was to be deleted).\n\t\t\t\t\tfnAfterDeleted(bTotalSuccess);\n\t\t\t\t}\n\t\t\t\tif (this._fnDeleteListener) {\n\t\t\t\t\tthis._fnDeleteListener(false, aPaths, bTotalSuccess);\n\t\t\t\t}\n\t\t\t}.bind(this);\n\t\t\t// Calls the remote Delete service if exactly one entity has been specified, otherwise try the\n\t\t\t// batch deletion\n\t\t\treturn aPaths.length === 1 ? this._deleteOneEntity(aPaths[0], fnSuccess, fnFailed) : this._deleteProducts(aPaths, fnSuccess, fnFailed);\n\t\t},\n\n\t\t// Deletes one entity (such as a product, product draft, or image draft) specified by sPath. Then calls the\n\t\t// specified success or error handler.\n\t\t// Returns a Promise that is resolved when the operation was successful. \n\t\t_deleteOneEntity: function(sPath, fnSuccess, fnFailed) {\n\t\t\tvar oPromise = new Promise(function(fnResolve, fnReject) {\n\t\t\t\tthis._oODataModel.remove(fnGetPathWithSlash(sPath), {\n\t\t\t\t\tsuccess: fnResolve,\n\t\t\t\t\terror: fnReject,\n\t\t\t\t\tasync: true\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t\toPromise.then(fnSuccess, fnFailed);\n\t\t\treturn oPromise;\n\t\t},\n\n\t\t// Deletes products specified by a list of paths using batch processing. Calls the corresponding handlers depending\n\t\t// on success or error.\n\t\t// Returns a Promise that is resolved when the operation was successful.\n\t\t// Note that success handler fnAfterDeleted still contains parameter bSuccess to specify whether all specified\n\t\t// entities were able to be deleted successfully or not.\n\t\t_deleteProducts: function(aPaths, fnAfterDeleted, fnFailed) {\n\t\t\tvar sDeferredBatchGroupId = \"BatchDelete\",\n\t\t\t\tiNotDeleted = 0,\n\t\t\t\tfnSingleRemoveFailed = function() {\n\t\t\t\t\tiNotDeleted++;\n\t\t\t\t},\n\t\t\t\tfnSuccess = function() {\n\t\t\t\t\tif (iNotDeleted) {\n\t\t\t\t\t\t// A message box appears to inform the user that not all items were deleted.\n\t\t\t\t\t\tthis._showMessageForPartiallyFailedDeletes(iNotDeleted);\n\t\t\t\t\t}\n\t\t\t\t\tfnAfterDeleted(!iNotDeleted);\n\t\t\t\t}.bind(this),\n\t\t\t\toPromise = new Promise(function(fnResolve, fnReject) {\n\t\t\t\t\tfor (var i = 0; i < aPaths.length; i++) {\n\t\t\t\t\t\tthis._oODataModel.remove(fnGetPathWithSlash(aPaths[i]), {\n\t\t\t\t\t\t\terror: fnSingleRemoveFailed,\n\t\t\t\t\t\t\tbatchGroupId: sDeferredBatchGroupId,\n\t\t\t\t\t\t\tchangeSetId: i.toString()\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis._oODataModel.submitChanges({\n\t\t\t\t\t\tbatchGroupId: sDeferredBatchGroupId,\n\t\t\t\t\t\tsuccess: fnResolve,\n\t\t\t\t\t\terror: fnReject\n\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\t\t\toPromise.then(fnSuccess, fnFailed);\n\t\t\treturn oPromise;\n\t\t},\n\n\t\t// Shows error message for the partially-unsuccessful removals\n\t\t_showMessageForPartiallyFailedDeletes: function(iFailedRemoves) {\n\t\t\tMessageBox.show(this._oResourceBundle.getText(\"ymsg.deleteNProductsFailed\", iFailedRemoves), {\n\t\t\t\ticon: MessageBox.Icon.ERROR,\n\t\t\t\ttitle: this._oResourceBundle.getText(\"xtit.error\"),\n\t\t\t\tstyleClass: utilities.getContentDensityClass()\n\t\t\t});\n\t\t}\n\t});\n});",
		"nw/epm/refapps/ext/prod/manage/model/Products.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/base/Object\",\"sap/ui/model/json/JSONModel\",\"./RemoveService\",\"nw/epm/refapps/ext/prod/manage/controller/messages\"],function(O,J,R,m){\"use strict\";return O.extend(\"nw.epm.refapps.ext.prod.manage.model.Products\",{constructor:function(c,M){this._oResourceBundle=c.getModel(\"i18n\").getResourceBundle();this._oODataModel=c.getModel();this._oApplicationProperties=c.getModel(\"appProperties\");this._oApplicationController=this._oApplicationProperties.getProperty(\"/applicationController\");this._fnDeleteListener=this._oApplicationController.deleteListener.bind(this._oApplicationController);this._oMainView=M;this._oWhenNoDraft=new Promise(function(r){r();});this._fnSetBackBusyDraftState=this._oApplicationProperties.setProperty.bind(this._oApplicationProperties,\"/isBusyCreatingDraft\",false);},getPathForProductId:function(p){return this._oODataModel.createKey(\"/Products\",{Id:p});},getPathForDraftId:function(d){return this._oODataModel.createKey(\"/ProductDrafts\",{Id:d});},deleteProducts:function(p,a){var d=this._getDeleteHelper(true,true);d.deleteProducts(p,a);},deleteProduct:function(p,a,w){var d=this._getDeleteHelper(true,true);if(w){d.deleteEntityWithoutConfirmationDialog(p,a,true);}else{d.deleteProduct(p,a);}},deleteProductDraft:function(p,a,d){var D=this._getDeleteHelper(false,false);if(this._oApplicationProperties.getProperty(\"/isDirty\")){var f=function(P){this._setWhenNoDraft(P);if(a){a();}}.bind(this);D.deleteProductDraft(p,f,d);}else{this._setWhenNoDraft(D.deleteEntityWithoutConfirmationDialog(p,null,false));if(a){a();}}},_setWhenNoDraft:function(p){this._oWhenNoDraft=p;p.catch(this._oApplicationProperties.setProperty.bind(this._oApplicationProperties,\"/lostDraftReadState\",-1));},deleteImageDraft:function(p,a){var d=this._getDeleteHelper(false,true);d.deleteEntityWithoutConfirmationDialog(p,a,false);},createProductDraft:function(p){this._oApplicationProperties.setProperty(\"/isBusyCreatingDraft\",true);var c=function(){var n={ProductId:\"\"};this._oODataModel.create(\"/ProductDrafts\",n,{success:p,error:this._getErrorForProcessing(\"isBusyCreatingDraft\")});}.bind(this);this._oWhenNoDraft.then(c,this._fnSetBackBusyDraftState);},readProductDraft:function(h,e){var s=function(r){var p=r.results[0];var d=p&&p.Id;h(d,p);};this._oODataModel.read(\"/ProductDrafts\",{success:s,error:e});},deleteDraft:function(d,a){this._oApplicationProperties.setProperty(\"/isDirty\",false);var p=this._oODataModel.createKey(\"ProductDrafts\",{Id:d});this.deleteProductDraft(p,a,null);},copyProductToDraft:function(p,n){this._callFunctionAndNavToProductDraft(\"/CopyProduct\",p,n);},getProductDraftFromProductId:function(p,n){this._callFunctionAndNavToProductDraft(\"/EditProduct\",p,n);},_callFunctionAndNavToProductDraft:function(f,p,n){this._oApplicationProperties.setProperty(\"/isBusyCreatingDraft\",true);var c=function(){this._callFunctionImport(f,{ProductId:p},function(r){if(r&&r.Id){n(r.Id);}},\"isBusyCreatingDraft\");}.bind(this);this._oWhenNoDraft.then(c,this._fnSetBackBusyDraftState);},_callFunctionImport:function(f,u,a,p){this._oODataModel.callFunction(f,{method:\"POST\",urlParameters:u,success:a,error:this._getErrorForProcessing(p)});},activateProduct:function(d,a){this._oApplicationProperties.setProperty(\"/isBusySaving\",true);var r=function(){this._oApplicationProperties.setProperty(\"/isBusySaving\",false);}.bind(this);this.oDraftToActivate={sDraftId:this._oApplicationProperties.getProperty(\"/productId\"),fnAfterActivation:a};this._submitChanges(r,d);},saveProductDraft:function(a){this._submitChanges(null,a);},_submitChanges:function(s,a){if(this._bIsChanging){return;}if(this._oODataModel.hasPendingChanges()){this._sMessage=null;var S=function(r){this._bIsChanging=false;if(!this._oODataModel.hasPendingChanges()||!this._sMessage){var i;for(i=0;i<r.__batchResponses.length&&!this._sMessage;i++){var e=r.__batchResponses[i];if(e.response){this._sMessage=m.extractErrorMessageFromDetails(e.response.body);}}}if(this._sMessage){a(this._sMessage);}else{this._submitChanges(s,a);}}.bind(this);this._bIsChanging=true;var p={success:S,error:s,batchGroupId:\"editproduct\"};this._oODataModel.submitChanges(p);}else if(this.oDraftToActivate){if(this._sMessage){this._oApplicationProperties.setProperty(\"/isBusySaving\",false);}else{this._callFunctionImport(\"/ActivateProduct\",{ProductDraftId:this.oDraftToActivate.sDraftId},this.oDraftToActivate.fnAfterActivation,\"isBusySaving\");}this.oDraftToActivate=null;}},saveSelectProductDraft:function(){this._oODataModel.submitChanges(null,this.onSubmitDraftErrorSelect);},onSubmitDraftErrorSelect:function(e){m.showErrorMessage(e,this._oMainView);},_getErrorForProcessing:function(p){return function(e){this._oApplicationProperties.setProperty(\"/\"+p,false);m.showErrorMessage(e,this._oMainView);}.bind(this);},_getDeleteHelper:function(c,w){return new R(this._oODataModel,this._oResourceBundle,this._oApplicationProperties,this._getErrorForProcessing(\"isBusyDeleting\"),c&&this._fnDeleteListener,w);}});});",
		"nw/epm/refapps/ext/prod/manage/model/formatter.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\"sap/ui/core/format/NumberFormat\",\"sap/ui/core/format/DateFormat\"],function(N,D){\"use strict\";function g(c){var A=c.getView().getModel(\"appProperties\");return A.getProperty(\"/serviceUrl\");}var a=N.getCurrencyInstance();return{formatAvailabilityText:function(A){if(A===null){return\"\";}var k=A<1?\"xfld.outstock\":(A<10?\"xfld.restricted10\":\"xfld.instock\"),b=this.getView().getModel(\"i18n\").getResourceBundle();return b.getText(k);},formatMeasure:function(m,u){if(m===null){return\"\";}var b=this.getView().getModel(\"i18n\").getResourceBundle();return b.getText(\"xfld.formatMeasure\",[m,u]);},formatImageURL:function(i){var p=\"\";if(i&&typeof i===\"string\"){p=g(this)+this.getView().getModel().createKey(\"/ImageDrafts\",{Id:i})+\"/$value\";}return p;},getImageUploadURL:function(d){var u=\"\";if(d&&typeof d===\"string\"){u=g(this)+this.getView().getModel().createKey(\"/ProductDrafts\",{Id:d})+\"/Images\";}return u;},formatEditTitle:function(i){if(i!==!!i){return\"\";}var b=this.getView().getModel(\"i18n\").getResourceBundle();return b.getText(i?\"xtit.productNew\":\"xtit.productEdit\");},lostDraftQuestion:function(p){var d=D.getDateTimeInstance({style:\"short\"}),s=d.format(p.CreatedAt),b=this.oResourceBundle;return p.IsNewProduct?b.getText(\"ymsg.editNewDraft\",[s]):b.getText(\"ymsg.editDraft\",[p.Name,s]);},appDataForTile:function(n){return{title:n};},formatAmount:function(A){if(!A){return\"\";}return a.format(A);}};});",
		"nw/epm/refapps/ext/prod/manage/model/formatter-dbg.js": "/*\n * Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n */\nsap.ui.define([\n\t\"sap/ui/core/format/NumberFormat\",\n\t\"sap/ui/core/format/DateFormat\"\n], function(NumberFormat, DateFormat) {\n\t\"use strict\";\n\n\tfunction fnGetServiceUrl(oController) {\n\t\tvar oApplicationProperties = oController.getView().getModel(\"appProperties\");\n\t\treturn oApplicationProperties.getProperty(\"/serviceUrl\");\n\t}\n\n\tvar oAmountFormatter = NumberFormat.getCurrencyInstance();\n\n\treturn {\n\t\tformatAvailabilityText: function(iAvailability) {\n\t\t\tif (iAvailability === null) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tvar sKey = iAvailability < 1 ? \"xfld.outstock\" : (iAvailability < 10 ? \"xfld.restricted10\" : \"xfld.instock\"),\n\t\t\t\toBundle = this.getView().getModel(\"i18n\").getResourceBundle();\n\t\t\treturn oBundle.getText(sKey);\n\t\t},\n\n\t\t/**\n\t\t * Formatter for Measures - Returns concatenated string with Measure and Unit\n\t\t *\n\t\t * @param {float}\n\t\t *            fMeasure A measure\n\t\t * @param {string}\n\t\t *            sUnit A unit\n\t\t * @returns {string} A combined textual representation of measure and unit\n\t\t * @public\n\t\t */\n\t\tformatMeasure: function(fMeasure, sUnit) {\n\t\t\tif (fMeasure === null) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tvar oBundle = this.getView().getModel(\"i18n\").getResourceBundle();\n\t\t\treturn oBundle.getText(\"xfld.formatMeasure\", [fMeasure, sUnit]);\n\t\t},\n\n\t\t// Forms the image URL for the image GUID specified.\n\t\t// sDraftId -- Product draft ID that the new image is uploaded to.\n\t\t// Returns the relative path of the image URL.\n\t\tformatImageURL: function(sId) {\n\t\t\tvar sPath = \"\";\n\t\t\tif (sId && typeof sId === \"string\") {\n\t\t\t\tsPath = fnGetServiceUrl(this) + this.getView().getModel().createKey(\"/ImageDrafts\", {\n\t\t\t\t\tId: sId\n\t\t\t\t}) + \"/$value\";\n\t\t\t}\n\t\t\treturn sPath;\n\t\t},\n\n\t\t// Gets the image upload URL for the product draft specified.\n\t\t// sDraftId -- Product draft ID that the new image is uploaded to.\n\t\t// Returns the relative path of the image upload path for the product draft specified.\n\t\tgetImageUploadURL: function(sDraftId) {\n\t\t\tvar sUploadPath = \"\";\n\t\t\tif (sDraftId && typeof sDraftId === \"string\") {\n\t\t\t\t// sUploadPath = fnGetServiceUrl(this) + \"/ProductDrafts('\" + sDraftId + \"')/Images\";\n\t\t\t\tsUploadPath = fnGetServiceUrl(this) + this.getView().getModel().createKey(\"/ProductDrafts\", {\n\t\t\t\t\tId: sDraftId\n\t\t\t\t}) + \"/Images\";\n\t\t\t}\n\t\t\treturn sUploadPath;\n\t\t},\n\n\t\tformatEditTitle: function(bIsNewObject) {\n\t\t\tif (bIsNewObject !== !!bIsNewObject) { // check whether bIsNewObject is boolean\n\t\t\t\treturn \"\"; // do not set a title when no data are available\n\t\t\t}\n\t\t\tvar oBundle = this.getView().getModel(\"i18n\").getResourceBundle();\n\t\t\treturn oBundle.getText(bIsNewObject ? \"xtit.productNew\" : \"xtit.productEdit\");\n\t\t},\n\n\t\tlostDraftQuestion: function(oProductDraft) {\n\t\t\tvar oDateFormatter = DateFormat.getDateTimeInstance({\n\t\t\t\t\tstyle: \"short\"\n\t\t\t\t}),\n\t\t\t\tsDate = oDateFormatter.format(oProductDraft.CreatedAt),\n\t\t\t\toBundle = this.oResourceBundle;\n\t\t\t// The message presented to the user depends on whether the draft is for a new product or an already existing\n\t\t\t// product\n\t\t\treturn oProductDraft.IsNewProduct ? oBundle.getText(\"ymsg.editNewDraft\", [sDate]) :\n\t\t\t\toBundle.getText(\"ymsg.editDraft\", [oProductDraft.Name, sDate]);\n\t\t},\n\n\t\tappDataForTile: function(sName) {\n\t\t\treturn {\n\t\t\t\ttitle: sName\n\t\t\t};\n\t\t},\n\n\t\t// Formatter for amount\n\t\tformatAmount: function(fAmount) {\n\t\t\tif (!fAmount) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\treturn oAmountFormatter.format(fAmount);\n\t\t}\n\t};\n});",
		"nw/epm/refapps/ext/prod/manage/view/ProductGroupingDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n\t<ViewSettingsDialog id=\"groupingSettingsDialog\" confirm=\"onGroupingDialogConfirmed\">\r\n\t\t<groupItems>\r\n\t\t\t<ViewSettingsItem id=\"mainCategoryGroupItem\" text=\"{/#Product/MainCategoryName/@sap:label}\" key=\"MainCategoryName\" />\r\n\t\t\t<ViewSettingsItem id=\"subCategoryGroupItem\" text=\"{/#Product/SubCategoryName/@sap:label}\" key=\"SubCategoryName\" />\r\n\t\t\t<ViewSettingsItem id=\"availibilityGroupItem\"  text=\"{i18n>xfld.availability}\" key=\"StockQuantity\" />\r\n\t\t\t<ViewSettingsItem id=\"priceGroupItem\"  text=\"{/#Product/Price/@sap:label}\" key=\"Price\" />\r\n\t\t\t<!--                                                                                -->\r\n\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\r\n\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\r\n\t\t\t<!-- begin                                                                          -->\r\n\t\t\t<ViewSettingsItem id=\"avgRatingGroupItem\"  text=\"{/#Product/AverageRating/@sap:label}\" key=\"AverageRating\" />\r\n\t\t\t<!-- end                                                                            -->\r\n\t\t</groupItems>\r\n\t</ViewSettingsDialog>\r\n</core:FragmentDefinition>",
		"nw/epm/refapps/ext/prod/manage/view/ProductSortDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n\t<ViewSettingsDialog id=\"sortSettingsDialog\" confirm=\"onSortDialogConfirmed\">\r\n\t\t<sortItems>\r\n\t\t\t<ViewSettingsItem id=\"nameSortItem\" text=\"{/#Product/Name/@sap:label}\" key=\"Name\" />\r\n\t\t\t<ViewSettingsItem id=\"idSortItem\" text=\"{/#Product/Id/@sap:label}\" key=\"Id\" />\r\n\t\t\t<ViewSettingsItem id=\"priceSortItem\" text=\"{/#Product/Price/@sap:label}\" key=\"Price\" />\r\n\t\t\t<ViewSettingsItem id=\"mainCategorySortItem\" text=\"{/#Product/MainCategoryName/@sap:label}\" key=\"MainCategoryName\" />\r\n\t\t\t<ViewSettingsItem id=\"subCategorySortItem\" text=\"{/#Product/SubCategoryName/@sap:label}\" key=\"SubCategoryName\" />\r\n\t\t\t<ViewSettingsItem id=\"availabilitySortItem\" text=\"{i18n>xfld.availability}\" key=\"StockQuantity\" />\r\n\t\t\t<!--                                                                                -->\r\n\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\r\n\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\r\n\t\t\t<!-- begin                                                                          -->\r\n\t\t\t<ViewSettingsItem id=\"avgRatingSortItem\" text=\"{/#Product/AverageRating/@sap:label}\" key=\"AverageRating\" />\r\n\t\t\t<!-- end                                                                            -->\r\n\t\t</sortItems>\r\n\t</ViewSettingsDialog>\r\n</core:FragmentDefinition>",
		"nw/epm/refapps/ext/prod/manage/view/ProductDisplay.view.xml": "<!--\n\n    Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n\n-->\n<mvc:View\n\txmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:f=\"sap.ui.layout.form\" xmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:prod=\"nw.epm.refapps.ext.prod.manage.control\"\n\tcontrollerName=\"nw.epm.refapps.ext.prod.manage.controller.ProductDisplay\"\n\tbusy =\"{= !(${viewProperties>/dataLoaded} || ${appProperties>/isAppBusy} || ${appProperties>/metaDataLoadState} === -1) }\"\n\tbusyIndicatorDelay=\"{appProperties>/detailBusyIndicatorDelay}\">\n\t<Page id=\"page\" title=\"{i18n>xtit.product}\" showNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavButtonPress\">\n\t\t<content>\n\t\t\t<!-- Object Header -->\n\t\t\t<ObjectHeader\n\t\t\t\tid=\"ProductHeader\" title=\"{Name}\" icon=\"{ImageUrl}\" iconDensityAware=\"false\" numberUnit=\"{CurrencyCode}\"\n\t\t\t\tnumber=\"{path:'Price', formatter: '.formatter.formatAmount'}\" responsive=\"true\" >\n\t\t\t\t<statuses>\n\t\t\t\t\t<ObjectStatus id=\"availabilityStatus\"\n\t\t\t\t\t\ttext=\"{path: 'StockQuantity', formatter: '.formatter.formatAvailabilityText'}\"\n\t\t\t\t\t\tstate=\"{= ${StockQuantity} &lt; 1 ? 'Error' : 'Success' }\" />\n\t\t\t\t</statuses>\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute id=\"categoryAttribute\"\n\t\t\t\t\t\ttitle=\"{/#Product/MainCategoryName/@sap:label}\"\n\t\t\t\t\t\ttext=\"{MainCategoryName}\" />\n\t\t\t\t\t<ObjectAttribute id=\"subcategoryAttribute\"\n\t\t\t\t\t\ttitle=\"{/#Product/SubCategoryName/@sap:label}\"\n\t\t\t\t\t\ttext=\"{SubCategoryName}\"/>\n\t\t\t\t</attributes>\n\t\t\t</ObjectHeader>\n\t\t\t\n\t\t\t<!--Allow adding fields after the object header -->\n\t\t\t<core:ExtensionPoint name=\"extensionAfterObjectHeader\" />\n\t\t\t\n\t\t\t<!-- General Information -->\n\t\t\t<f:SimpleForm id=\"generalInformationForm\" class=\"sapUiForceWidthAuto sapUiResponsiveMargin\"\n\t\t\t\tminWidth=\"1024\" maxContainerCols=\"2\" editable=\"false\" layout=\"ResponsiveGridLayout\" labelSpanL=\"4\" labelSpanM=\"4\"\n\t\t\t\temptySpanL=\"1\" emptySpanM=\"1\" columnsL=\"7\" columnsM=\"7\" title=\"{i18n>xtit.generalInfo}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label id=\"idLabel\" text=\"{/#Product/Id/@sap:label}\" />\n\t\t\t\t\t<Text id=\"idText\" text=\"{Id}\" />\n\t\t\t\t\t<Label id=\"descriptionLabel\" text=\"{/#Product/Description/@sap:label}\" />\n\t\t\t\t\t<Text id=\"descriptionText\" text=\"{Description}\" />\n\t\t\t\t\t<Label id=\"supplierLabel\" text=\"{/#Product/SupplierName/@sap:label}\" />\n\t\t\t\t\t<Link id=\"supplierLink\" text=\"{SupplierName}\" class=\"sapUiForceWidthAuto\" press=\"onSupplierPressed\" />\n\t\t\t\t\t<Label id=\"reviewsLabel\" text=\"{i18n>xfld.reviews}\" />\n\t\t\t\t\t<!-- Call Custom Control for Rating Count -->\n\t\t\t\t\t<prod:RatingAndCount id=\"ratingValue\" maxRatingValue=\"5\"\n\t\t\t\t\tvalue=\"{AverageRating}\" enabled=\"false\"\n\t\t\t\t\ticonSize=\"0.8rem\" ratingCount=\"{RatingCount}\" verticalAdjustment=\"-15\" verticalAlignContent=\"true\" />\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t\t<!-- Technical Information -->\n\t\t\t<f:SimpleForm id=\"techicalInformationForm\" class=\"sapUiForceWidthAuto sapUiResponsiveMargin\"\n\t\t\t\tminWidth=\"1024\" maxContainerCols=\"2\" editable=\"false\" layout=\"ResponsiveGridLayout\" labelSpanL=\"4\" labelSpanM=\"4\"\n\t\t\t\temptySpanL=\"1\" emptySpanM=\"1\" columnsL=\"7\" columnsM=\"7\" title=\"{i18n>xtit.techData}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label id=\"unitLabel\" text=\"{/#Product/QuantityUnit/@sap:label}\" />\n\t\t\t\t\t<Text id=\"unitText\" text=\"{MeasureUnit}\"></Text>\n\t\t\t\t\t<Label id=\"heightLabel\" text=\"{/#Product/DimensionHeight/@sap:label}\" />\n\t\t\t\t\t<Text id=\"heightText\" text=\"{parts:[{path: 'DimensionHeight', type: 'sap.ui.model.type.Float', formatOptions: {style: 'long'}}, {path: 'DimensionUnit'}], formatter: '.formatter.formatMeasure' }\" />\n\t\t\t\t\t<Label id=\"widthLabel\" text=\"{/#Product/DimensionWidth/@sap:label}\" />\n\t\t\t\t\t<Text id=\"widthText\" text=\"{parts:[{path: 'DimensionWidth', type: 'sap.ui.model.type.Float', formatOptions: {style: 'long'}}, {path: 'DimensionUnit'}], formatter: '.formatter.formatMeasure' }\" />\n\t\t\t\t\t<Label id=\"depthLabel\" text=\"{/#Product/DimensionDepth/@sap:label}\" />\n\t\t\t\t\t<Text id=\"depthText\" text=\"{parts:[{path: 'DimensionDepth', type: 'sap.ui.model.type.Float', formatOptions: {style: 'long'}}, {path: 'DimensionUnit'}], formatter: '.formatter.formatMeasure' }\" />\n\t\t\t\t\t<Label id=\"weightLabel\" text=\"{/#Product/WeightMeasure/@sap:label}\" />\n\t\t\t\t\t<Text id=\"weightText\" text=\"{parts:[{path: 'WeightMeasure', type: 'sap.ui.model.type.Float', formatOptions: {style: 'long'}}, {path: 'WeightUnit'}], formatter: '.formatter.formatMeasure' }\" />\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t\t\t\t\n\t\t\t<!--Allow adding fields at the bottom of the display screen -->\n\t\t\t<core:ExtensionPoint name=\"extensionBottomOfScreen\"/>\n\t\t</content>\n\t\t<footer>\n\t    \t<OverflowToolbar id=\"footerToolbar\">\n\t\t\t\t<ToolbarSpacer id=\"footerBeginSpacer\"/>\n\t\t\t\t<Button  id=\"editButton\" text=\"{i18n>xbut.edit}\" enabled =\"{= !${appProperties>/isMultiSelect} &amp;&amp; ${appProperties>/lostDraftReadState} === 1 }\" press=\"onEditPressed\" type=\"Emphasized\" />\n\t\t\t\t<Button  id=\"deleteButton\" text=\"{i18n>xbut.delete}\" enabled =\"{= !${appProperties>/isMultiSelect} &amp;&amp; ${appProperties>/lostDraftReadState} === 1 }\" press=\"onDeletePressed\" />\n\t\t\t\t<Button  id=\"copyButton\" text=\"{i18n>xbut.copy}\" enabled =\"{= !${appProperties>/isMultiSelect} &amp;&amp; ${appProperties>/lostDraftReadState} === 1 }\" press=\"onCopyPressed\" />\n\t\t\t\t<Button id=\"shareButton\" icon=\"sap-icon://action\"  press=\"onSharePressed\" enabled=\"{viewProperties>/dataLoaded}\" />\n\t\t\t</OverflowToolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"nw/epm/refapps/ext/prod/manage/view/ProductDraftUploadImages.view.xml": "<!--\n\n    Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n\n-->\n<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\"\n\t\tcontrollerName=\"nw.epm.refapps.ext.prod.manage.controller.ProductDraftUploadImages\">\n\n<!-- The list of file types is not complete and needs to be adjusted according to the specific requirements -->\n\t<UploadCollection id=\"Upload_Images\" items=\"{Images}\" multiple=\"false\" class=\"sapUiForceWidthAuto sapUiResponsiveMargin\"\n\t\tuploadUrl=\"{path:'Id', formatter: '.formatter.getImageUploadURL'}\" sameFilenameAllowed=\"true\"\n\t\tuploadComplete=\"onUploadCompleted\" fileDeleted=\"onImageDelete\" change=\"onChange\" typeMissmatch=\"onFileTypeMismatch\"\n\t\tnoDataText=\"{= ${viewProperties>/dataLoaded} ? ${i18n>ymsg.noAttachments} : ' '}\"\n\t\tfileType=\"{[ 'jpg', 'jpeg', 'Png', 'bmp', 'PNG', 'JPEG' ]}\">\n\t\t<items>\n\t\t\t<UploadCollectionItem id=\"uploadCollectionItem\" contributor=\"{CreatedBy}\" \n\t\t\t\tuploadedDate=\"{path:'CreatedAt', type:'sap.ui.model.type.DateTime'}\"\n\t\t\t\tfileName=\"\" enableEdit=\"false\" enableDelete=\"{IsDeletable}\"\n\t\t\t\tthumbnailUrl = \"{path: 'Id', formatter: '.formatter.formatImageURL'}\" \n\t\t\t\turl=\"{path: 'Id', formatter: '.formatter.formatImageURL'}\"\n\t\t\t\tdocumentId = \"{Id}\">\n\t\t\t</UploadCollectionItem>\n\t\t</items>\n\t</UploadCollection>\n\n</mvc:View>",
		"nw/epm/refapps/ext/prod/manage/view/App.view.xml": "<!--\n\n    Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n\n-->\n<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" controllerName=\"nw.epm.refapps.ext.prod.manage.controller.App\" displayBlock=\"true\" height=\"100%\"\n\tbusy=\"{appProperties>/isAppBusy}\" busyIndicatorDelay=\"0\">\n\t<SplitApp id=\"fioriContent\" />\n</mvc:View>",
		"nw/epm/refapps/ext/prod/manage/view/SupplierCard.fragment.xml": "<!--\n\n    Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n\n-->\n<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n   <QuickView id=\"companyQuickView\">\n      <QuickViewPage\n            header=\"{i18n>xtit.supplier}\"\n            icon=\"sap-icon://account\"\n            title=\"{Name}\"\n            description=\"{FormattedContactName}\" >\n         <QuickViewGroup heading=\"{i18n>xtit.contactDetails}\">\n            <QuickViewGroupElement\n                  label=\"{/#Supplier/Phone/@sap:label}\"\n                  value=\"{Phone}\"\n                  type=\"phone\" />\n            <QuickViewGroupElement\n                  label=\"{/#Supplier/FormattedAddress/@sap:label}\"\n                  value=\"{FormattedAddress}\" />                  \n         </QuickViewGroup>\n         <QuickViewGroup heading=\"{i18n>xtit.mainContact}\">\n            <QuickViewGroupElement\n                  label=\"{/#Supplier/FormattedContactName/@sap:label}\"\n                  value=\"{FormattedContactName}\" />\n            <QuickViewGroupElement\n                  label=\"{/#Supplier/ContactPhone2/@sap:label}\"\n                  value=\"{ContactPhone2}\" \n                  type=\"mobile\" />\n            <QuickViewGroupElement\n                  label=\"{/#Supplier/ContactPhone1/@sap:label}\"\n                  value=\"{ContactPhone1}\" \n                  type=\"phone\" />\n            <QuickViewGroupElement\n                  label=\"{/#Supplier/ContactEmail/@sap:label}\"\n                  value=\"{ContactEmail}\" \n                  type=\"email\" />                      \n         </QuickViewGroup>         \n      </QuickViewPage>\n   </QuickView>\n</core:FragmentDefinition>",
		"nw/epm/refapps/ext/prod/manage/view/ProductFilterDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n\t<ViewSettingsDialog id=\"filterSettingsDialog\" confirm=\"onFilterDialogConfirm\">\r\n\t\t<filterItems>\r\n\t\t\t<ViewSettingsFilterItem id=\"availibilityFilterItem\" text=\"{i18n>xfld.availability}\" key=\"Availibility\" >\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ViewSettingsItem id=\"outofstockItem\" text=\"{i18n>xfld.outstock}\" key=\"outofstock\" />\r\n\t\t\t\t\t<ViewSettingsItem id=\"restrictedstockItem\" text=\"{i18n>xfld.restricted10}\" key=\"restrictedstock\" />\r\n\t\t\t\t\t<ViewSettingsItem id=\"instockItem\" text=\"{i18n>xfld.instock}\" key=\"instock\" />\r\n\t\t\t\t</items>\r\n\t\t\t</ViewSettingsFilterItem>\r\n\t\t\t<ViewSettingsFilterItem id=\"priceFilterItem\" text=\"{/#Product/Price/@sap:label}\" key=\"Price\" >\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ViewSettingsItem id=\"le100Item\" text=\"{viewProperties>/LE100}\" key=\"LE100\" />\r\n\t\t\t\t\t<ViewSettingsItem id=\"bt100-500Item\" text=\"{viewProperties>/BT100-500}\" key=\"BT100-500\" />\r\n\t\t\t\t\t<ViewSettingsItem id=\"bt500-1000Item\" text=\"{viewProperties>/BT500-1000}\" key=\"BT500-1000\" />\r\n\t\t\t\t\t<ViewSettingsItem id=\"gt1000Item\" text=\"{viewProperties>/GT1000}\" key=\"GT1000\" />\r\n\t\t\t\t</items>\r\n\t\t\t</ViewSettingsFilterItem>\r\n\t\t\t<!--                                                                                -->\r\n\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\r\n\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\r\n\t\t\t<!-- begin                                                                          -->\r\n\t\t\t<ViewSettingsFilterItem id=\"averageRatingFilterItem\" text=\"{/#Product/AverageRating/@sap:label}\" key=\"AverageRating\" >\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ViewSettingsItem id=\"eq0-item\" text=\"No Rating\" key=\"eq0\" />\r\n\t\t\t\t\t<ViewSettingsItem id=\"bt-1-2-item\" text=\"Avarage Rating: 1-2 (Low)\" key=\"bt-1-2\" />\r\n\t\t\t\t\t<ViewSettingsItem id=\"bt-2-4-item\" text=\"Avarage Rating: 2-4 (Medium)\" key=\"bt-2-4\" />\r\n\t\t\t\t\t<ViewSettingsItem id=\"gt4-item\" text=\"Avarage Rating: 4-5 (High)\" key=\"gt4\" />\r\n\t\t\t\t</items>\r\n\t\t\t</ViewSettingsFilterItem>\r\n\t\t\t<!-- end                                                                            -->\r\n\t\t</filterItems>\r\n\t</ViewSettingsDialog>\r\n</core:FragmentDefinition>",
		"nw/epm/refapps/ext/prod/manage/view/S2_ProductMaster.view.xml": "<mvc:View\r\n    xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\r\n    controllerName=\"nw.epm.refapps.ext.prod.manage.controller.S2_ProductMaster\"\r\n    busy=\"{= ${appProperties>/isListLoading}  &amp;&amp; !${appProperties>/isBusy} }\"\r\n    busyIndicatorDelay=\"{appProperties>/masterBusyIndicatorDelay}\" >\r\n\r\n\t<Page id=\"masterPage\" title=\"{viewProperties>/title}\" showNavButton=\"true\" navButtonPress=\"onNavButtonPress\">\r\n        <headerContent>\r\n            <Button id=\"multiSelectButton\" icon=\"{= ${appProperties>/isMultiSelect} ? 'sap-icon://sys-cancel' : 'sap-icon://multi-select' }\"\r\n                press=\"onMultiSelectPressed\"\r\n                enabled=\"{= ${appProperties>/noEditMode} &amp;&amp; ${appProperties>/lostDraftReadState} === 1 }\"/>\r\n        </headerContent>\r\n\r\n\t\t<subHeader>\r\n\t\t\t<Toolbar id=\"searchToolbar\">\r\n\t\t\t    <!--Search field which triggers a (filtered) backend search.\r\n\t\t\t        On desktop this control also provides an option to refresh the list.\r\n\t\t\t        On non desktop devices the pull to refresh control (see below) is used for that -->\r\n\t\t\t\t<SearchField id=\"SearchField\" showRefreshButton=\"{= !${device>/support/touch} }\"\r\n\t\t\t\t\tsearch=\"onSearch\" width=\"100%\"/>\r\n\t\t\t</Toolbar>\r\n\t\t</subHeader>\r\n\r\n\t\t<content>\r\n\t\t    <!-- On non desktop devices the user triggers the list refresh by pulling down the list (pull to refresh) -->\r\n\t\t    <PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onPullToRefresh\" />\r\n\r\n\t\t    <!--List of purchase orders that need to be approved. The list entries contain the information supplier name, total value, requester, change date and number of items-->\r\n\t\t    <!-- Note that the select defined for the list items ensures, that all attributes that are required on S3 view are loaded already here -->\r\n\r\n\t\t\t<!--                                                                                -->\r\n\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\r\n\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\r\n\t\t\t<!-- changed code: added ',AverageRating' to select of items of List                -->\r\n\t\t\t<List\r\n\t\t\t\tid=\"list\" selectionChange=\"onItemSelect\" modeAnimationOn=\"false\" includeItemInSelection=\"true\"\r\n\t\t\t\tmode=\"{= ${appProperties>/isMultiSelect} ? 'MultiSelect' : (${device>/system/phone} ? 'None' : 'SingleSelectMaster') }\"\r\n\t\t\t\tgrowing=\"true\" growingScrollToLoad=\"true\" updateFinished=\"onUpdateFinished\" updateStarted=\"onUpdateStarted\"\r\n\t\t\t\tnoDataText=\"{appProperties>/listNoDataText}\" swipe=\"onSwipe\"\r\n\t\t\t\tenableBusyIndicator=\"false\"\r\n                items=\"{path: '/Products',\r\n\t\t\t\t\t\tsorter: {path: 'Name', ascending: true},\r\n\t\t\t\t\t\tgroupHeaderFactory: '.createGroupHeader',\r\n\t\t\t\t\t\tparameters: {countMode: 'Inline',\r\n\t\t\t\t\t\tselect: 'Id,ImageUrl,Name,Price,CurrencyCode,SubCategoryName,MainCategoryName,QuantityUnit,StockQuantity,AverageRating'}}\">\r\n\t\t\t\t<ObjectListItem\r\n\t\t\t\t\tid=\"objectListItem\" type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onItemSelect\"\r\n\t\t\t\t\ticon=\"{ImageUrl}\" iconDensityAware=\"false\" title=\"{Name}\" numberUnit=\"{CurrencyCode}\"\r\n\t\t\t\t\tnumber=\"{path:'Price', formatter: '.formatter.formatAmount'}\" >\r\n\t\t\t\t\t<attributes>\r\n\t\t\t\t\t\t<ObjectAttribute id=\"mainCategoryAttribute\" text=\"{MainCategoryName}\" />\r\n\t\t\t\t\t\t<ObjectAttribute id=\"subCategoryAttribute\" text=\"{SubCategoryName}\" />\r\n\t\t\t\t\t\t<!--                                                                                -->\r\n\t\t\t\t\t\t<!-- Extending S/4HANA with HCP                                                     -->\r\n\t\t\t\t\t\t<!-- * UX Extension: Adding filtering/sorting/grouping for AverageRating property   -->\r\n\t\t\t\t\t\t<!-- begin                                                                          -->\r\n\t\t\t\t\t\t<ObjectAttribute text=\"Avg. Rating: {AverageRating}\" />\r\n\t\t\t\t\t\t<!-- end                                                                            -->\r\n\t\t\t\t\t</attributes>\r\n\t\t\t\t</ObjectListItem>\r\n\t\t\t\t<infoToolbar>\r\n\t\t\t\t\t<Toolbar id=\"filterToolbar\" visible=\"{viewProperties>/filterToolbarVisible}\">\r\n\t\t\t\t\t\t<Label id=\"filterInfoLabel\" text=\"{viewProperties>/filterInfoText}\" />\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</infoToolbar>\r\n\t\t\t\t<swipeContent>\r\n\t\t\t\t\t<Button id=\"swipeButton\" text=\"{i18n>xbut.delete}\" type=\"Reject\" press=\"onSwipeDeleteItem\" />\r\n\t\t\t\t</swipeContent>\r\n\t\t\t</List>\r\n\t\t</content>\r\n\r\n\t\t<!--Empty footer bar to align with the footer bar of the detail view-->\r\n\t\t<footer>\r\n\t\t\t<OverflowToolbar id=\"footerToolbar\">\r\n\t\t\t\t<ToolbarSpacer id=\"footerBeginSpacer\"/>\r\n\t\t\t\t<Button id=\"deleteButton\" text=\"{i18n>xbut.delete}\" visible =\"{appProperties>/isMultiSelect}\" enabled =\"{viewProperties>/markExists}\" press=\"onDeletePressed\" />\r\n\t\t\t\t<OverflowToolbarButton id=\"sortButton\" icon=\"sap-icon://sort\" text=\"{i18n>xbut.sort}\" tooltip=\"{i18n>xbut.sort}\"\r\n\t\t\t\t\t    enabled =\"{= ${appProperties>/noEditMode} &amp;&amp; ${appProperties>/metaDataLoadState} === 1}\" press=\"onSortPressed\" />\r\n\t\t\t\t<OverflowToolbarButton id=\"filterButton\" icon=\"sap-icon://filter\" text=\"{i18n>xbut.filter}\" tooltip=\"{i18n>xbut.filter}\"\r\n\t\t\t\t\t    enabled =\"{= ${appProperties>/noEditMode} &amp;&amp; ${appProperties>/metaDataLoadState} === 1}\" press=\"onFilterPressed\" />\r\n\t\t\t\t<OverflowToolbarButton id=\"groupButton\" icon=\"sap-icon://group-2\" text=\"{i18n>xbut.group}\"  tooltip=\"{i18n>xbut.group}\"\r\n\t\t\t\t\t    enabled =\"{= ${appProperties>/noEditMode} &amp;&amp; ${appProperties>/metaDataLoadState} === 1}\" press=\"onGroupPressed\" />\r\n\t\t\t\t<OverflowToolbarButton id=\"addButton\" icon=\"sap-icon://add\" text=\"{i18n>xbut.add}\" visible =\"{= !${appProperties>/isMultiSelect}}\"\r\n\t\t\t\t\t\ttooltip=\"{i18n>xbut.add}\" enabled =\"{= ${appProperties>/noEditMode} &amp;&amp; ${appProperties>/lostDraftReadState} === 1}\" press=\"onAddPressed\" />\r\n\t\t\t</OverflowToolbar>\r\n\t\t</footer>\r\n\t</Page>\r\n\r\n</mvc:View>",
		"nw/epm/refapps/ext/prod/manage/view/S3_ProductDetail.view.xml": "<!--\n\n    Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n\n-->\n<mvc:View xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" controllerName=\"nw.epm.refapps.ext.prod.manage.controller.S3_ProductDetail\">\n\t<NavContainer id=\"content\" defaultTransitionName=\"show\" >\n        <mvc:XMLView id=\"display\" viewName=\"nw.epm.refapps.ext.prod.manage.view.ProductDisplay\" displayBlock=\"true\" height=\"100%\" />\n        <mvc:XMLView id=\"edit\" viewName=\"nw.epm.refapps.ext.prod.manage.view.ProductEdit\" displayBlock=\"true\" height=\"100%\" />\n\t</NavContainer>\n</mvc:View>",
		"nw/epm/refapps/ext/prod/manage/view/LostDraftDialog.fragment.xml": "<!--\n\n    Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n\n-->\n<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n    <Dialog id=\"lostDraftDialog\" \n        title=\"{i18n>xtit.unsavedDraft}\" contentWidth=\"400px\" verticalScrolling=\"false\" contentHeight=\"auto\" class=\"sapUiContentPadding\" >\n        <content>\n            <Text id=\"questionText\" text=\"{path:'draft>/productDraft', formatter: '.formatter.lostDraftQuestion'}\" />\n        </content>\n        <buttons>\n            <Button id=\"resumeButton\" text=\"{i18n>xbut.resume}\" press=\"onResume\" />\n            <Button id=\"discardButton\" text=\"{i18n>xbut.discard}\" press=\"onDiscard\" />\n        </buttons>\n    </Dialog>\n</core:FragmentDefinition>",
		"nw/epm/refapps/ext/prod/manage/view/EmptyPage.view.xml": "<!--\n\n    Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n\n-->\n<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" height=\"100%\" controllerName=\"nw.epm.refapps.ext.prod.manage.controller.EmptyPage\">\n    <MessagePage id=\"messagePage\" showNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavButtonPress\" text=\"{appProperties>/emptyText}\" description=\"\"/>\n</mvc:View>",
		"nw/epm/refapps/ext/prod/manage/view/ShareSheet.fragment.xml": "<!--\n\n    Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n\n-->\n<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" >\n  <ActionSheet id=\"shareSheet\" showCancelButton=\"true\" placement=\"Top\">\n    <buttons>\n        <Button id=\"emailButton\" icon=\"sap-icon://email\" text=\"{i18n>xbut.email}\" press=\"onEmailPressed\" enabled=\"{viewProperties>/dataLoaded}\" />\n        <footerbar:AddBookmarkButton id=\"bookmarkButton\" appData=\"{path:'Name', formatter: '.formatter.appDataForTile'}\" />\n      </buttons>\n  </ActionSheet>\n</core:FragmentDefinition>",
		"nw/epm/refapps/ext/prod/manage/view/ProductEdit.view.xml": "<!--\n\n    Copyright (C) 2009-2016 SAP SE or an SAP affiliate company. All rights reserved.\n\n-->\n<mvc:View\n\txmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\"\n\tcontrollerName=\"nw.epm.refapps.ext.prod.manage.controller.ProductEdit\">\n\t<Page id=\"page\" showNavButton=\"{device>/system/phone}\" title=\"{path: 'IsNewProduct', formatter: '.formatter.formatEditTitle'}\" navButtonPress=\"onNavButtonPress\">\n\t\t<content>\n\t\t\t<!-- Form for Product Information -->\n\t\t\t<f:SimpleForm id=\"productInformationForm\" class=\"sapUiForceWidthAuto sapUiResponsiveMargin\"\n\t\t\t\tminWidth=\"1024\" maxContainerCols=\"2\" editable=\"true\" layout=\"ResponsiveGridLayout\"\n\t\t\t\tlabelSpanL=\"4\" labelSpanM=\"4\" emptySpanL=\"1\" emptySpanM=\"1\" columnsL=\"7\" columnsM=\"7\"\n\t\t\t\ttitle=\"{i18n>xtit.generalInfo}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label id=\"nameLabel\" text=\"{/#Product/Name/@sap:label}\" required=\"true\"/>\n\t\t\t\t\t<Input id=\"productNameInput\"\n\t\t\t\t\t\ttype=\"Text\" valueStateText=\"{i18n>ymsg.errorName}\"\n\t\t\t\t\t\tmaxLength=\"{path: '/#Product/Name/@maxLength', formatter: 'Number'}\"\n\t\t\t\t\t\tchange=\"onInputChange\"\n\t\t\t\t\t\tvalue=\"{path: 'Name'}\"/>\n\t\t\t\t\t<Label id=\"priceLabel\" \n\t\t\t\t\t\t\ttext=\"{parts:[{path: 'i18n>xfld.textConcat'}, {path: '/#Product/Price/@sap:label'}, {path: '/#Product/CurrencyCode/@sap:label'}], \n        \t\t\t\t\t\t\tformatter: 'jQuery.sap.formatMessage'}\" required=\"true\"/>\n\t\t\t\t\t<Input id=\"priceInput\" valueStateText=\"{i18n>ymsg.errorPrice}\"\n\t\t\t\t\t\tchange=\"onNumberChange\"\n\t\t\t\t\t\tvalue=\"{Price}\" type=\"Text\"\n\t\t\t\t\t\ttextAlign=\"Right\" />\n\t\t\t\t\t<ComboBox id=\"currencyBox\" valueStateText=\"{i18n>ymsg.errorCurrency}\" selectedKey=\"{CurrencyCode}\"\n\t\t\t\t\t\titems=\"{path: '/Currencies', length: '300'}\"  selectionChange=\"onInputChange\">\n\t\t\t\t\t\t<core:Item id=\"currencyItem\" key=\"{Code}\" text=\"{Code}\" />\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<Label id=\"categoryLabel\" text=\"{/#Product/MainCategoryName/@sap:label}\" required=\"true\"></Label>\n\t\t\t\t\t<ComboBox id=\"categoryBox\" \n\t\t\t\t\t    valueStateText=\"{i18n>ymsg.errorMainCategory}\"\n\t\t\t\t\t\tselectionChange=\"onCategoryChange\"\n\t\t\t\t\t\tselectedKey=\"{MainCategoryId}\"\n\t\t\t\t\t\titems=\"{path: '/MainCategories'}\">\n\t\t\t\t\t\t<core:Item id=\"categoryItem\" key=\"{Id}\" text=\"{Name}\" />\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<Label id=\"emptyLabel\"/>\n\t\t\t\t\t<Label id=\"subcategoryLabel\" text=\"{/#Product/SubCategoryName/@sap:label}\" required=\"true\"/>\n\t\t\t\t\t<ComboBox id=\"subcategoryBox\"\n\t\t\t\t\t\tvalueStateText=\"{i18n>ymsg.errorSubCategory}\"\n\t\t\t\t\t\tselectionChange=\"onSubcategoryChange\"\n\t\t\t\t\t\tselectedKey=\"{SubCategoryId}\"\n\t\t\t\t\t\titems=\"{path: '/SubCategories', sorter: {path: 'Name', descending: false}}\">\n\t\t\t\t\t\t<core:Item id=\"subcategoryItem\" key=\"{Id}\" text=\"{Name}\" />\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<Label id=\"productIdLabel\" text=\"{/#Product/Id/@sap:label}\"/>\n\t\t\t\t\t<Input id=\"productIdInput\" editable=\"false\" value=\"{Id}\"/>\n\t\t\t\t\t<Label id=\"descriptionLabel\" text=\"{/#Product/Description/@sap:label}\" required=\"true\"/>\n\t\t\t\t\t<TextArea id=\"descriptionArea\" \n\t\t\t\t\t    valueStateText=\"{i18n>ymsg.errorDescription}\"\n\t\t\t\t\t\tmaxLength=\"{path: '/#Product/Description/@maxLength', formatter: 'Number'}\"\n\t\t\t\t\t\tchange=\"onInputChange\"\n\t\t\t\t\t\tvalue=\"{path: 'Description'}\"/>\n\t\t\t\t\t<Label id=\"supplierLabel\" text=\"{/#Product/SupplierName/@sap:label}\" required=\"true\"/>\n\t\t\t\t\t<Input id=\"supplierInput\" \n\t\t\t\t\t    type=\"Text\" valueStateText=\"{i18n>ymsg.errorSupplier}\"\n\t\t\t\t\t\tmaxLength=\"{path: '/#Product/SupplierName/@maxLength', formatter: 'Number'}\"\n\t\t\t\t\t\tchange=\"onInputChange\"\n\t\t\t\t\t\tshowSuggestion=\"true\" suggest=\"suggestMethod\" maxSuggestionWidth=\"600px\" filterSuggests=\"false\"\n\t\t\t\t\t\tvalue=\"{path: 'SupplierName'}\"/>\n\t\t\t\t\t<Label id=\"placeHolderLabel\"/>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\n\t\t\t<!-- Form for Physical Properties -->\n\t\t\t<f:SimpleForm id=\"physicalPropertiesForm\" class=\"sapUiForceWidthAuto sapUiResponsiveMargin\"\n\t\t\t\tminWidth=\"1024\" maxContainerCols=\"2\" editable=\"true\" layout=\"ResponsiveGridLayout\"\n\t\t\t\tlabelSpanL=\"4\" labelSpanM=\"4\" emptySpanL=\"1\" emptySpanM=\"1\" columnsL=\"7\" columnsM=\"7\" title=\"{i18n>xtit.techData}\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label id=\"unitOfMeasureLabel\" text=\"{/#Product/QuantityUnit/@sap:label}\" required=\"true\"/>\n\t\t\t\t\t<ComboBox id=\"unitOfMeasureBox\" \n\t\t\t\t\t    valueStateText=\"{i18n>ymsg.errorQuantityUnit}\" selectedKey=\"{QuantityUnit}\"\n\t\t\t\t\t\tchange=\"onInputChange\"\n\t\t\t\t\t\titems=\"{path: '/QuantityUnits', sorter: {path: 'Shorttext', descending: false}}\">\n\t\t\t\t\t\t<core:Item id= \"unitOfMeasureItem\" key=\"{Unit}\" text=\"{Shorttext}\" />\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<Label id=\"heightLabel\" \n\t\t\t\t\t\ttext=\"{parts:[{path: 'i18n>xfld.textConcat'}, {path: '/#Product/DimensionHeight/@sap:label'}, {path: 'i18n>xfld.uoM'}], \n        \t\t\t\t\t\t\tformatter: 'jQuery.sap.formatMessage'}\"/>\n\t\t\t\t\t<Input id=\"heightInput\" type=\"Text\"\n\t\t\t\t\t\tchange=\"onNumberChange\"\n\t\t\t\t\t\tvalue=\"{DimensionHeight}\"\n\t\t\t\t\t\ttextAlign=\"Right\"/>\n\t\t\t\t\t<Select id=\"heightUomSelect\" \n\t\t\t\t\t    selectedKey=\"{DimensionUnit}\" items=\"{path: '/DimensionUnits'}\" change=\"onSelectChange\">\n\t\t\t\t\t\t<core:Item id=\"heightUomItem\" key=\"{Unit}\" text=\"{Text}\" />\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Label id=\"widthLabel\" \n\t\t\t\t\t\ttext=\"{parts:[{path: 'i18n>xfld.textConcat'}, {path: '/#Product/DimensionWidth/@sap:label'}, {path: 'i18n>xfld.uoM'}], \n        \t\t\t\t\t\t\tformatter: 'jQuery.sap.formatMessage'}\"/>\n\t\t\t\t\t<Input id=\"widthInput\" type=\"Text\"\n\t\t\t\t\t\tchange=\"onNumberChange\"\n\t\t\t\t\t\tvalue=\"{DimensionWidth}\"\n\t\t\t\t\t\ttextAlign=\"Right\"/>\n\t\t\t\t\t<Select id=\"widthUomSelect\" \n\t\t\t\t\t    selectedKey=\"{DimensionUnit}\" items=\"{path: '/DimensionUnits'}\" change=\"onSelectChange\">\n\t\t\t\t\t\t<core:Item id=\"widthUomItem\" key=\"{Unit}\" text=\"{Text}\" />\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Label id=\"lengthLabel\" \t\t\t\t\t\t\t\n\t\t\t\t\t\ttext=\"{parts:[{path: 'i18n>xfld.textConcat'}, {path: '/#Product/DimensionDepth/@sap:label'}, {path: 'i18n>xfld.uoM'}], \n        \t\t\t\t\t\t\tformatter: 'jQuery.sap.formatMessage'}\" />\n\t\t\t\t\t<Input id=\"lengthInput\" type=\"Text\"\n\t\t\t\t\t\tchange=\"onNumberChange\"\n\t\t\t\t\t\tvalue=\"{DimensionDepth}\" \n\t\t\t\t\t\ttextAlign=\"Right\"/>\n\t\t\t\t\t<Select id=\"lengthUomSelect\" \n\t\t\t\t\t    selectedKey=\"{DimensionUnit}\" items=\"{path: '/DimensionUnits'}\" change=\"onSelectChange\">\n\t\t\t\t\t\t<core:Item id=\"lengthUomItem\" key=\"{Unit}\" text=\"{Text}\" />\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Label id=\"weightLabel\" \n\t\t\t\t\t\ttext=\"{parts:[{path: 'i18n>xfld.textConcat'}, {path: '/#Product/WeightMeasure/@sap:label'}, {path: 'i18n>xfld.uoM'}], \n        \t\t\t\t\t\t\tformatter: 'jQuery.sap.formatMessage'}\" />\n\t\t\t\t\t<Input id=\"weightInput\" type=\"Text\"\n\t\t\t\t    \tchange=\"onNumberChange\" \n\t\t\t\t    \tvalue=\"{WeightMeasure}\"\n\t\t\t\t\t    textAlign=\"Right\"/>\n\t\t\t\t\t<Select id=\"weightUomSelect\"\n\t\t\t\t\t\tselectedKey=\"{WeightUnit}\" items=\"{path: '/WeightUnits'}\" change=\"onSelectChange\">\n\t\t\t\t\t\t<core:Item id=\"weightUomItem\" key=\"{Unit}\" text=\"{Text}\" />\n\t\t\t\t\t</Select>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\n\t\t\t<!-- Sub-View for Uploading/Removing Images -->\n\t\t\t<mvc:XMLView viewName=\"nw.epm.refapps.ext.prod.manage.view.ProductDraftUploadImages\" id=\"View_ImageUpload\" />\n\t\t\t\n\t\t\t<!--Allow adding fields at the bottom of the edit screen -->\n\t\t\t<core:ExtensionPoint name=\"extensionBottomOfEditScreen\"/>\n\t\t</content>\n\t\t<footer>\n\t    \t<OverflowToolbar id=\"footerToolbar\">\n\t\t\t\t<ToolbarSpacer id=\"footerBeginSpacer\" />\n\t\t\t\t<Button id=\"saveButton\" text=\"{i18n>xbut.save}\" press=\"onSavePressed\"/>\n\t\t\t\t<Button id=\"cancelButton\" text=\"{i18n>xbut.cancel}\" press=\"onCancelPressed\"/>\n\t\t\t\t<Button id=\"shareButton\" icon=\"sap-icon://action\"  press=\"onSharePressed\"/>\n\t\t\t</OverflowToolbar>\n\t\t</footer>\t\t\n\t</Page>\n</mvc:View>"
	}
});